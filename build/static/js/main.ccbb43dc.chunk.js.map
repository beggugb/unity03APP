{"version":3,"sources":["assets/img/login.png","helpers/history.js","reducers/usuarios.reducers.js","reducers/articulos.reducers.js","reducers/categorias.reducers.js","reducers/marcas.reducers.js","reducers/proveedores.reducers.js","reducers/compras.reducers.js","reducers/clientes.reducers.js","reducers/ventas.reducers.js","reducers/empresa.reducers.js","reducers/informes.reducers.js","reducers/cajasitems.reducers.js","reducers/cajas.reducers.js","reducers/almacenes.reducers.js","reducers/tareas.reducers.js","reducers/cobros.reducers.js","reducers/pagos.reducers.js","reducers/pucs.reducers.js","reducers/comprobantes.reducers.js","reducers/contables.reducers.js","reducers/procesos.reducers.js","reducers/tdcs.reducers.js","reducers/users.reducers.js","reducers/tickets.reducers.js","reducers/cotizaciones.reducers.js","reducers/salarios.reducers.js","reducers/personas.reducers.js","reducers/horarios.reducers.js","reducers/prospectos.reducers.js","reducers/estudios.reducers.js","reducers/experiencias.reducers.js","reducers/contratos.reducers.js","reducers/cargos.reducers.js","reducers/ventaitems.reducers.js","reducers/unidades.reducers.js","reducers/index.js","helpers/store.js","helpers/api.js","helpers/authHeader.js","helpers/locations.js","helpers/customStyles.js","services/usuario.service.js","services/crud.service.js","services/caja.service.js","actions/crud.actions.js","actions/usuario.actions.js","actions/caja.actions.js","actions/mail.actions.js","pages/COMPRAS/InicioView.jsx","components/Pagination.jsx","helpers/funciones.js","helpers/dataLoad.js","pages/COMPRAS/Compras/components/TableCompras.jsx","pages/COMPRAS/Compras/components/CompraResumen.jsx","pages/COMPRAS/Compras/components/SearchCompra.jsx","pages/COMPRAS/Proveedores/components/SingleProveedor.jsx","pages/COMPRAS/Compras/components/FormCompra.jsx","pages/INVENTARIOS/Articulos/components/SearchsArticulo.jsx","pages/COMPRAS/Compras/components/ListaCompras.jsx","pages/COMPRAS/Compras/components/EditCompra.jsx","pages/COMPRAS/Compras/Compras.jsx","pages/COMPRAS/Proveedores/components/TableProveedores.jsx","pages/COMPRAS/Proveedores/components/SearchProveedor.jsx","pages/COMPRAS/Proveedores/components/ProveedorImagen.jsx","pages/COMPRAS/Proveedores/components/EditProveedor.jsx","pages/COMPRAS/Proveedores/components/ProveedorResumen.jsx","pages/COMPRAS/Proveedores/ProveedoresView.jsx","pages/COMPRAS/Pagos/components/TablePagos.jsx","pages/COMPRAS/Pagos/components/SearchPago.jsx","pages/COMPRAS/Pagos/components/EditPago.jsx","pages/COMPRAS/Pagos/Pagos.jsx","components/subCompra.jsx","routes.jsx","pages/COMPRAS/Informes/Movimientos.jsx","pages/COMPRAS/Informes/MovimientosView.jsx","pages/COMPRAS/Informes/Pagos.jsx","pages/COMPRAS/Informes/PagosView.jsx","pages/COMPRAS/Pedidos/components/TablePedidos.jsx","pages/COMPRAS/Pedidos/components/PedidoResumen.jsx","pages/COMPRAS/Pedidos/components/SearchPedido.jsx","pages/COMPRAS/Pedidos/components/FormPedido.jsx","pages/INVENTARIOS/Articulos/components/SearchpArticulo.jsx","pages/COMPRAS/Pedidos/components/ListaPedidos.jsx","pages/COMPRAS/Proveedores/components/ProveedorCotizacion.jsx","pages/COMPRAS/Pedidos/components/ListaProveedores.jsx","pages/COMPRAS/Pedidos/components/EditPedido.jsx","pages/COMPRAS/Pedidos/Pedidos.jsx","layout/Compras/Compras.jsx","pages/SECURITY/LoginView.jsx","layout/Post/Post.jsx","pages/CRM/Tareas/components/Calendar.jsx","pages/CRM/Tareas/components/FormTarea.jsx","pages/CRM/InicioView.jsx","pages/CRM/Clientes/components/ClienteResumen.jsx","pages/CRM/Clientes/components/ClienteSaldo.jsx","pages/CRM/Clientes/components/TableClientes.jsx","pages/CRM/Clientes/components/SearchCliente.jsx","pages/CRM/Clientes/components/ClienteImagen.jsx","pages/CRM/Clientes/components/ClienteNit.jsx","pages/CRM/Clientes/components/ClienteCi.jsx","pages/VENTAS/Ventas/components/TableVentasCliente.jsx","pages/CRM/Clientes/components/EditCliente.jsx","pages/CRM/Clientes/ClientesView.jsx","pages/CRM/Tickets/components/TicketsResumen.jsx","pages/CRM/Tickets/components/TableTickets.jsx","pages/CRM/Tickets/components/SearchTickets.jsx","pages/CRM/Clientes/components/TicketCliente.jsx","pages/CRM/Tickets/components/ItemsTickets.jsx","pages/CRM/Tickets/components/EditTickets.jsx","pages/CRM/Tickets/TicketsView.jsx","pages/CRM/Cotizaciones/components/TableCotizaciones.jsx","pages/CRM/Cotizaciones/components/CotizacionResumen.jsx","pages/CRM/Cotizaciones/components/SearchCotizacion.jsx","pages/CRM/Clientes/components/CotizacionCliente.jsx","pages/CRM/Cotizaciones/components/FormCotizacion.jsx","pages/INVENTARIOS/Articulos/components/SearchcArticulo.jsx","pages/CRM/Cotizaciones/components/ListaCotizaciones.jsx","pages/CRM/Cotizaciones/components/EditCotizacion.jsx","pages/CRM/Cotizaciones/Cotizaciones.jsx","pages/CRM/Prospectos/components/TableProspectos.jsx","pages/CRM/Prospectos/components/ProspectoResumen.jsx","pages/CRM/Prospectos/components/SearchProspecto.jsx","pages/CRM/Prospectos/components/FormProspecto.jsx","pages/CRM/Clientes/components/ProspectoCliente.jsx","pages/CRM/Prospectos/components/ListaProspectos.jsx","pages/INVENTARIOS/Articulos/components/ArticuloProspecto.jsx","pages/INVENTARIOS/Articulos/components/SearchArticuloProspecto.jsx","pages/CRM/Prospectos/components/EditProspecto.jsx","pages/CRM/Prospectos/Prospectos.jsx","components/subCliente.jsx","pages/CRM/Informes/Clientes.jsx","pages/CRM/Informes/ClientesView.jsx","pages/CRM/Informes/Cotizaciones.jsx","pages/CRM/Informes/CotizacionesView.jsx","pages/CRM/Informes/Prospectos.jsx","pages/CRM/Informes/ProspectosView.jsx","pages/CRM/Informes/Tickets.jsx","pages/CRM/Informes/TicketsView.jsx","layout/Crm/Crm.jsx","pages/HOME/InicioView.jsx","layout/Inicio/Inicio.jsx","pages/CONTABILIDAD/Contabilidad.jsx","pages/CONTABILIDAD/Comprobantes/components/TableComprobantes.jsx","pages/CONTABILIDAD/Comprobantes/components/ComprobanteResumen.jsx","pages/CONTABILIDAD/Comprobantes/components/SearchComprobante.jsx","pages/CONTABILIDAD/Pucs/components/SearchsPuc.jsx","pages/CONTABILIDAD/Comprobantes/components/ListaComprobantes.jsx","pages/CONTABILIDAD/Comprobantes/components/EditComprobante.jsx","pages/CONTABILIDAD/Comprobantes/Comprobantes.jsx","pages/CONTABILIDAD/Pucs/components/SearchPuc.jsx","pages/CONTABILIDAD/Pucs/components/TablePucs.jsx","pages/CONTABILIDAD/Pucs/components/EditPuc.jsx","pages/CONTABILIDAD/Pucs/PucsView.jsx","pages/CONTABILIDAD/Tdc/components/FormTdc.jsx","pages/CONTABILIDAD/Tdc/components/Calendar.jsx","pages/CONTABILIDAD/Tdc/TdcView.jsx","components/subConta.jsx","pages/CONTABILIDAD/Diarios/components/Diarios.jsx","pages/CONTABILIDAD/Diarios/DiariosView.jsx","pages/CONTABILIDAD/Mayores/components/Mayores.jsx","pages/CONTABILIDAD/Pucs/components/Pucs.jsx","pages/CONTABILIDAD/Mayores/MayoresView.jsx","pages/CONTABILIDAD/Saldos/components/Saldos.jsx","pages/CONTABILIDAD/Saldos/SaldosView.jsx","layout/Finanzas/Finanzas.jsx","pages/INVENTARIOS/Categorias/components/ListaCategoria.jsx","pages/INVENTARIOS/Articulos/components/ListaArticulos.jsx","pages/TPVD/Tpv/components/ListaItems.jsx","pages/TPVD/Tpv/components/ButtonTpv.jsx","pages/CRM/Clientes/components/SingleCliente.jsx","pages/TPVD/Tpv/components/Recibotpv.jsx","pages/TPVD/Tpv/components/FormVenta.jsx","pages/TPVD/Tpv/components/FormCodigo.jsx","pages/TPVD/Tpv/Tpv.jsx","pages/TPVD/Cajas/components/TableCajas.jsx","pages/TPVD/Cajas/components/CajasItemsDetalle.jsx","pages/TPVD/Cajas/components/CajasConsolidado.jsx","pages/TPVD/Cajas/components/EditCaja.jsx","pages/TPVD/Cajas/CajasView.jsx","components/subCaja.jsx","pages/TPVD/CajasItems/components/CajasItemsTable.jsx","pages/TPVD/Cajas/components/CajaDetalle.jsx","pages/TPVD/CajasItems/components/CajasItemsForm.jsx","pages/TPVD/CajasItems/CajasItemsView.jsx","layout/Tpdv/Tpdv.jsx","pages/SECURITY/Empresa/EmpresaImagen.jsx","pages/SECURITY/Empresa/EditEmpresa.jsx","pages/SECURITY/Usuarios/components/TableUsuarios.jsx","pages/SECURITY/Usuarios/components/EditUsuario.jsx","pages/SECURITY/Usuarios/UsuariosView.jsx","layout/Tool/Tool.jsx","pages/RRHH/InicioView.jsx","pages/RRHH/Salarios/components/TableSalarios.jsx","pages/RRHH/Salarios/components/EditSalario.jsx","pages/RRHH/Salarios/SalariosView.jsx","pages/RRHH/Personas/components/PersonaResumen.jsx","pages/RRHH/Personas/components/TablePersonas.jsx","pages/RRHH/Personas/components/SearchPersona.jsx","pages/RRHH/Personas/components/PersonaImagen.jsx","pages/RRHH/Estudios/components/TableEstudios.jsx","pages/RRHH/Estudios/components/EditEstudio.jsx","pages/RRHH/Estudios/EstudiosView.jsx","pages/RRHH/Experiencias/components/TableExperiencias.jsx","pages/RRHH/Experiencias/components/EditExperiencia.jsx","pages/RRHH/Experiencias/ExperienciasView.jsx","pages/RRHH/Personas/components/EditPersona.jsx","pages/RRHH/Personas/PersonasView.jsx","pages/RRHH/Horarios/components/TableHorarios.jsx","pages/RRHH/Horarios/components/EditHorario.jsx","pages/RRHH/Horarios/HorariosView.jsx","pages/RRHH/Contratos/components/ContratoResumen.jsx","pages/RRHH/Contratos/components/TableContratos.jsx","pages/RRHH/Contratos/components/SearchContrato.jsx","pages/RRHH/Contratos/components/ContratoImagen.jsx","pages/RRHH/Horarios/components/SelectHorario.jsx","pages/RRHH/Salarios/components/SelectSalario.jsx","pages/RRHH/Cargos/components/SelectCargo.jsx","pages/RRHH/Personas/components/ContratoPersona.jsx","pages/RRHH/Contratos/components/EditContrato.jsx","pages/RRHH/Contratos/ContratosView.jsx","pages/RRHH/Cargos/components/TableCargos.jsx","pages/RRHH/Cargos/components/EditCargo.jsx","pages/RRHH/Cargos/CargosView.jsx","layout/Rrhh/Rrhh.jsx","pages/INVENTARIOS/InicioView.jsx","pages/INVENTARIOS/Articulos/components/TableArticulos.jsx","pages/INVENTARIOS/Articulos/components/SearchArticulo.jsx","pages/INVENTARIOS/Articulos/components/ArticuloImagen.jsx","pages/INVENTARIOS/Categorias/components/SelectCategoria.jsx","pages/INVENTARIOS/Marcas/components/SelectMarca.jsx","pages/INVENTARIOS/Unidades/components/SelectUnidad.jsx","pages/INVENTARIOS/Articulos/components/EditArticulo.jsx","pages/INVENTARIOS/Articulos/components/ArticuloResumen.jsx","pages/INVENTARIOS/Articulos/components/ArticuloEtiquetas.jsx","pages/INVENTARIOS/Articulos/components/ArticuloQr.jsx","pages/INVENTARIOS/Articulos/ArticulosView.jsx","components/subInventario.jsx","pages/INVENTARIOS/Informes/Existencias.jsx","pages/INVENTARIOS/Articulos/components/ItemArticulo.jsx","pages/INVENTARIOS/Almacenes/components/SelectAlmacen.jsx","pages/INVENTARIOS/Categorias/components/SelectCategorias.jsx","pages/INVENTARIOS/Informes/ExistenciasView.jsx","pages/INVENTARIOS/Informes/Movimientos.jsx","pages/INVENTARIOS/Informes/MovimientosView.jsx","pages/INVENTARIOS/Categorias/components/SearchCategoria.jsx","pages/INVENTARIOS/Categorias/components/TableCategorias.jsx","pages/INVENTARIOS/Categorias/components/EditCategoria.jsx","pages/INVENTARIOS/Categorias/CategoriasView.jsx","pages/INVENTARIOS/Marcas/components/SearchMarca.jsx","pages/INVENTARIOS/Marcas/components/TableMarcas.jsx","pages/INVENTARIOS/Marcas/components/EditMarca.jsx","pages/INVENTARIOS/Marcas/MarcasView.jsx","pages/INVENTARIOS/Unidades/components/SearchUnidad.jsx","pages/INVENTARIOS/Unidades/components/TableUnidades.jsx","pages/INVENTARIOS/Unidades/components/EditUnidad.jsx","pages/INVENTARIOS/Unidades/UnidadesView.jsx","layout/Inventarios/Inventario.jsx","pages/VENTAS/InicioView.jsx","pages/VENTAS/Ventas/components/TableVentas.jsx","pages/VENTAS/Ventas/components/VentaResumen.jsx","pages/VENTAS/Ventas/components/SearchVenta.jsx","pages/VENTAS/Ventas/components/FormVenta.jsx","pages/INVENTARIOS/Articulos/components/SearchvArticulo.jsx","pages/VENTAS/Ventas/components/ListaVentas.jsx","pages/VENTAS/Ventas/components/EditVenta.jsx","pages/VENTAS/Ventas/Ventas.jsx","components/subVenta.jsx","pages/VENTAS/Informes/Movimientos.jsx","pages/VENTAS/Informes/MovimientosView.jsx","pages/VENTAS/Cobros/components/TableCobros.jsx","pages/VENTAS/Cobros/components/SearchCobro.jsx","pages/VENTAS/Cobros/components/EditCobro.jsx","pages/VENTAS/Cobros/Cobros.jsx","pages/VENTAS/Informes/Cobros.jsx","pages/VENTAS/Informes/CobrosView.jsx","layout/Ventas/Ventas.jsx","PrivateRoute.js","App.js","index.js"],"names":["module","exports","history","createBrowserHistory","basename","initialState","loading","data","items","pagina","paginas","total","modalView","modalViews","modalViewq","estado","tipo","indicador","item","id","codigo","codigoBarras","nombre","nombreCorto","categoriaId","colores","marcaId","industria","descripcion","inCatalogo","inOferta","precioCosto","precioVenta","pGanancia","unidadId","modelo","impuestoIva","impuestoIt","pServicio","stockMinimo","stockTiempo","origen","sma","te","cp","ter","smi","ss","ms","pr","nm","nv","categoria","marca","pais","tipoFiscal","tipoProveedor","razonSocial","direccion","ciudad","contacto","email","web","telefono","nit","filename","formaPago","banco","cuenta","observaciones","indicadorTotal","plan","pitems","nota","nro","proveedorId","proveedors","fechaEmision","fechaVencimiento","glosa","nroItems","nroPagos","proveedor","usuario","nombres","gestion","totalGeneral","totalDescuento","subTotal","iva","impuesto","descuento","montoTotal","saldoTotal","pagoTotal","nombreNit","codpostal","tipoInteres","filenameNit","filenameCi","grupo","personaContacto","cuentaBancario","createdAt","Date","artId","fechaVenta","usuarioId","clienteId","clients","nits","cliente","formEntrega","registro","smtpHost","smtpUser","smtpPassword","smtpSecure","smtpPort","licencia","labelCotizacion","garantiaCotizacion","politicaCotizacion","moneda","labelMoneda","compraT","suma","comprasLabel","comprasItem","resCompras","pagosPendientes","pagosRealizados","compras","pagos","ventaT","ventasLabel","ventasItem","resVentas","cobrosPendientes","cobrosRealizados","ventas","cobroTotal","prealizados","ppendientes","crealizados","cpendientes","cobros","clienteT","cotizacionT","prospectoT","ticketT","clientes","cotizaciones","tickets","prospectos","movimientos","zporcentajes","zcantidades","yingresos","ysalidas","labelProductos","itemsMinimo","itemsActual","sumaTotal","cantidadTotal","monto","label","cajaId","montoInicial","montoEgreso","montoIngreso","montoFinal","fechaCierre","title","start","end","backgroundColor","selectable","detalle","ventaId","compraId","venta","ventaItems","compra","compraItems","nivel","fechaComprobante","tipoComprobante","numComprobante","glosaComprobante","montoImpuesto","montoSubtotal","tdc","tDebe","tHaber","diarios","mayores","saldos","debitoCierre","creditoCierre","sumaCredito","sumaDebito","totalAcreedor","totalDeudor","totalCreditos","totalDebitos","titem","username","password","rolId","sucursalId","isCajero","modulos","fechaRegistro","ipagina","ipaginas","itotal","fechaCotizacion","montoHora","montoMinuto","d1","d2","d3","d4","fecha","vencimiento","resultado","medidas","articuloId","carrera","institucion","personaId","empresa","desde","hasta","motivo","fechaInicio","fechaFin","plazo","contratado","person","horarioId","salarioId","cargoId","salario","horario","cargo","persona","ci","paterno","materno","rootReducer","combineReducers","usuarios","state","action","type","response","loggingIn","ventaitems","value","view","values","cantidad","props","newItem","valor","iok","filter","length","parseInt","unidades","cargos","contratos","experiencias","estudios","horarios","personas","sumas","salarios","ticket","tdcs","users","informes","pendientes","realizados","labelUsuario","labelArticulo","almacenId","labelAlmacen","labelCategoria","existencias","saldo","cajas","categorias","categoriasDetalle","libros","consolidado","comprobantes","procesos","contables","result","result2","pucs","articulos","aitems","tareas","almacenes","caja","cajasitems","marcas","proveedores","toastr","toastrReducer","store","createStore","applyMiddleware","thunkMiddleware","api","authHeader","user","JSON","parse","localStorage","getItem","token","locations","ciudades","paises","monedas","customStyles","container","provided","height","textAlign","border","fontSize","width","padding","control","provider","minHeight","margin","input","color","borderRadius","singleValue","paddingBottom","dropdownIndicator","paddingTop","indicatorSeparator","valueContainer","clearIndicator","customs","custom","customi","usuarioService","login","requestOptions","method","headers","body","stringify","fetch","then","handleResponse","console","log","setItem","almacen","logout","text","ok","status","error","message","statusText","Promise","reject","removeItem","crudService","GET_DATA","payload","page","num","prop","orden","GET_ITEM","pky","GET_ITEM_SINGLE","GET_ITEMS","GET_SEARCH","dato","GET_SEARCHS","GET_INFORMES","GET_CONTABLES","GET_LIST","GET_DELETE","SET_ADD","SET_ADD_SINGLE","SET_UPDATE","SET_UPDATES","SET_UPLOAD_IMAGEN","datoId","SEND_MAIL","SET_COPIAR","GET_SEARCH_ITEMS","GET_SEARCHS_ITEMS","cajaService","getListDetalle","getItems","crudActions","xredux","dispatch","resRedux","catch","err","GET_ITEM_LOAD","articulo","GET_ITEM_COMPUESTO","success","GET_DELETE_LOAD","SET_CHANGE","SET_ADD_LOAD","VENTA_DIRECTA","SET_APROBAR","setTimeout","GET_DASHBOARD","usuarioActions","push","cajaActions","ListaGet","ItemGet","cajau","itemsu","viewModal","est","setAdd","mailActions","InicioView","useDispatch","useSelector","getFullYear","useEffect","makeHttpRequestWithPage","chart","subtitle","xAxis","categories","credits","enabled","series","name","crosshair","yAxis","min","plotOptions","column","pointPadding","borderWidth","samples","line","dataLabels","enableMouseTracking","className","Row","Col","md","Card","CardHeader","icon","faShoppingCart","CardTitle","faReceipt","Intl","NumberFormat","style","currency","minimumFractionDigits","format","faDollarSign","faHandHoldingUsd","highcharts","Highcharts","options","Pagination","renderPageNumbers","current","pageNumber","i","map","number","index","classes","key","Button","onClick","Nav","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","defaultVal","getMes","mesHoy","m","day","nday","getDay","getMonth","y","tipoCliente","grupoCliente","formaPagos","formaEntregas","impuestos","tipoPromociones","tiposPersona","tiposProveedor","tiposLlamada","pages","niveles","clasificaciones","tiposServicio","TableCompras","getComponent","useState","pag","setpag","CardBody","Table","Input","onChange","checked","fechaCompra","faLock","faLockOpen","CardFooter","FormGroup","row","Label","for","sm","styles","defaultValue","isClearable","e","changeSelect","ComponentToPrint","fechaHoy","this","colSpan","unidad","xnota","cuotas","xplan","cuota","fechaPago","React","PureComponent","ArticuloResumen","componentRef","useRef","trigger","content","ref","SearchCompras","setProp","setValue","setview","viewx","setviewx","viewz","setviewz","viewy","setviewy","setcuota","setplan","contado","setContado","setBanco","inicial","setInicial","pinicial","setPinicial","setnombres","setemail","setobservaciones","toggleModalView","toggleModalViewx","toggleModalViewz","toggleModalViewy","ButtonGroup","faPlus","faEdit","faTrash","faFilePdf","faCoins","faEnvelope","Form","onSubmit","event","preventDefault","target","faTimes","faSearch","Modal","isOpen","toggle","ModalBody","faCheck","newArray","diok","dd","parseFloat","mes","calcular","xarray","xcode","aprobarCompra","CompraResumen","onInvalid","setCustomValidity","onInput","required","SingleProveedor","setmodalView","itt","readOnly","asignar","faArrowRight","FormCompra","form","sTotal","changesHandler","changeHandler","eItem","submitHandle","faSave","SearchsArticulos","open","setOpen","setName","setCantidad","setValor","setArticulo","clearInput","upCantidad","upValor","ites","cTotal","gTotal","gImp","repeat","itemCompra","add","faArrowDown","ListGroup","ListGroupItem","handleAsignar","ListaCompras","array","splice","EditCompra","d","faArrowLeft","SearchsArticulo","Compras","component","setComponent","useCallback","io","SearchCompra","TableProveedores","SearchProveedores","faPeopleCarry","faFileExport","faCopy","ProveedorImagen","file","setFile","imagePreviewUrl","setImagePreviewUrl","alt","src","reader","FileReader","files","onloadend","readAsDataURL","handleImageChange","faImage","formData","FormData","append","handleSubmit","faUpload","EditProveedores","citys","setcitys","indice","datc","changesPaises","ProveedorResumen","ProveedoresView","SearchProveedor","EditProveedor","TablePagos","registerLocale","es","SearchPago","faMoneyBill","EditPago","efectivo","setEfectivo","cheque","setCheque","nbanco","setNBanco","planId","pago","setpago","xitem","xpago","Pagos","subMenu","expand","NavItem","to","link","faChevronDown","faChevronRight","InventarioRouter","ContabilidadRouter","CajaRouter","InformeComprasRouter","InformeVentasRouter","InformeClientesRouter","InformeInventariosRouter","pvalue1","pvalue2","pestado","pdata","psuma","ppago","psaldo","puser","Movimientos","value1","value2","ptotal","estados","MovimientosView","onChange1","onChange2","setEstado","locale","selected","date","fechaPagado","PagosView","SearchPedidos","PedidoResumen","subject","SearchpArticulos","ProveedorCotizacion","ListaProveedores","it","faCheckCircle","faTimesCircle","handleEliminar","faPhone","EditPedido","FormPedido","SearchpArticulo","ListaPedidos","Pedidos","SearchPedido","TablePedidos","override","css","Compra","itemr","setItemr","changeModule","tab","path","verificar","layout","Dashboard","Proveedores","Cotizaciones","Informes","size","faHome","faBell","faQuestion","faSignOutAlt","activeClassName","Ipagos","LoginView","setToken","setUser","handleChange","require","faUser","placeholder","faKey","Post","Calendar","inicio","fin","locales","esLocale","timeZone","navLinks","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","defaultView","header","left","center","right","events","eventClick","kko","extendedProps","FormTarea","faUsersCog","faUsers","faHeadset","faBookmark","marginRight","ClienteResumen","aitem","atotal","apago","asaldo","ventaTotal","ClienteSaldo","TableClientes","SearchClientes","dok","viewArticulos","ClienteImagen","ClienteNit","ClienteCi","TableVentasCliente","EditClientes","iok1","setiok1","iok2","setiok2","iok3","setiok3","settab","setChange","kit","tabs","NavLink","TabContent","activeTab","TabPane","tabId","celular","ClienteView","toggleModalViews","SearchCliente","EditCliente","pitem","TicketResumen","TableTickets","SearchTickets","TicketCliente","ItemsTickets","setdetalle","loki","ticketId","tipos","EditTickets","changetHandler","TicketsView","TicketsResumen","TableCotizaciones","formaEntrega","VentaResumen","iempresa","SearchVenta","createHandle","CotizacionResumen","cotizacionId","CotizacionCliente","FormVenta","ivalue","tDescuento","changeDescuento","max","SearchcArticulos","itemCotizacion","stock","ListaCotizaciones","EditVenta","FormCotizacion","SearchcArticulo","Cotizacions","SearchCotizacion","EditCotizacion","TableProspectos","ProspectoResumen","prospectoId","FormProspecto","ProspectoCliente","niok","nroMensajes","nroEmail","ListaProspectos","ArticuloProspecto","SearchArticuloProspecto","EditProspecto","Prospectos","SearchProspecto","subCliente","ClientesView","Clientes","CotizacionesView","ProspectosView","Tickets","Crm","Promociones","CrmInicio","ICotizaciones","IProspectos","ITickets","faMoneyCheck","faBoxOpen","faChartLine","faCashRegister","faCogs","Contabilidad","plotBackgroundColor","plotBorderWidth","plotShadow","tooltip","pointFormat","accessibility","point","valueSuffix","pie","allowPointSelect","cursor","colorByPoint","sliced","capital","labels","rotation","fontFamily","legend","align","gastos","TableComprobantes","writtenNumber","lang","toString","split","nCheque","nBanco","debe","haber","iteme","SearchComprobantes","setTipo","faChartArea","aprobarComprobante","ComprobanteResumen","SearchsPuc","auxiliar","setAuxiliar","puc","setPuc","setDebe","setHaber","search","searchTerm","isNaN","toLowerCase","trim","sDebe","sHaber","itemAsiento","pucId","comprobanteId","ListaComprobantes","EditComprobante","step","presicion","Comprobantes","SearchComprobante","SearchPuc","faTags","TablePucs","changeNivel","EditPuc","changeHandlers","PucsView","toogleModalView","ff","setModalView","setfecha","dateClick","arg","dateStr","modalClassName","FormTdc","TareasView","subConta","pdebito","pcredito","DiariosView","Diarios","pcuenta","fechaAsiento","debito","credito","cdebito","ccredito","Mayores","Pucs","MayoresView","itpuc","rowSpan","deudor","acreedor","pdeudor","pacreedor","Saldos","SaldosView","Finanzas","Puc","Tdc","Libros","ListaCategoria","ListaArticulos","itemVenta","sumStock","oferta","faStar","ListaItems","cnt","setCnt","idBlock","idSubTotal","onDoubleClick","SingleCliente","Recibotpv","recibido","setRecibido","cambio","setCambio","handlePrint","useReactToPrint","nroItem","toFixed","FormCodigo","setCodigo","faBarcode","Tpv","ButtonTpv","TableCajas","pcaja","fechaCaja","CajasItemsDetalle","updatedAt","CajasConsolidado","EditCaja","views","setviews","viewCaja","faTicketAlt","dat","onAprobar","CajasView","subCaja","CajasItemsTable","cajai","CajaDetalle","CajasItemsForm","CajasItemsView","params","match","Tpdv","Cajas","CajasItems","EmpresaImagen","EditEmpresa","settipo","TableUsuarios","rol","roles","EditUsuario","pass1","setpass1","pass2","setpass2","undefined","UsuariosView","Tool","Empresa","Usuarios","TableSalarios","EditSalario","SalariosView","destudios","dexperiencias","PersonaResumen","TablePersonas","SearchPersonas","PersonaImagen","TableEstudios","deleteItem","carreras","instituciones","EditEstudio","universidadId","changesHandleri","changesHandlern","changesHandlere","EstudiosView","TableExperiencias","motivos","EditExperiencia","changesHandlers","ExperienciasView","EditPersonas","changesCiudades","PersonaView","SearchPersona","EditPersona","TableHorarios","EditHorario","onTimeChange1","colon","showSeconds","onTimeChange2","onTimeChange3","onTimeChange4","HorariosView","ContratoResumen","TableContratos","true","SearchContratos","faFile","ContratoImagen","SelectHorario","SelectSalario","SelectCargo","ContratoPersona","EditContratos","ContratoView","SearchContrato","EditContrato","TableCargos","EditCargo","CargosView","Rrhh","Salarios","Personas","Horarios","Contratos","Cargos","RRhhInicio","ordenes","overflow","bar","verticalAlign","x","floating","defaultOptions","shadow","cantidades","TableArticulos","SearchArticulos","viewArticulo","faQrcode","ArticuloImagen","SelectCategoria","SelectMarca","SelectUnidad","EditArticulos","changeSwitch","maxLength","peso","volumen","medida","faPlusCircle","tem","ArticuloEtiquetas","ArticuloQr","ArticulosView","toggleModalViewq","SearchArticulo","EditArticulo","lalmacen","lcategoria","larticulo","prango","pvrango","pstock","Existencias","rango","vrango","ItemArticulo","SelectAlmacen","lb","SelectCategorias","stocks","rangos","ExistenciasView","setstock","setRango","setVrango","ptipo","destino","SearchCategoria","TableCategorias","abreviacion","EditCategoria","CategoriasView","SearchMarca","TableMarcas","EditMarca","MarcasView","SearchUnidad","TableUnidades","EditUnidad","UnidadsView","Inventario","Articulos","Utils","Inventarios","IMovimientos","Marcas","Unidades","TableVentas","aprobarVenta","SearchvArticulos","ListaVentas","SearchvArticulo","Ventas","TableCobros","SearchCobro","EditCobro","Cobros","VentasLayout","Icobros","PrivateRoute","rest","render","createElement","pathname","from","location","App","timeOut","newestOnTop","preventDuplicates","progressBar","position","getState","transitionIn","transitionOut","closeOnToastrClick","exact","AdminLayout","InicioLayout","CrmLayout","FinanzasLayout","TpdvLayout","ToolLayout","RRhhLayout","InventariosLayout","ReactDOM","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.ccbb43dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.ac574e93.png\";","import { createBrowserHistory } from 'history'\n\n/*export const history = createBrowserHistory();*/\n\nexport const history = createBrowserHistory({ basename: '/app' }) ;","const initialState = {     \n    loading: false,\n    data:[]\n   } \n  \n  export function usuarios(state = initialState, action) {\n    switch (action.type) {   \n      case 'USUARIOS_LISTA':\n        return {\n        ...state,\n        data: action.response\n      };          \n      case 'SET_LOADING':\n        return {        \n          ...state, \n            loading: action.state\n        };\n      case 'LOGIN_SUCCESS':\n        return {        \n          ...state, \n            loggingIn: true,            \n        };        \n      case 'LOGIN_USER':\n        return {           \n            ...state\n        };\n      case 'LOGIN_LOGOUT':\n        return {           \n            \n        };                                          \n      default:\n        return state\n    }\n  }\n  \n  ","const initialState = {\n  data: [],\n  items: [], \n  pagina: 0,\n  paginas: 0,\n  total: 0,\n  modalView: false,\n  modalViews: false,\n  modalViewq: false,\n  estado:true,\n  tipo:'pdf',\n  indicador:0,\n  item:{   \n    id:'',   \n    codigo: '',\n    codigoBarras: '',      \n    estado: true,      \n    nombre:'',\n    nombreCorto:'',\n    categoriaId:1,\n    colores:[{\"value\":\"amarillo\",\"label\":\"amarillo\"}],\n    marcaId:1,\n    industria:'',\n    tipo:'',\n    descripcion:'',\n    inCatalogo: false,\n    inOferta: false,\n    precioCosto:0.00,\n    precioVenta:0.00,\n    pGanancia:0,\n    unidadId:1,\n    modelo:'',\n    impuestoIva:0,\n    impuestoIt:0,\n    pServicio:0,\n    stockMinimo:0,\n    stockTiempo:0,\n    origen:'compra',\n    sma: 0,\n    te: 0,\n    cp: 0,\n    ter: 0,\n    smi: 0,\n    ss: 0,\n    ms: 0,\n    pr: 0,\n    nm: 0,\n    nv: '',\n    categoria:{\n        id:'',\n        nombre:''\n      },\n    marca:{\n        id:'',\n        nombre:''\n    }  \n  }    \n};\n\nexport function articulos(state = initialState, action) {\n  switch (action.type) {\n     case \"ARTICULOS_INDICADOR\":\n      return {\n        ...state,\n        indicador: action.value\n      };\n     case \"ARTICULOS_VIEW\":\n      return {\n        ...state,\n        modalView: action.view,\n        tipo: action.tipo\n      }; \n      case \"ARTICULOS_BARRAS\":\n        return {\n          ...state,\n          modalViews: action.view\n        }; \n      case \"ARTICULOS_QR\":\n          return {\n            ...state,\n          modalViewq: action.view\n        };  \n      case \"ARTICULOS_ITEM\":\n        return {\n          ...state,\n          item: action.response\n      };  \n      case \"ARTICULOS_DATA\":\n        return {\n          ...state,\n          data: action.response.data,\n          pagina: action.response.pagina,\n          paginas: action.response.paginas,\n          total: action.response.total\n      }; \n      case \"ARTICULOS_DATA_ITEMS\":\n        return {\n          ...state,\n          data: action.response\n      };\n      case \"ARTICULOS_CHANGE\":\n        return {          \n        ...state,\n        item:\n        {...state.item,\n          [action.props]: action.value\n        }\n      };\n    case \"ARTICULOS_ADD\":\n      return {\n        ...state,\n        item: action.response\n      };       \n    case \"ARTICULOS_RESET_ITEM\":\n      return {\n        ...state,\n        item: initialState.item,\n        indicador: 0\n      };\n    case \"ARTICULOS_RESET\":\n      return {\n        ...state,\n        item: initialState.item,\n        aitems:[], \n        data: [],\n        pagina: 0,\n        paginas: 0,\n        total: 0\n      };  \n\n    case \"ARTICULOS_RESET_DATA\":\n        return {\n          ...state,            \n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n    case \"ARTICULOS_LISTA\":\n        return {\n          ...state,\n          items: action.response\n      }; \n            \n    default:\n      return state;\n  }\n}\n","const initialState = {\n  data: [],\n  pagina: 0,\n  paginas: 0,\n  total: 0,\n  modalView: false,\n  item:{      \n    id:'',\n    nombre:'',\n    codigo:''           \n  }    \n};\n\nexport function categorias(state = initialState, action) {\n  switch (action.type) {\n     case \"CATEGORIAS_VIEW\":\n      return {\n        ...state,\n        modalView: action.view\n      }; \n      case \"CATEGORIAS_LISTA\":\n        return {\n        ...state,\n        data: action.response\n      };\n      case \"CATEGORIAS_ITEM\":\n        return {\n          ...state,\n          item: action.response\n      };  \n      case \"CATEGORIAS_DATA\":\n        return {\n          ...state,\n          data: action.response.data,\n          pagina: action.response.pagina,\n          paginas: action.response.paginas,\n          total: action.response.total,\n          item: initialState.item\n      }; \n      case \"CATEGORIAS_CHANGE\":\n        return {          \n        ...state,\n        item:\n        {...state.item,\n          [action.props]: action.value\n        }\n      };\n    case \"CATEGORIAS_ADD\":\n      return {\n        ...state,\n        item: action.response\n      };       \n    case \"CATEGORIAS_RESET_ITEM\":\n      return {\n        ...state,\n        item: initialState.item\n      };\n    case \"CATEGORIAS_RESET\":\n      return {\n        ...state,\n        item: initialState.item,\n        data: [],\n        pagina: 0,\n        paginas: 0,\n        total: 0\n      };  \n\n    case \"CATEGORIAS_RESET_DATA\":\n        return {\n          ...state,            \n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n      \n    default:\n      return state;\n  }\n}\n","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombre:'',\n      codigo:'',\n      pais:'Argentina'\n    },   \n  };\n  \nexport function marcas(state = initialState, action) {\n    switch (action.type) {\n      case \"MARCAS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"MARCAS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"MARCAS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"MARCAS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"MARCAS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"MARCAS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"MARCAS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    indicador:0,\n    item:{      \n      codigo: '',\n      tipoFiscal: 'Natural',      \n      tipoProveedor: 'Proveedor Local', \n      razonSocial: '',\n      direccion:'',      \n      pais:'',\n      ciudad:'',\n      contacto:'',\n      email:'',\n      web:'',\n      telefono:'',\n      nit:'',\n      filename:'default.jpg',\n      formaPago:'',\n      banco:1,\n      cuenta:'',  \n      observaciones:''\n    }    \n  };\n  \nexport function proveedores(state = initialState, action) {\n    switch (action.type) {\n      case \"PROVEEDORES_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"PROVEEDORES_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n      case \"PROVEEDORES_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"PROVEEDORES_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };\n      case \"PROVEEDORES_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };\n      case \"PROVEEDORES_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"PROVEEDORES_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"PROVEEDORES_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            }; \n            \n\n      case \"PROVEEDORES_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };            \n      case \"PROVEEDORES_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item\n        };\n      case \"PROVEEDORES_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n\n      case \"PROVEEDORES_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n          };  \n\n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n  data: [],\n  pagina: 0,\n  paginas: 0,\n  total: 0,  \n  modalView: false,\n  indicador:0,\n  estado: 'pendiente',\n  indicadorTotal:0.00,\n  plan:[],\n  items:[],\n  pitems:[],\n  nota:{},\n  item:{\n    id:'',      \n    nro: '',\n    proveedorId:0,\n    proveedors:'',\n    estado:false,\n    formaPago:'contado',\n    fechaEmision: '',\n    fechaVencimiento:'',\n    glosa:'',\n    nroItems:0,\n    nroPagos:0,\n    total:0,\n    proveedor:{\n      id:'',\n      razonSocial:''\n    },\n    usuario:{\n      id:'',\n      nombres:''\n    },\n    gestion:'',    \n    totalGeneral:0,    \n    totalDescuento:0, \n    subTotal:0,\n    iva:0,\n    impuesto:0,\n    descuento:0\n\n  }   \n};\n\nexport function compras(state = initialState, action) {\n  switch (action.type) {   \n    case \"COMPRAS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          indicadorTotal: action.indicadorTotal\n        }; \n    case \"COMPRAS_PLAN_RESET\":\n      return {\n        ...state,\n        plan: []\n    };\n    case \"COMPRAS_PLAN\":\n      return {\n        ...state,\n        plan: action.values\n      };\n     case \"COMPRAS_VIEW\":\n      return {\n        ...state,\n        modalView: action.view\n      }; \n      case \"COMPRAS_ITEM\":\n        return {\n          ...state,\n          item: action.response.item,            \n          items: action.response.items,\n          nota: action.response.nota,\n          plan: action.response.plan           \n\n      };  \n      case \"COMPRAS_RESET_RESUMEN\":\n        return {\n          ...state,\n          item: initialState.item,\n          items: [],\n          nota: initialState.nota,\n          plan: []\n      }; \n      case \"PEDIDOS_ITEM\":\n        return {\n          ...state,\n          item: action.response.item,            \n          items: action.response.items,\n          pitems: action.response.pitems\n      };\n      case \"PEDIDOS_RESET_RESUMEN\":\n        return {\n          ...state,\n          item: initialState.item,            \n          items: [],\n          pitems: []\n      };\n      case \"COMPRAS_DATA\":\n        return {\n          ...state,\n          data: action.response.data,\n          pagina: action.response.pagina,\n          paginas: action.response.paginas,\n          total: action.response.total\n      }; \n      case \"COMPRAS_RESET_DATA\":\n        return {\n          ...state,            \n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        }; \n      case \"COMPRAS_CHANGE\":\n        return {          \n        ...state,\n        item:\n        {...state.item,\n          [action.props]: action.value\n        }\n      };\n    case \"COMPRAS_ADD\":\n      return {\n        ...state,\n        item: action.response.item,\n        items: action.response.items\n      };       \n    case \"COMPRAS_RESET_ITEM\":\n      return {\n        ...state,\n        item: initialState.item,\n        indicador: 0,\n        estado:false,\n        indicadorTotal: 0,\n        pitems: []\n      };\n    case \"COMPRAS_RESET_ITEMS\":\n        return {\n          ...state,\n          items: [],\n          nota: initialState.nota,\n          plan: []\n          \n    };  \n    case \"COMPRAS_RESET\":\n      return {\n        ...state,\n        item: initialState.item,\n        data: [],\n        pagina: 0,\n        paginas: 0,\n        total: 0,\n        indicador: 0,\n        estado:false,\n        indicadorTotal: 0\n      };\n      case \"COMPRAS_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"COMPRAS_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"COMPRAS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };     \n\n    \n    case \"COMPRAS_SET_ITEMS\":\n          return {\n            ...state,\n            items: action.values,\n            item:\n            {...state.item,\n              nroItems     : action.cantidad,\n              subTotal     : action.subTotal,\n              totalGeneral : action.totalGeneral,\n              totalDescuento : action.totalDescuento,\n              impuesto     : action.impuesto \n            }\n      };\n    case \"COMPRAS_SET_PROVEEDORES\":\n        return {\n          ...state,\n          pitems: action.values,\n      }; \n      \n    default:\n      return state;\n  }\n}\n","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    modalViews: false,\n    indicador:0,\n    items:[],\n    montoTotal:0,\n    saldoTotal:0,\n    pagoTotal:0,\n    item:{      \n      id:'',\n      nombres: '',\n      direccion: '',\n      tipo: 'personal',\n      nit: '',\n      nombreNit: '',\n      estado: '',\n      filename: 'default.jpg',\n      telefono: '',\n      codigo: '',\n      pais: '',\n      ciudad: '',\n      email: '',\n      web: '',\n      observaciones: '',\n      codpostal: '',\n      tipoInteres: '',\n      filenameNit: 'default.jpg',\n      filenameCi: 'default.jpg',\n      grupo: '',\n      personaContacto: '',\n      cuentaBancario: '',\n      createdAt: new Date()      \n    }    \n  };\n  \nexport function clientes(state = initialState, action) {\n    switch (action.type) {      \n        case \"CLIENTES_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"CLIENTES_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"CLIENTES_VIEWS\":\n        return {\n          ...state,\n          modalViews: action.view\n        }; \n        case \"CLIENTES_ITEM\":\n          return {\n            ...state,\n            item: action.response       \n        };  \n        case \"CLIENTES_RESET_ITEM\":\n          return {\n            ...state,\n            item: initialState.item,\n            indicador: 0\n        };\n        case \"CLIENTES_SALDO\":\n          return {\n            ...state,\n            items: action.response.data,\n            item: action.response.item,\n            montoTotal:action.response.total,\n            saldoTotal:action.response.saldo,\n            pagoTotal:action.response.pagos\n        }; \n        case \"CLIENTES_RESET_SALDO\":\n          return {\n            ...state,\n            items: [],\n            item: initialState.item,\n            indicador: 0,\n            montoTotal:0,\n            saldoTotal:0,\n            pagoTotal:0\n        };\n        case \"CLIENTES_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n        }; \n        case \"CLIENTES_CHANGE\":\n          return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"CLIENTES_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };       \n     \n      case \"CLIENTES_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          items:[],\n          montoTotal:0,\n          saldoTotal:0,\n          pagoTotal:0,\n        \n        };  \n\n      case \"CLIENTES_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],            \n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador:0,\n           \n          };  \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    items: [],    \n    artId: -1,\n    pagina: 0,\n    paginas: 0,\n    total: 0,    \n    modalView: false,\n    modalViews: false,\n    indicador:0,\n    estado: 'pendiente',\n    indicadorTotal:0,\n    plan:[],\n    nota:{},\n    item:{\n      id:'',      \n      nro: '',\n      fechaVenta:'',\n      tipo:'contado',\n      nroItems:0,\n      total:0,\n      observaciones:'',\n      estado:false,\n      usuarioId:0,\n      clienteId:0,\n      clients:'',\n      nits:'',\n      cliente:{\n        id:'',\n        nombres:''\n      },\n      usuario:{\n        id:'',\n        nombres:''\n      },\n      gestion:'',\n      formaPago :'',\n      formEntrega:'',\n      totalGeneral:0,\n      totalDescuento:0,\n      descuento:0,      \n      subTotal:0,\n      iva:0,\n      impuesto:0\n    }    \n  };\n  \nexport function ventas(state = initialState, action) {\n    switch (action.type) {\n       case \"VENTAS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          indicadorTotal: action.indicadorTotal\n        };\n       case \"VENTAS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"VENTAS_VIEWS\":\n        return {\n          ...state,\n          modalViews: action.view\n        };\n       case \"VENTAS_SET_ART\":\n        return {\n          ...state,\n          artId: action.id\n        };  \n     \n      case \"VENTAS_ADD\":\n        return {\n          ...state,\n          item: action.response.item,\n          items: action.response.items,\n          cantidadTotal: action.response.item.nroItems,\n          sumaTotal: action.response.item.total          \n        };\n      case \"VENTAS_ITEM\":\n          return {\n            ...state,\n            item: action.response.item,\n            items: action.response.items,\n            nota: action.response.nota,\n            plan: action.response.plan\n          };\n      case \"VENTAS_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"VENTAS_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"VENTAS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            }; \n            \n\n      case \"VENTAS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n          }; \n      \n      case \"VENTAS_RESET_RESUMEN\":\n        return {\n          ...state,\n          item: initialState.item,\n          items: [],\n          nota: initialState.nota,\n          plan: [],\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n         };\n        \n                \n      case \"VENTAS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,          \n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n         };\n      case \"VENTAS_RESET_DATA\":\n        return {\n          ...state,          \n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        }; \n      case \"VENTAS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        };\n      case \"VENTAS_SET_ITEMS\":\n          return {\n            ...state,\n            items: action.values,\n            item:\n            {...state.item,\n              nroItems     : action.cantidad,\n              subTotal     : action.subTotal,\n              totalGeneral : action.totalGeneral,\n              impuesto     : action.impuesto,\n              totalDescuento : action.totalDescuento \n            }  \n      };\n      case \"VENTAS_RESET_PAGOS\":\n          return {\n            ...state,\n            items: [],\n            item: initialState.item,\n            cantidadTotal: 0,\n            sumaTotal: 0\n      };\n      case \"VENTAS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n\n      case \"VENTAS_CODIGO_BARRAS\":                                 \n          let newItem = action.response\n          newItem.cantidad = 1\n          newItem.subTotal = action.response.valor \n          let iok = state.items.filter(item => item.articuloId === action.response.articuloId)                                                                       \n          return {\n            ...state,                                                        \n            items: iok.length > 0 ? [...state.items]: [...state.items, newItem],\n            cantidadTotal: iok.length > 0 ? state.cantidadTotal : state.cantidadTotal + 1,\n            sumaTotal: iok.length > 0 ? state.sumaTotal : parseInt(state.sumaTotal) + parseInt(action.response.valor)\n      };\n      case \"VENTAS_RESET_ITEMS\":\n        return {\n          ...state,\n          items: [],      \n          plan: initialState.plan,\n          nota: initialState.nota,              \n          artId: -1\n      }; \n      case \"VENTAS_DIRECTAS\":\n          return {\n            ...state,\n            modalView: false,\n            items:[],\n            item: initialState.item,\n            cantidadTotal:0,\n            sumaTotal:0\n      };       \n      \n      default:\n        return state;\n    }\n  }\n  \n","const initialState = {    \n    item:{\n      id:'',\n      nombre:'',\n      direccion:'',\n      web:'',\n      email:'',\n      filename:'',\n      nit:'',\n      registro:'',\n      smtpHost:'',\n      smtpUser:'',\n      smtpPassword:'',\n      smtpSecure:'',\n      smtpPort:'',\n      licencia:'',\n      labelCotizacion:'',\n      garantiaCotizacion:'',\n      politicaCotizacion:'',\n      pais:'',\n      moneda:'',\n      labelMoneda:'',\n\n    }\n  };\n  \nexport function empresa(state = initialState, action) {\n    switch (action.type) {\n      case \"EMPRESA_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };      \n      case \"EMPRESA_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };        \n      case \"EMPRESA_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };      \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {    \n  /**Compras */\n    compraT: {\n      total: 0,\n      suma: 0\n    },     \n    comprasLabel:[],    \n    comprasItem:[],    \n    resCompras:[],\n    pagosPendientes:[],     \n    pagosRealizados:[],\n    compras:[],\n    montoTotal: 0,\n    pagoTotal: 0,\n    saldoTotal: 0,\n  /**Pagos */  \n    pagos:[],\n  /**Ventas */  \n  ventaT: {\n    total: 0,\n    suma: 0\n  },     \n  ventasLabel:[],    \n  ventasItem:[],    \n  resVentas:[],\n  cobrosPendientes:[],     \n  cobrosRealizados:[],\n  ventas:[],  \n  cobroTotal: 0,\n  prealizados: {\n    total: 0,\n    suma: 0\n  },\n  ppendientes: {\n    total: 0,\n    suma: 0\n  },  \n  crealizados: {\n    total: 0,\n    suma: 0\n  },\n  cpendientes: {\n    total: 0,\n    suma: 0\n  },\n  cobros:[],\n  /**Cobros */\n\n  /**Clientes */\n  clienteT: 0,\n  cotizacionT: {\n    total: 0,\n    suma: 0\n  },\n  prospectoT: {\n    total: 0\n  },\n  ticketT: {\n    total: 0\n  },\n  clientes:[],\n  cotizaciones:[],\n  tickets:[],\n  prospectos:[],\n  total:0,\n  movimientos:[],\n  zporcentajes:[],\n  zcantidades:[],\n  yingresos:[],\n  ysalidas:[],\n  labelProductos:[],\n  itemsMinimo:[],\n  itemsActual:[],\n  sumaTotal:0,\n  cantidadTotal: 0\n  };\n  \nexport function informes(state = initialState, action) {\n    switch (action.type) {            \n      case \"INFORMES_MOVIMIENTOS\":\n        return {          \n          ...state,          \n          movimientos: action.response.data,          \n          cantidadTotal: action.response.total\n        };\n      case \"INFORMES_CLIENTES_RANGOS\":\n        return {          \n          ...state,          \n          clientes: action.response.data,\n          total: action.response.total\n        };\n      case \"INFORMES_COTIZACIONES_RANGOS\":\n          return {          \n            ...state,          \n            cotizaciones: action.response.data,\n            total: action.response.total\n          };\n          \n      case \"INFORMES_TICKETS_RANGOS\":\n        return {          \n          ...state,          \n          tickets: action.response.data,\n          total: action.response.total\n        };\n\n      case \"INFORMES_PROSPECTOS_RANGOS\":\n        return {          \n          ...state,          \n          prospectos: action.response.data,\n          total: action.response.total\n        };        \n\n      case \"INFORMES_DASHBOARD_INVENTARIO\":\n        return {          \n          ...state,          \n          zporcentajes: action.response.zporcentajes,\n          zcantidades: action.response.zcantidades,\n          yingresos: action.response.yingresos,\n          ysalidas: action.response.ysalidas,\n          labelProductos: action.response.labelProductos,\n          itemsMinimo: action.response.itemsMinimo,\n          itemsActual: action.response.itemsActual\n\n      };  \n      case \"INFORMES_DASHBOARD_CLIENTE\":\n        return {          \n          ...state,          \n          clienteT: action.response.clienteT,          \n          cotizacionT: action.response.cotizacionT,\n          prospectoT: action.response.prospectoT,          \n          ticketT: action.response.ticketT\n      };       \n      case \"INFORMES_RESET_CLIENTE\":\n        return {          \n          ...state,          \n          clienteT: initialState.clienteT,\n          cotizacionT: initialState.cotizacionT,\n          prospectoT: initialState.prospectoT,\n          ticketT: initialState.ticketT\n      };\n      \n      case \"INFORMES_DASHBOARD_COMPRA\":\n        return {          \n          ...state,          \n          compraT: action.response.compraT,          \n          comprasLabel: action.response.comprasLabel,\n          comprasItem: action.response.comprasItem,          \n          resCompras: action.response.resCompras,\n          pagosPendientes:action.response.pendientes,          \n          pagosRealizados:action.response.realizados,\n          prealizados: action.response.prealizados,               \n          ppendientes: action.response.ppendientes\n\n        };\n      case \"INFORMES_DASHBOARD_RESET_COMPRA\":\n          return {\n            ...state,\n            compraT: initialState.compraT,\n            comprasItem: [],\n            comprasLabel: [],\n            resCompras: [],\n            pagosPendientes: [],\n            pagosRealizados: [],\n            prealizados: initialState.prealizados,\n            ppendientes: initialState.ppendientes\n      }   \n      case \"INFORMES_COMPRAS_RANGOS\":\n        return {          \n            ...state,\n            compras: action.response.data,              \n            total: action.response.total,\n            montoTotal: action.response.montoTotal,\n            pagoTotal: action.response.pagoTotal,\n            saldoTotal: action.response.saldoTotal\n        };\n      case \"INFORMES_COMPRA_PAGOS\":\n          return {          \n            ...state,\n            pagos: action.response.data,              \n            total: action.response.total,\n            montoTotal: action.response.montoTotal\n        };    \n      case \"INFORMES_DASHBOARD_VENTAS\":\n          return {          \n            ...state,          \n            ventaT: action.response.ventaT,          \n            ventasLabel: action.response.ventasLabel,\n            ventasItem: action.response.ventasItem,          \n            resVentas: action.response.resVentas,\n            cobrosPendientes:action.response.pendientes,          \n            cobrosRealizados:action.response.realizados,\n            crealizados: action.response.crealizados,               \n            cpendientes: action.response.cpendientes\n  \n          };\n      case \"INFORMES_VENTAS_RANGOS\":\n          return {          \n              ...state,\n              ventas: action.response.data,              \n              total: action.response.total,\n              montoTotal: action.response.montoTotal,\n              pagoTotal: action.response.pagoTotal,\n              saldoTotal: action.response.saldoTotal\n          };  \n      case \"INFORMES_VENTA_COBROS\":\n            return {          \n              ...state,\n              cobros: action.response.data,              \n              total: action.response.total,\n              montoTotal: action.response.montoTotal\n        };     \n      case \"INFORME_SET_USUARIO_ID\":\n          return {\n            ...state,\n            usuarioId: action.usuarioId,\n            labelUsuario: action.labelUsuario\n          };    \n      case \"INFORME_SET_ARTICULO_ID\":\n        return {\n          ...state,\n          articuloId: action.articuloId,\n          labelArticulo: action.labelArticulo\n        };\n      case \"INFORME_SET_ALMACEN_ID\":\n          return {\n            ...state,\n            almacenId: action.almacenId,\n            labelAlmacen: action.labelAlmacen\n          }; \n          case \"INFORME_SET_CATEGORIA_ID\":\n            return {\n              ...state,\n              categoriaId: action.categoriaId,\n              labelCategoria: action.labelCategoria\n            };    \n     \n            \n      \n        case \"INFORMES_EXISTENCIAS\":\n              return {          \n                ...state,                \n                existencias: action.response.data,\n                total: action.response.total,\n                suma: action.response.suma,\n                saldo: action.response.saldo\n              }; \n        case \"INFORMES_CAJAS\":\n              return {          \n                ...state,                \n                cajas: action.response.data,\n                total: action.response.total,\n                suma: action.response.suma\n              };       \n        case \"INFORMES_CATEGORIAS\":\n              return {          \n                ...state,                \n                categorias: action.response.data,\n                categoriasDetalle : action.response.detalle\n             };            \n      case \"INFORMES_VENTAS\":\n        return {          \n          ...state,\n          detalle: action.response.detalle,\n          libros: action.response.data,\n          total: action.response.data.total\n        };               \n      case \"INFORMES_CONSOLIDADO\":\n        return {          \n          ...state,\n          detalle: action.response.detalle,\n          consolidado: action.response.data,\n          total: action.response.data.total\n        };      \n\n     case \"INFORMES_RESET\":\n        return {\n          ...state,                             \n          consolidado:[],\n          clientes:[],\n          compras:[],\n          cobros:[],\n          cotizaciones:[],\n          cobrosPendientes: initialState.cobrosPendientes,\n          cobrosRealizados: initialState.cobrosRealizados, \n          cpendientes : initialState.cpendientes,\n          crealizados : initialState.crealizados,\n          cantidadTotal: 0,\n          desde:'2021-01-01',\n          detalle:0,        \n          existencias:[],  \n          hasta:'2021-12-01',          \n          libros: [], \n          labelCategoria:[],\n          labelAlmacen:[],\n          labelArticulo:[],\n          movimientos:[],                    \n          prospectos:[],          \n          pagos:[],          \n          pagoTotal:0,\n          pagina: 0,\n          paginas: 0,\n          montoTotal:0,                             \n          total: 0,\n          tickets:[],          \n          resVentas: initialState.resVentas,\n          sumaTotal:0,          \n          saldoTotal:0,\n          suma:0,\n          saldo:0,          \n          ventaT :initialState.ventaT, \n          ventasItem: [], \n          ventasLabel: [], \n          ventas: []\n        }; \n      \n      case \"INVENTARIOS_INFORMES_RESET\":\n        return {\n          ...state,\n          zporcentajes:[],\n          zcantidades:[],\n          yingresos:[],\n          ysalidas:[],\n          labelProductos:[],\n          itemsMinimo:[],\n          itemsActual:[]\n        }\n        \n      case \"INFORMES_COTIZACIONES_RESET\":\n        return {\n            ...state,\n            total:0,\n            cotizaciones:[]\n      }  \n      case \"INFORMES_PROMOCIONES_RESET\":\n        return {\n            ...state,\n            total:0,\n            prospectos:[]\n      }\n      case \"INFORMES_TICKETS_RESET\":\n        return {\n            ...state,\n            total:0,\n            tickets:[]\n      }\n\n      \n      case \"VENTAS_INFORMES_RESET\":\n          return {\n          ...state,\n          ventaT: initialState.ventaT,\n          ventasItem:[],\n          ventasLabel:[],\n          resVentas:[],\n          cobrosPendientes:[],\n          cobrosRealizados:[],\n          cpendientes: initialState.cpendientes,\n          crealizados: initialState.crealizados\n        }   \n      case \"INFORMES_COMPRAS_RESET\":\n        return {\n         ...state,\n         compras: [],\n         montoTotal: 0,\n         pagoTotal: 0,\n         saldoTotal: 0,        \n         total: 0\n        }  \n      case \"INFORMES_PAGOS_RESET\":\n        return {\n           ...state,\n           pagos:[],\n           montoTotal: 0,\n           pagoTotal: 0,\n           saldoTotal: 0,        \n           total: 0\n        }    \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,    \n    modalView: false,\n    item:{\n      id:'',\n      monto: 0,\n      tipo:\"ingreso\",\n      label:\"\",\n      estado:true,\n      cajaId:0\n    }    \n  };\n  \nexport function cajasitems(state = initialState, action) {\n    switch (action.type) {\n      case \"CAJAS_ITEMS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"CAJAS_ITEMS_ADD\":\n        return {\n          ...state,\n          item: action.response.caja\n        }; \n      case \"CAJAS_ITEMS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item\n        };        \n       case \"CAJAS_ITEMS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        };  \n      case \"CAJAS_ITEMS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"CAJAS_ITEMS_DATAS\":\n          return {\n            ...state,\n            data: action.response\n          };                \n      case \"CAJAS_ITEMS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };        \n      case \"RESET_CAJA\":\n        return {\n          ...state,\n          item: initialState.item\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,    \n    modalView: false,\n    item:{\n      id:'',\n      estado: false,\n      montoInicial:0,\n      montoEgreso:0,\n      montoIngreso:0,\n      montoFinal:0,\n      fechaCierre:'',\n      usuarioId:0,\n      usuario:{\n        id:'',\n        nombres:''\n      }\n    },\n    items:[],\n    indicador:0,\n    estado: false    \n  };\n  \nexport function cajas(state = initialState, action) {\n    switch (action.type) {\n      case \"CAJAS_INDICADOR\":\n      return {\n        ...state,\n        indicador: action.value,\n        estado: action.estado\n      };\n      case \"CAJAS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"CAJAS_RESUMEN\":\n        return {\n          ...state,\n          item: action.response.item,\n          items: action.response.items\n      }; \n    \n      case \"CAJAS_ADD\":\n        return {\n          ...state,\n          item: action.response.caja\n        };\n      case \"CAJAS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        };  \n      case \"CAJAS_ITEM\":\n        return {\n          ...state,\n          item: action.response\n\n        };      \n      case \"CAJAS_DATA\":\n          return {\n            ...state,            \n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };            \n      case \"CAJAS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false\n        };\n      case \"CAJAS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0,\n          estado:false,\n        };  \n      case \"RESET_CAJA\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0,\n          estado:false,\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:1,\n      nombre:''\n    },   \n  };\n  \nexport function almacenes(state = initialState, action) {\n    switch (action.type) {\n      case \"ALMACENES_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"ALMACENES_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"ALMACENES_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"ALMACENES_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"ALMACENES_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"ALMACENES_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"ALMACENES_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    item:{\n      id:'',\n      title:'',\n      start:'',\n      end:'',      \n      backgroundColor:'',\n      selectable:false,\n      usuarioId:0,\n      detalle:''      \n    },\n  };\n  \n  export function tareas(state = initialState, action) {\n    switch (action.type) {\n      case \"TAREAS_ADD\":\n        return {\n          ...state,\n            data: action.response,\n            item: initialState.item\n        };\n      case \"TAREAS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n              [action.props]: action.value\n          }\n       };  \n      case \"TAREAS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          }; \n      case \"TAREAS_DATA\":\n        return {\n          ...state,\n          data: action.response\n        };          \n      case \"TAREAS_RESET\":\n        return {\n          ...state,\n          data: [],\n          item: initialState.item\n        };\n      case \"TAREAS_ITEM_RESET\":\n          return {\n            ...state,            \n            item: initialState.item\n          };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    total:0,\n    pagina:0,    \n    indicador: 0,\n    estado:false,\n    indicadorTotal: 0,\n    ventaId:0,\n    compraId:0,\n    plan:[],\n    nota:{},\n    venta:{\n      usuario:{\n        id:0,\n        nombres:''\n      },\n      cliente:{\n        id:0,\n        nombres:''\n      },\n    },\n    ventaItems:[],\n    cantidadTotal:0,\n    sumaTotal:0             \n  };\n  \nexport function cobros(state = initialState, action) {\n    switch (action.type) {      \n      case \"COBROS_RESET_ITEM\":\n        return {\n            ...state,\n            nota: {},            \n            plan: [],\n            venta: initialState.venta,\n            ventaItems:[]\n\n        };\n      case \"COBROS_ADD\":\n        return {\n            ...state,\n            nota: action.response.item,            \n            plan: action.response.items            \n        };\n      case \"COBROS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          ventaId: action.venta\n        };\n      case \"COBROS_DATA\":\n        return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n      };\n      case \"COBROS_RESET_DATA\":\n        return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n      };   \n\n      case \"COBROS_ITEM\":\n          return {\n            ...state,\n            venta: action.response.item,\n            ventaItems: action.response.items,\n            nota: action.response.nota,\n            plan: action.response.plan,\n            cantidadTotal: action.response.item.nroItems,\n            sumaTotal: action.response.item.total\n        };                       \n      \n      default:\n        return state;\n    }\n  }\n  \n","const initialState = {\n    data: [],\n    total:0,\n    pagina:0,    \n    indicador: 0,\n    estado:false,\n    indicadorTotal: 0,\n    ventaId:0,\n    compraId:0,\n    plan:[],\n    nota:{},\n    compra:{\n      usuario:{\n        id:0,\n        nombres:'',\n        total:0\n      },\n      proveedor:{\n        id:0,\n        razonSocial:''\n      },\n    },\n    compraItems:[],\n    cantidadTotal:0,\n    sumaTotal:0             \n  };\n  \nexport function pagos(state = initialState, action) {\n    switch (action.type) {      \n      case \"PAGOS_RESET_ITEM\":\n        return {\n            ...state,\n            nota: {},            \n            plan: [],\n            compra: initialState.compra,\n            compraItems:[],\n            compraId:0,\n            sumaTotal:0,\n            cantidadTotal:0\n\n        };\n      case \"PAGOS_ADD\":\n        return {\n            ...state,\n            nota: action.response.item,            \n            plan: action.response.items            \n        };\n      case \"PAGOS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          compraId: action.compra\n        };\n      case \"PAGOS_DATA\":\n        return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n      };\n      case \"PAGOS_RESET_DATA\":\n        return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n      };\n\n      case \"PAGOS_ITEM\":\n          return {\n            ...state,\n            compra: action.response.item,\n            compraItems: action.response.items,\n            nota: action.response.nota,\n            plan: action.response.plan,\n            cantidadTotal: action.response.item.nroItems,\n            sumaTotal: action.response.item.total\n        };                       \n      \n      default:\n        return state;\n    }\n  }\n  \n","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n   \n    item:{\n       id: 0,\n       codigo: \"\",\n       descripcion: \"\",\n       nivel: 0,\n       tipo: \"Activo\",\n    },   \n  };\n  \nexport function pucs(state = initialState, action) {\n    switch (action.type) {\n      case \"PUCS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"PUCS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"PUCS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"PUCS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"PUCS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"PUCS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"PUCS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n  data: [],\n  pagina: 0,\n  paginas: 0,\n  total: 0,   \n  modalView: false,\n  indicador:0,\n  estado: 'pendiente',\n  indicadorTotal:0,\n  items:[],  \n  item:{\n    id:'',  \n    fechaComprobante: '',\n    tipoComprobante: 'ingreso',\n    estado: 'pendiente',\n    label: '',\n    numComprobante: '',\n    glosaComprobante: '',\n    montoImpuesto: 0,\n    montoSubtotal: 0,\n    montoTotal: 0,\n    gestion: '2021-01-01',\n    tdc: 6.90,\n    tDebe: 0,\n    tHaber: 0\n  }   \n};\n\nexport function comprobantes(state = initialState, action) {\n  switch (action.type) {   \n    case \"COMPROBANTES_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          indicadorTotal: action.indicadorTotal\n        }; \n    case \"COMPROBANTES_PLAN_RESET\":\n      return {\n        ...state,\n        plan: []\n    };\n    case \"COMPROBANTES_PLAN\":\n      return {\n        ...state,\n        plan: action.values\n      };\n     case \"COMPROBANTES_VIEW\":\n      return {\n        ...state,\n        modalView: action.view\n      }; \n      case \"COMPROBANTES_ITEM\":\n        return {\n          ...state,\n          item: action.response.item,            \n          cantidadTotal: action.response.item.nroItems,\n          sumaTotal: action.response.item.total,                    \n          items: action.response.items\n\n      };  \n      case \"COMPROBANTES_DATA\":\n        return {\n          ...state,\n          data: action.response.data,\n          pagina: action.response.pagina,\n          paginas: action.response.paginas,\n          total: action.response.total\n      }; \n      case \"COMPROBANTES_CHANGE\":\n        return {          \n        ...state,\n        item:\n        {...state.item,\n          [action.props]: action.value\n        }\n      };\n    case \"COMPROBANTES_ADD\":\n      return {\n        ...state,\n        item: action.response,\n        items: action.response.items,\n        cantidadTotal: action.response.item.nroItems,\n        sumaTotal: action.response.item.total \n      };       \n    case \"COMPROBANTES_RESET_ITEM\":\n      return {\n        ...state,\n        item: initialState.item,\n        indicador: 0,\n        estado:false,\n        indicadorTotal: 0,\n        tDebe:0,\n        tHaber:0\n      };\n    case \"COMPROBANTES_RESET\":\n      return {\n        ...state,\n        item: initialState.item,\n        data: [],\n        pagina: 0,\n        paginas: 0,\n        total: 0,\n        indicador: 0,\n        estado:false,\n        indicadorTotal: 0,\n        tDebe:0,\n        tHaber:0\n      };\n      case \"COMPROBANTES_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"COMPROBANTES_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"COMPROBANTES_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };     \n\n    case \"COMPROBANTES_RESET_DATA\":\n        return {\n          ...state,            \n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        };  \n        \n    case \"COMPROBANTES_SET_ITEMS\":\n          return {\n            ...state,\n            items: action.values\n      };\n    case \"COMPROBANTES_RESET_ITEMS\":\n        return {\n          ...state,\n          items: [],\n          item: initialState.item\n      }; \n    case \"COMPROBANTES_RESIT\":\n        return {\n          ...state,\n          items: []\n        }; \n    case \"COMPROBANTES_SET_ITEM\":\n          return {\n            ...state,\n          item: action.item\n       };      \n      \n    default:\n      return state;\n  }\n}\n","const initialState = {\n    diarios:[],\n    mayores:[],\n    saldos:[],    \n    debitoCierre: 0,\n    creditoCierre: 0,\n    cuenta: {\n      codigo: \"\",\n      descripcion: \"\",\n      nivel: 0,\n      tipo: \"\"\n    },\n    sumaCredito:0,\n    sumaDebito: 0,\n    totalAcreedor:0,\n    totalDeudor:0,\n    totalCreditos:0,\n    totalDebitos:0,\n  };\n  \nexport function contables(state = initialState, action) {\n    switch (action.type) {     \n      case \"CONTABLES_DIARIOS\":\n        return {          \n          ...state,\n          diarios: action.response.result,\n          sumaDebito: action.response.sumaDebito,\n          sumaCredito:action.response.sumaCredito\n\n        };\n      case \"CONTABLES_MAYORES\":\n            return {          \n              ...state,\n         mayores: action.response.detalle,\n         debitoCierre: action.response.debitoCierre,\n         creditoCierre: action.response.creditoCierre,\n         cuenta: action.response.result,\n         sumaCredito:action.response.sumaCredito,\n         sumaDebito: action.response.sumaDebito\n      };  \n      case \"CONTABLES_SALDOS\":\n        return {          \n          ...state,\n          saldos: action.response.result2,\n          totalAcreedor:action.response.result.totalAcreedor,\n          totalDeudor:action.response.result.totalDeudor,\n          totalCreditos: action.response.result.totalCreditos,\n          totalDebitos: action.response.result.totalDebitos\n\n      };\n     case \"CONTABLES_RESET\":\n        return {\n          ...state,\n          diarios:[],\n          mayores:[],\n          saldos:[]\n        };          \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n   \n    item:{\n       id: 0,\n       codigo: \"\",\n       descripcion: \"\",\n       nivel: 0,\n       tipo: \"Activo\",\n    },   \n  };\n  \nexport function procesos(state = initialState, action) {\n    switch (action.type) {\n      case \"PROCESOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"PROCESOS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"PROCESOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"PROCESOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"PROCESOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"PROCESOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"PROCESOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    item:{\n      id:'',\n      title:'',\n      start:'',\n      end:'',      \n      monto:0,\n      backgroundColor:'',\n      selectable:false,\n      usuarioId:0,\n      detalle:''      \n    },\n    titem:0     \n  };\n  \n  export function tdcs(state = initialState, action) {\n    switch (action.type) {\n      case \"TDCS_ADD\":\n        return {\n          ...state,\n            data: action.response,\n            item: initialState.item\n        };\n      case \"TDCS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n              [action.props]: action.value\n          }\n       };  \n      case \"TDCS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          }; \n      case \"TDCS_TITEM\":\n          return {\n          ...state,\n          titem: action.response.monto\n      };     \n      case \"TDCS_DATA\":\n        return {\n          ...state,\n          data: action.response\n        };          \n      case \"TDCS_RESET\":\n        return {\n          ...state,\n          data: [],\n          item: initialState.item\n        };\n      case \"TDCS_ITEM_RESET\":\n          return {\n            ...state,            \n            item: initialState.item\n          };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombres:'',\n      username:'',\n      password: '',\n      estado: true,\n      rolId: 1,\n      sucursalId: 2,\n      isCajero: false\n    },   \n    modulos:[]\n  };\n  \nexport function users(state = initialState, action) {\n    switch (action.type) {\n      case \"USUARIOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"USUARIOS_ADD\":\n        return {\n          ...state,\n            data: action.response.usuarios.data,\n            pagina: action.response.usuarios.pagina,\n            paginas: action.response.usuarios.paginas,\n            total: action.response.usuarios.total,\n            item: initialState.item,\n            modulos: []\n        };\n      case \"USUARIOS_ITEM\":\n          return {\n            ...state,\n            item: action.response.usuario,\n            modulos: action.response.modulos,\n\n          };  \n      case \"USUARIOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"USUARIOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"USUARIOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"USUARIOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            modulos:[],\n            item: initialState.item\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    indicador:0,\n    item:{      \n        id:0,\n        fechaRegistro: '',\n        fechaCierre: '',\n        codigo: \"\",\n        tipo: \"soporte\",\n        detalle: \"\",\n        estado: \"\",   \n        usuarioId:0,\n        clienteId:0,\n        clients:'' ,\n        usuario:{\n          id:'',\n          nombres:''\n        }        \n    },\n    items:[],\n    ipagina: 0,\n    ipaginas: 0,\n    itotal: 0,    \n  };\n  \nexport function tickets(state = initialState, action) {\n    switch (action.type) {      \n        case \"TICKETS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"TICKETS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"TICKETS_ITEM\":\n          return {\n            ...state,\n            item: action.response.ticket,\n            items: action.response.items.data,\n            ipagina: action.response.items.pagina,\n            ipaginas: action.response.items.paginas\n        };  \n        case \"TICKETS_ITEMS_ADD\":\n          return {\n            ...state,\n            items: action.response.data,\n            ipagina: action.response.pagina,\n            ipaginas: action.response.paginas            \n        }; \n        case \"TICKETS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n        }; \n        case \"TICKETS_CHANGE\":\n          return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"TICKETS_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };       \n      case \"TICKETS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0,\n          items:[]\n        };\n      case \"TICKETS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n\n      case \"TICKETS_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],            \n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador:0\n          };  \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    items: [],    \n    pitems: [],\n    artId: -1,\n    pagina: 0,\n    paginas: 0,\n    total: 0,   \n    modalView: false,\n    modalViews: false,\n    indicador:0,\n    estado: 'pendiente',\n    indicadorTotal:0,\n    plan:[],\n    nota:{},\n    item:{\n      id:'',      \n      nro: '',\n      fechaCotizacion:'',\n      fechaVencimiento:'',      \n      nroItems:'',      \n      observaciones:'',\n      estado:false,\n      usuarioId:0,\n      clienteId:0,\n      clients:'',      \n      usuario:{\n        id:'',\n        nombres:''\n      },\n      gestion:'',\n      formaPago :'',\n      formEntrega:'',\n      descuento:0,\n      totalDescuento:0,\n      totalGeneral:0,\n      cantidadTotal:0,\n      subTotal:0,\n      iva:0,\n      impuesto:0      \n    }    \n  };\n  \nexport function cotizaciones(state = initialState, action) {\n    switch (action.type) {\n       case \"COTIZACIONES_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          indicadorTotal: action.indicadorTotal\n        };\n       case \"COTIZACIONES_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"COTIZACIONES_VIEWS\":\n        return {\n          ...state,\n          modalViews: action.view\n        };\n       case \"COTIZACIONES_SET_ART\":\n        return {\n          ...state,\n          artId: action.id\n        };  \n     \n      case \"COTIZACIONES_ADD\":\n        return {\n          ...state,\n          item: action.response.item,\n          items: action.response.items        \n        };\n      case \"COTIZACIONES_ITEM\":\n          return {\n            ...state,\n            item: action.response.item,\n            items: action.response.items\n          };\n      case \"COTIZACIONES_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"COTIZACIONES_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"COTIZACIONES_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            }; \n            \n\n      case \"COTIZACIONES_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n          };  \n      case \"COTIZACIONES_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n        };               \n      case \"COTIZACIONES_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,          \n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n         };\n      case \"COTIZACIONES_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        };\n      case \"COTIZACIONES_SET_ITEMS\":\n          return {\n            ...state,\n            items: action.values,\n            item:\n            {...state.item,\n              nroItems       : action.cantidad,\n              subTotal       : action.subTotal,\n              totalGeneral   : action.totalGeneral,\n              impuesto       : action.impuesto,\n              totalDescuento : action.totalDescuento\n            }            \n      };            \n      case \"COTIZACIONES_RESET_PAGOS\":\n          return {\n            ...state,\n            items: [],\n            item: initialState.item,\n            cantidadTotal: 0,\n            sumaTotal: 0\n      };\n      case \"COTIZACIONES_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"COTIZACIONES_CHANGEZ\":\n        return {          \n            ...state,\n            impuesto: action.sumas\n      };  \n    \n      case \"COTIZACIONES_RESET_ITEMS\":\n        return {\n          ...state,\n          items: [],\n          cantidadTotal: 0,\n          sumaTotal: 0, \n          artId: -1\n      }; \n      case \"COTIZACIONES_DIRECTAS\":\n          return {\n            ...state,\n            modalView: false,\n            items:[],\n            item: initialState.item,\n            cantidadTotal:0,\n            sumaTotal:0\n      };   \n        \n      case \"COMPRAS_SET_PROVEEDORES\":\n          return {\n            ...state,\n            pitems: action.values                  \n      };  \n      \n      default:\n        return state;\n    }\n  }\n  \n","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombre:'',\n      monto:0,\n      montoHora:0,\n      montoMinuto:0\n    },   \n  };\n  \nexport function salarios(state = initialState, action) {\n    switch (action.type) {\n      case \"SALARIOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"SALARIOS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"SALARIOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"SALARIOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"SALARIOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"SALARIOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"SALARIOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    indicador:0,\n    item:{      \n      codigo:'',\n      tipo:'personal',\n      nit:'',\n      nombres: '',      \n      direccion:'',   \n      filename:'default.png',   \n      pais:'',\n      ciudad:'',\n      email:'',\n      web:'',\n      telefono:'',\n      observaciones:''               \n    }    \n  };\n  \nexport function personas(state = initialState, action) {\n    switch (action.type) {      \n        case \"PERSONAS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"PERSONAS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"PERSONAS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n        };  \n        case \"PERSONAS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n        }; \n        case \"PERSONAS_CHANGE\":\n          return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"PERSONAS_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };       \n      case \"PERSONAS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0\n        };\n      case \"PERSONAS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n\n      case \"PERSONAS_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],            \n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador:0\n          };  \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombre:'',\n      d1:'',\n      d2:'',\n      d3:'',\n      d4:''\n    },   \n  };\n  \nexport function horarios(state = initialState, action) {\n    switch (action.type) {\n      case \"HORARIOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"HORARIOS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"HORARIOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"HORARIOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"HORARIOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"HORARIOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"HORARIOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    indicador:0,\n    item:{      \n        id:0,\n        fecha: '',\n        nombre:'',\n        tipo:'',\n        vencimiento:'',\n        nivel:0,\n        estado:false,\n        observaciones:'',\n        resultado:0,\n        medidas:0,\n        articuloId:0,\n        formaPago :'',\n        formEntrega:''\n    },\n    items:[],\n    ipagina: 0,\n    ipaginas: 0,\n    itotal: 0,    \n  };\n  \nexport function prospectos(state = initialState, action) {\n    switch (action.type) {      \n        case \"PROSPECTOS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"PROSPECTOS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"PROSPECTOS_ITEM\":\n          return {\n            ...state,\n            item: action.response.item,\n            items: action.response.items\n        };  \n        case \"PROSPECTOS_ITEMS_ADD\":\n          return {\n            ...state,\n            item: action.response.item,\n            items: action.response.items\n        }; \n        case \"PROSPECTOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n        }; \n        case \"PROSPECTOS_CHANGE\":\n          return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"PROSPECTOS_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };       \n      case \"PROSPECTOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0,\n          items:[]\n        };       \n      case \"PROSPECTOS_RESET_ITEMS\":\n        return {\n          ...state,\n          item: initialState.item,       \n          indicador: 0,\n          items:[]\n        };\n      case \"PROSPECTOS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n\n      case \"PROSPECTOS_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],            \n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador:0\n          };  \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n        id:'',\n        carrera: '',\n        fecha: '',\n        ciudad: '',\n        pais: '',\n        nivel: '',\n        estado: '',\n        institucion: '',\n        personaId: 0      \n    },   \n  };\n  \nexport function estudios(state = initialState, action) {\n    switch (action.type) {\n      case \"ESTUDIOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"ESTUDIOS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"ESTUDIOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"ESTUDIOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"ESTUDIOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"ESTUDIOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"ESTUDIOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            item: initialState.item \n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n        id:'',\n        empresa: '',\n        desde: '',\n        hasta: '',\n        ciudad: '',\n        pais: '',\n        motivo: '',\n        contacto: '',\n        telefono: '',\n        personaId: 0\n    },   \n  };\n  \nexport function experiencias(state = initialState, action) {\n    switch (action.type) {\n      case \"EXPERIENCIAS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"EXPERIENCIAS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"EXPERIENCIAS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"EXPERIENCIAS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"EXPERIENCIAS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"EXPERIENCIAS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"EXPERIENCIAS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            item: initialState.item\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    modalView: false,\n    indicador:0,\n    item:{      \n      nro:'',\n      fechaInicio : new Date(),\n      fechaFin: new Date(),\n      plazo:'Fijo',\n      contratado:false,\n      observaciones:'',\n      person:'',\n      personaId:0,\n      horarioId:0,\n      salarioId:0,      \n      cargoId:0,\n      salario:{        \n        id:0,\n        nombre:\"\"\n      },\n      horario:{\n        id:0,\n        nombre:\"\"\n      },\n      cargo:{\n        id:0,\n        nombre:\"\"\n      },\n      persona:{\n        id:0,\n        nombres:\"\",\n        ci:\"\",\n        paterno:\"\",\n        materno:\"\"\n      }\n    }    \n  };\n  \nexport function contratos(state = initialState, action) {\n    switch (action.type) {      \n        case \"CONTRATOS_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value\n        };\n       case \"CONTRATOS_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"CONTRATOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n        };  \n        case \"CONTRATOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n        }; \n        case \"CONTRATOS_CHANGE\":\n          return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"CONTRATOS_ADD\":\n        return {\n          ...state,\n          item: action.response\n        };       \n      case \"CONTRATOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          indicador: 0\n        };\n      case \"CONTRATOS_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0\n        };  \n\n      case \"CONTRATOS_RESET_DATA\":\n          return {\n            ...state,            \n            data: [],            \n            pagina: 0,\n            paginas: 0,\n            total: 0,\n            indicador:0\n          };  \n        \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombre:''    \n    },   \n  };\n  \nexport function cargos(state = initialState, action) {\n    switch (action.type) {\n      case \"CARGOS_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"CARGOS_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"CARGOS_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"CARGOS_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"CARGOS_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"CARGOS_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"CARGOS_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","const initialState = {\n    data: [],\n    items: [],    \n    artId: -1,\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    cantidadTotal:0,\n    sumaTotal:0,\n    modalView: false,\n    modalViews: false,\n    indicador:0,\n    estado: 'pendiente',\n    indicadorTotal:0,\n  };\n  \nexport function ventaitems(state = initialState, action) {\n    switch (action.type) {\n       case \"VENTAS_ITEM_INDICADOR\":\n        return {\n          ...state,\n          indicador: action.value,\n          estado: action.estado,\n          indicadorTotal: action.indicadorTotal\n        };\n       case \"VENTAS_ITEM_VIEW\":\n        return {\n          ...state,\n          modalView: action.view\n        }; \n        case \"VENTAS_ITEM_VIEWS\":\n        return {\n          ...state,\n          modalViews: action.view\n        };\n       case \"VENTAS_ITEM_SET_ART\":\n        return {\n          ...state,\n          artId: action.id\n        };  \n     \n      case \"VENTAS_ITEM_ADD\":\n        return {\n          ...state,\n          item: action.response.item,\n          items: action.response.items,\n          cantidadTotal: action.response.item.nroItems,\n          sumaTotal: action.response.item.total          \n        };\n      case \"VENTAS_ITEM_ITEM\":\n          return {\n            ...state,\n            item: action.response.item,\n            items: action.response.items,\n            nota: action.response.nota,\n            plan: action.response.plan,\n            cantidadTotal: action.response.item.nroItems,\n            sumaTotal: action.response.item.total\n          };\n      case \"VENTAS_ITEM_ITEM_VIEWS\":\n          return {\n            ...state,\n            item: initialState.item,\n            modalView: false\n          };\n      case \"VENTAS_ITEM_ITEM_VIEW\":\n          return {\n            ...state,\n            item: action.response,\n            modalView: true\n          };          \n      case \"VENTAS_ITEM_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            }; \n            \n\n      case \"VENTAS_ITEM_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            indicador: 0,\n            estado:false,\n            indicadorTotal: 0\n          };            \n      case \"VENTAS_ITEM_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item,\n          items: [],\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n         };\n      case \"VENTAS_ITEM_RESET\":\n        return {\n          ...state,\n          item: initialState.item,\n          data: [],\n          pagina: 0,\n          paginas: 0,\n          total: 0,\n          indicador: 0,\n          estado:false,\n          indicadorTotal: 0\n        };\n      case \"VENTAS_ITEM_SET_ITEMS\":\n          return {\n            ...state,\n            items: action.values,\n            cantidadTotal: action.cantidad,\n            sumaTotal: action.suma\n      };\n      case \"VENTAS_ITEM_RESET_PAGOS\":\n          return {\n            ...state,\n            items: [],\n            item: initialState.item,\n            cantidadTotal: 0,\n            sumaTotal: 0\n      };\n      case \"VENTAS_ITEM_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n\n      case \"VENTAS_ITEM_CODIGO_BARRAS\":                                 \n          let newItem = action.response\n          newItem.cantidad = 1\n          newItem.subTotal = action.response.valor \n          let iok = state.items.filter(item => item.articuloId === action.response.articuloId)                                                                       \n          return {\n            ...state,                                                        \n            items: iok.length > 0 ? [...state.items]: [...state.items, newItem],\n            cantidadTotal: iok.length > 0 ? state.cantidadTotal : state.cantidadTotal + 1,\n            sumaTotal: iok.length > 0 ? state.sumaTotal : parseInt(state.sumaTotal) + parseInt(action.response.valor)\n      };\n      case \"VENTAS_ITEM_RESET_ITEMS\":\n        return {\n          ...state,\n          items: [],\n          cantidadTotal: 0,\n          sumaTotal: 0, \n          artId: -1\n      }; \n      case \"VENTAS_ITEM_DIRECTAS\":\n          return {\n            ...state,\n            modalView: false,\n            items:[],\n            item: initialState.item,\n            cantidadTotal:0,\n            sumaTotal:0\n      };       \n      \n      default:\n        return state;\n    }\n  }\n  \n","const initialState = {\n    data: [],\n    pagina: 0,\n    paginas: 0,\n    total: 0,\n    item:{\n      id:'',\n      nombre:'',\n      codigo:''\n    },   \n  };\n  \nexport function unidades(state = initialState, action) {\n    switch (action.type) {\n      case \"UNIDADES_CHANGE\":\n        return {          \n          ...state,\n          item:\n          {...state.item,\n            [action.props]: action.value\n          }\n        };\n      case \"UNIDADES_ADD\":\n        return {\n          ...state,\n          data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total,\n            item: initialState.item\n        };\n      case \"UNIDADES_ITEM\":\n          return {\n            ...state,\n            item: action.response\n          };  \n      case \"UNIDADES_DATA\":\n          return {\n            ...state,\n            data: action.response.data,\n            pagina: action.response.pagina,\n            paginas: action.response.paginas,\n            total: action.response.total\n          };\n      case \"UNIDADES_LISTA\":\n            return {\n              ...state,\n              data: action.response\n            };                \n      case \"UNIDADES_RESET_ITEM\":\n        return {\n          ...state,\n          item: initialState.item         \n        };\n      case \"UNIDADES_RESET_DATA\":\n          return {\n            ...state,\n            data: [],\n            pagina: 0,\n            paginas: 0,\n            total: 0\n        };  \n      default:\n        return state;\n    }\n  }\n  ","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport { usuarios } from \"./usuarios.reducers\";\nimport { articulos } from \"./articulos.reducers\";\nimport { categorias } from \"./categorias.reducers\";\nimport { marcas } from \"./marcas.reducers\";\nimport { proveedores } from \"./proveedores.reducers\";\nimport { compras } from \"./compras.reducers\";\nimport { clientes } from \"./clientes.reducers\";\nimport { ventas } from \"./ventas.reducers\";\nimport { empresa } from \"./empresa.reducers\";\nimport { informes } from \"./informes.reducers\";\nimport { cajasitems } from \"./cajasitems.reducers\";\nimport { cajas } from \"./cajas.reducers\";\nimport { almacenes } from \"./almacenes.reducers\";\nimport { tareas } from \"./tareas.reducers\";\nimport { cobros } from \"./cobros.reducers\";\nimport { pagos } from \"./pagos.reducers\";\nimport { pucs } from \"./pucs.reducers\";\nimport { comprobantes } from \"./comprobantes.reducers\";\nimport { contables } from \"./contables.reducers\";\nimport { procesos } from \"./procesos.reducers\";\nimport { tdcs } from \"./tdcs.reducers\";\nimport { users } from \"./users.reducers\";\nimport { tickets } from \"./tickets.reducers\";\nimport { cotizaciones } from \"./cotizaciones.reducers\";\nimport { salarios } from \"./salarios.reducers\";\nimport { personas } from \"./personas.reducers\";\nimport { horarios } from \"./horarios.reducers\";\nimport { prospectos } from \"./prospectos.reducers\";\nimport { estudios } from \"./estudios.reducers\";\nimport { experiencias } from \"./experiencias.reducers\";\nimport { contratos } from \"./contratos.reducers\";\nimport { cargos } from \"./cargos.reducers\";\nimport { ventaitems } from \"./ventaitems.reducers\";\nimport { unidades } from \"./unidades.reducers\";\n\nconst rootReducer = combineReducers({\n    usuarios,\n    ventaitems,\n    unidades,\n    cargos,\n    contratos,\n    experiencias,\n    estudios,\n    prospectos,    \n    horarios,\n    personas,\n    cotizaciones,\n    salarios,\n    tickets,\n    tdcs,\n    users,\n    informes,\n    comprobantes,\n    procesos,\n    contables,\n    pucs,\n    pagos,\n    articulos,\n    tareas,\n    almacenes,\n    cajas,\n    cajasitems,\n    categorias,\n    clientes,\n    empresa,\n    marcas,\n    proveedores,\n    ventas,\n    compras,\n    cobros,\n    toastr: toastrReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n/*import { createLogger } from 'redux-logger';*/\nimport rootReducer from '../reducers';\n\n/*const loggerMiddleware = createLogger();*/\nexport const store = createStore(\n    rootReducer, \n    applyMiddleware(\n        thunkMiddleware,\n        /*loggerMiddleware*/\n    )\n);\n","/*export const api = \"http://192.168.0.100:4000/api\";*/\nexport const api = \"https://beggubo.com/services/api\";\nexport const local = \"http://localhost:3000\";\n","export function authHeader() {\n\n    let user  = JSON.parse(localStorage.getItem('@userUnity'));\n    let token = JSON.parse(localStorage.getItem('@userToken'));\n\nif (user && token){\n    return { 'x-access-token': token };\n}else{\n    return { };\n}\n\n}","export const locations = [\n    {\"label\":\"Argentina\",\"value\":\"Argentina\",\"indice\":0},\n    {\"label\":\"Bolivia\",\"value\":\"Bolivia\",\"indice\":1},      \n    {\"label\":\"Chile\",\"value\":\"Chile\",\"indice\":3},\n    {\"label\":\"Peru\",\"value\":\"Peru\",\"indice\":4},\n    {\"label\":\"--Otro--\",\"value\":\"--Otro--\",\"indice\":5}\n\n]\n\nexport const ciudades= [\n    {\"label\":\"Buenos Aires\",\"value\":\"Buenos Aires\",\"indice\":0},    \n    {\"label\":\"Cordova\",\"value\":\"Cordova\",\"indice\":0},\n    {\"label\":\"Corrientes\",\"value\":\"Corrientes\",\"indice\":0},\n    {\"label\":\"Mar del Plata\",\"value\":\"Mar del Plata\",\"indice\":0},\n    {\"label\":\"Rosario\",\"value\":\"Rosario\",\"indice\":0},\n    {\"label\":\"San Miguel de Tucuman\",\"value\":\"San Miguel de Tucuman\",\"indice\":0},\n    {\"label\":\"Santa Fe\",\"value\":\"Santa Fe\",\"indice\":0},\n    {\"label\":\"Salta\",\"value\":\"Salta\",\"indice\":0},\n    {\"label\":\"Beni\",\"value\":\"Beni\",\"indice\":1},\n    {\"label\":\"Cochabamba\",\"value\":\"Cochabamba\",\"indice\":1},\n    {\"label\":\"La Paz\",\"value\":\"La Paz\",\"indice\":1},\n    {\"label\":\"Oruro\",\"value\":\"Oruro\",\"indice\":1},\n    {\"label\":\"Pando\",\"value\":\"Pando\",\"indice\":1},\n    {\"label\":\"Potosi\",\"value\":\"Potosi\",\"indice\":1},        \n    {\"label\":\"Santa Cruz\",\"value\":\"Santa Cruz\",\"indice\":1},\n    {\"label\":\"Sucre\",\"value\":\"Sucre\",\"indice\":1},\n    {\"label\":\"Tarija\",\"value\":\"Tarija\",\"indice\":1},\n    {\"label\":\"Castro\",\"value\":\"Castro\",\"indice\":3},\n    {\"label\":\"Concepción\",\"value\":\"Concepción\",\"indice\":3},    \n    {\"label\":\"Iquique\",\"value\":\"Iquique\",\"indice\":3},\n    {\"label\":\"La Serena\",\"value\":\"La Serena\",\"indice\":3},\n    {\"label\":\"Puerto Montt\",\"value\":\"Puerto Montt\",\"indice\":3},\n    {\"label\":\"Punta Arenas\",\"value\":\"Punta Arenas\",\"indice\":3},    \n    {\"label\":\"Santiago\",\"value\":\"Santiago\",\"indice\":3},\n    {\"label\":\"Valdivia\",\"value\":\"Valdivia\",\"indice\":3},\n    {\"label\":\"Arequipa\",\"value\":\"Arequipa\",\"indice\":4},\n    {\"label\":\"Ayacucho\",\"value\":\"Ayacucho\",\"indice\":4},\n    {\"label\":\"Juliaca\",\"value\":\"Juliaca\",\"indice\":4},\n    {\"label\":\"Lima\",\"value\":\"Lima\",\"indice\":4},\n    {\"label\":\"Trujillo\",\"value\":\"Trujillo\",\"indice\":4},\n    {\"label\":\"--Otro--\",\"value\":\"--Otro--\",\"indice\":5}\n    \n]\n\nexport const paises = [\n    \n    {\"label\":\"Argentina\",\"value\":\"AR\",\"indice\":0},\n    {\"label\":\"Venezuela\",\"value\":\"VE\",\"indice\":1},\n    {\"label\":\"Bolivia\",\"value\":\"BO\",\"indice\":2},\n    {\"label\":\"Chile\",\"value\":\"CL\",\"indice\":3},\n    {\"label\":\"Colombia\",\"value\":\"CO\",\"indice\":4},\n    {\"label\":\"Nicaragua\",\"value\":\"NI\",\"indice\":5},\n    {\"label\":\"Costa Rican\",\"value\":\"CR\",\"indice\":6},\n    {\"label\":\"Republica Dominicana\",\"value\":\"DO\",\"indice\":7},\n    {\"label\":\"El Salvador\",\"value\":\"SV\",\"indice\":8},\n    {\"label\":\"Paraguay\",\"value\":\"PY\",\"indice\":9},\n    {\"label\":\"Mexico\",\"value\":\"MX\",\"indice\":10},\n    {\"label\":\"Peru\",\"value\":\"PE\",\"indice\":11},\n    {\"label\":\"Uruguay\",\"value\":\"UY\",\"indice\":12}\n    ]\n    \n    export const monedas = [    \n    {\"label\":\"Peso Argentino\",\"value\":\"ARS\",\"indice\":0},\n    {\"label\":\"Bolivar\",\"value\":\"VEB\",\"indice\":1},\n    {\"label\":\"Boliviano\",\"value\":\"BOB\",\"indice\":2},\n    {\"label\":\"Peso Chileno\",\"value\":\"CLP\",\"indice\":3},\n    {\"label\":\"Peso Colombia\",\"value\":\"COP\",\"indice\":4},\n    {\"label\":\"Cordoba\",\"value\":\"NIO\",\"indice\":5},\n    {\"label\":\"Colon\",\"value\":\"CRC\",\"indice\":6},\n    {\"label\":\"Peso Dominicano\",\"value\":\"DOP\",\"indice\":7},\n    {\"label\":\"Colon\",\"value\":\"SVC\",\"indice\":8},\n    {\"label\":\"Guarani\",\"value\":\"PYG\",\"indice\":9},\n    {\"label\":\"Peso Mexicano\",\"value\":\"MXN\",\"indice\":10},\n    {\"label\":\"Nuevo Sol\",\"value\":\"PEN\",\"indice\":11},\n    {\"label\":\"Peso Uruguay\",\"value\":\"UYU\",\"indice\":12}\n    ]\n    ","export const customStyles = {\n  container: (provided) => ({\n    ...provided,    \n    height: 30,\n    textAlign: 'left',\n    border: 'none',    \n    fontSize: '0.65rem',          \n    width:90,\n    padding: 0    \n  }),\n    control: (provider) => ({\n      // none of react-select's styles are passed to <Control />\n      ...provider,\n      minHeight: 25,\n      width: 85,\n      border: '1px solid #c1c1c1',            \n      height: 27,      \n      margin: 0,\n      padding: 0\n    }),\n    input: (provided) => ({\n      ...provided,      \n      color: '#4d4d4d',    \n      borderRadius: '0.5rem',       \n      width: 60,\n      height:15\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      minHeight: '1px',\n      paddingBottom: '0px',\n      color: '#4d4d4d',\n      fontSize: '0.65rem'\n    }),\n    dropdownIndicator: (provided) => ({\n      ...provided,\n      height: '28px',\n      width: '28px',\n      paddingTop: '5px',\n      paddingBottom: '0',\n      color: '#4d4d4d'      \n    }),\n    indicatorSeparator: (provided) => ({\n      ...provided,\n      width:'1px'\n    }),\n    valueContainer: (provided) => ({\n      ...provided,\n      minHeight: '1px',\n      height:'20px',\n      paddingTop: '0',\n      paddingBottom: '0',          \n      color: '#000'\n    }),\n    \n    clearIndicator: (provided) => ({\n      ...provided,\n      minHeight: '0.4px',\n      color: '#c1c1c1',\n\n    }),\n  }\n\n  export const customs = {\n    container: (provided) => ({\n      ...provided,    \n      height: 30,\n      textAlign: 'left',\n      border: 'none',    \n      fontSize: '0.65rem',          \n      width:90,\n      padding: 0\n    }),\n      control: (provider) => ({\n        // none of react-select's styles are passed to <Control />\n        ...provider,\n        minHeight: 27,\n        width: 100,\n        border: '1px solid #c1c1c1',            \n        height: 28,      \n        margin: 0,\n        padding: 0\n      }),\n      input: (provided) => ({\n        ...provided,      \n        color: '#4d4d4d',    \n        borderRadius: '0.5rem',       \n        width: 60,\n        height:15\n      }),\n      singleValue: (provided) => ({\n        ...provided,\n        minHeight: '1px',\n        paddingBottom: '0px',\n        color: '#4d4d4d',\n        fontSize: '0.65rem'\n      }),\n      dropdownIndicator: (provided) => ({\n        ...provided,\n        height: '28px',\n        width: '28px',\n        paddingTop: '5px',\n        paddingBottom: '0',\n        color: '#4d4d4d'      \n      }),\n      indicatorSeparator: (provided) => ({\n        ...provided,\n        width:'1px'\n      }),\n      valueContainer: (provided) => ({\n        ...provided,\n        minHeight: '1px',\n        height:'20px',\n        paddingTop: '0',\n        paddingBottom: '0',          \n        color: '#000'\n      }),\n      \n      clearIndicator: (provided) => ({\n        ...provided,\n        minHeight: '0.4px',\n        color: '#c1c1c1',\n  \n      }),\n    }\n\n    export const custom = {\n      container: (provided) => ({\n        ...provided,    \n        height: 30,\n        textAlign: 'left',\n        border: 'none',    \n        fontSize: '0.65rem',                  \n        padding: 0\n      }),\n        control: (provider) => ({\n          // none of react-select's styles are passed to <Control />\n          ...provider,\n          minHeight: 29,                    \n          height: 29,      \n          margin: 0,\n          padding: 0          \n        }),\n        input: (provided) => ({\n          ...provided,      \n          color: '#4d4d4d',    \n          borderRadius: '0.5rem',       \n          width: 60,\n          height:15               \n        }),\n        singleValue: (provided) => ({\n          ...provided,\n          minHeight: '1px',\n          paddingBottom: '0px',\n          color: '#4d4d4d',\n          fontSize: '0.65rem',          \n        }),\n        dropdownIndicator: (provided) => ({\n          ...provided,\n          height: '28px',\n          width: '28px',\n          paddingTop: '2px',\n          paddingBottom: '0',\n          color: '#4d4d4d' \n               \n        }),\n        indicatorSeparator: (provided) => ({\n          ...provided,\n          width:'1px',          \n          margin:0,\n          padding:0          \n        }),\n        valueContainer: (provided) => ({\n          ...provided,\n          minHeight: '1px',\n          height:'20px',\n          paddingTop: '0',\n          paddingBottom: '0',          \n          color: '#000',          \n          \n        }),\n        \n        clearIndicator: (provided) => ({\n          ...provided,\n          height: 10,\n          color: '#c1c1c1',          \n          padding:0,\n          margin:0\n        }),\n      }\n\n      export const customi= {\n        container: (provided) => ({\n          ...provided,    \n          height: 30,\n          textAlign: 'left',\n          border: 'none',    \n          fontSize: '0.65rem',                  \n          padding: 0,\n          width: '100%',\n        }),\n          control: (provider) => ({\n            // none of react-select's styles are passed to <Control />\n            ...provider,\n            minHeight: 29,                    \n            height: 29,      \n            margin: 0,\n            padding: 0,\n            \n                      \n          }),\n          input: (provided) => ({\n            ...provided,      \n            color: '#4d4d4d',    \n            borderRadius: '0.5rem',       \n            width: 60,\n            height:15               \n          }),\n          singleValue: (provided) => ({\n            ...provided,\n            minHeight: '1px',\n            paddingBottom: '0px',\n            color: '#4d4d4d',\n            fontSize: '0.65rem',          \n          }),\n          dropdownIndicator: (provided) => ({\n            ...provided,\n            height: '28px',\n            width: '28px',\n            paddingTop: '2px',\n            paddingBottom: '0',\n            color: '#4d4d4d' \n                 \n          }),\n          indicatorSeparator: (provided) => ({\n            ...provided,\n            width:'1px',          \n            margin:0,\n            padding:0          \n          }),\n          valueContainer: (provided) => ({\n            ...provided,\n            minHeight: '1px',\n            height:'20px',\n            paddingTop: '0',\n            paddingBottom: '0',          \n            color: '#000',          \n            \n          }),\n          \n          clearIndicator: (provided) => ({\n            ...provided,\n            height: 10,\n            color: '#c1c1c1',          \n            padding:0,\n            margin:0\n          }),\n        }\n  \n","import { api } from \"../helpers\";\n\nexport const usuarioService = {  \n  login,\n  logout  \n};\nfunction login(usuario) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(usuario),\n  };\n\n  return fetch(`${api}/usuarios/login`, requestOptions)\n    .then(handleResponse)\n    .then((response) => {          \n      console.log(response)   \n      if(response.user.usuario){\n        localStorage.setItem(\"@userUnity\", JSON.stringify(response.user.usuario));\n        localStorage.setItem(\"@userToken\", JSON.stringify(response.user.token));\n        localStorage.setItem(\"@userItems\", JSON.stringify(response.modulos));\n        localStorage.setItem(\"@userAlmacen\", JSON.stringify(response.almacen));\n        localStorage.setItem(\"@userEmpresa\", JSON.stringify(response.empresa));\n      }  \n      return response;\n    });\n}\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        //location.reload(true);\n      }\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nfunction logout() {\n  localStorage.removeItem(\"@userUnity\");\n  localStorage.removeItem(\"@userToken\");\n  localStorage.removeItem(\"@userItems\");\n  localStorage.removeItem(\"@userAlmacen\");\n  localStorage.removeItem(\"@userEmpresa\");\n}\n\n","import { authHeader, api } from \"../helpers\";\n\nexport const crudService = {  \n  GET_DATA,  \n  GET_ITEM,\n  GET_ITEM_SINGLE,\n  GET_ITEMS, \n  GET_SEARCH, \n  GET_SEARCHS,\n  GET_INFORMES,\n  GET_CONTABLES,  \n  GET_LIST,\n  GET_DELETE,\n  SET_ADD,\n  SET_ADD_SINGLE,\n  SET_UPDATE,\n  SET_UPDATES,\n  SET_UPLOAD_IMAGEN,\n  SEND_MAIL,\n  SET_COPIAR,\n  GET_SEARCH_ITEMS,\n  GET_SEARCHS_ITEMS\n};\n\nfunction GET_SEARCHS_ITEMS(payload, dato) {  \n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n\n  return fetch(`${api}/${payload}/searchs/lista/`, requestOptions).then(handleResponse);\n} \n\nfunction GET_SEARCH_ITEMS(payload, dato) {  \n  const requestOptions = {\n    method: \"GET\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n\n  return fetch(`${api}/${payload}/search/lista/${dato}`, requestOptions).then(handleResponse);\n} \n\nfunction GET_ITEM_SINGLE(payload, pky) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n  return fetch(`${api}/${payload}/list/${pky}`, requestOptions).then(handleResponse);\n}\nfunction SET_COPIAR(payload, pky) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n  return fetch(`${api}/${payload}/item/copiar/${pky}`, requestOptions).then(handleResponse);\n}\n\nfunction SEND_MAIL(payload, dato) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n  return fetch(`${api}/${payload}`, requestOptions).then(handleResponse);\n}\n\nfunction SET_UPLOAD_IMAGEN(payload, dato, datoId) {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: { ...authHeader() },\n    body: dato,\n  };\n  return fetch(\n    `${api}/files/${payload}/item/${datoId}`,\n    requestOptions\n  ).then(handleResponse);\n}\n\nfunction GET_SEARCHS(payload, dato) {  \n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n\n  return fetch(`${api}/${payload}/searchs/lista`, requestOptions).then(handleResponse);\n} \n\nfunction GET_SEARCH(payload, dato) {  \n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n\n  return fetch(`${api}/${payload}/search/lista`, requestOptions).then(handleResponse);\n} \n\n\nfunction GET_ITEMS(payload, prop,orden) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n  return fetch(`${api}/${payload}/items/${prop}/${orden}`, requestOptions).then(handleResponse);\n}\nfunction SET_UPDATES(payload, dato, tipo) {    \n  const requestOptions = {\n    method: \"PUT\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n  return fetch(`${api}/${payload}/${dato.item.id}/${tipo}`, requestOptions).then(  \n    handleResponse\n  );\n}\nfunction GET_DELETE(payload, pky, tipo) {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n  return fetch(`${api}/${payload}/${pky}/${tipo}`, requestOptions).then(handleResponse);\n}\n\nfunction GET_LIST(payload,prop,orden) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n  return fetch(`${api}/${payload}/list/${prop}/${orden}`, requestOptions).then(handleResponse);\n}\n\nfunction GET_CONTABLES(payload, dato) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n\n  return fetch(`${api}/contabilidad/${payload}`, requestOptions).then(handleResponse);\n}\n\nfunction GET_INFORMES(payload, dato) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n\n  return fetch(`${api}/informes/${payload}`, requestOptions).then(handleResponse);\n}\n\n\n\nfunction GET_DATA(payload,page,num,prop,orden) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n  return fetch(`${api}/${payload}/data/${page}/${num}/${prop}/${orden}`, requestOptions).then(handleResponse);\n}\n\nfunction GET_ITEM(payload, pky) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n  };\n  return fetch(`${api}/${payload}/item/${pky}`, requestOptions).then(handleResponse);\n}\n\nfunction  SET_UPDATE(payload, dato, tipo) {  \n  const requestOptions = {\n    method: \"PUT\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n  return fetch(`${api}/${payload}/${dato.id}/${tipo}`, requestOptions).then(\n    handleResponse\n  );\n}\n\nfunction SET_ADD(payload, dato, tipo) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n  return fetch(`${api}/${payload}/${tipo}`, requestOptions).then(handleResponse);\n}\n\nfunction SET_ADD_SINGLE(payload, dato) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(dato),\n  };\n  return fetch(`${api}/${payload}`, requestOptions).then(handleResponse);\n}\n\n\n\n\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        // logout();\n        //location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { authHeader, api } from \"../helpers\";\n\nexport const cajaService = {  \n  getListDetalle,\n  getItems,\n  getItem\n};\n\nfunction getListDetalle(payload, page,num,dato) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n  return fetch(`${api}/${payload}/listadetalle/${page}/${num}/${dato}`, requestOptions).then(handleResponse);\n}\n\nfunction getItems(payload,dato) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),  \n  };\n\n  return fetch(`${api}/${payload}/items/${dato}`, requestOptions).then(handleResponse);\n}\n\nfunction getItem(payload, pky) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n  return fetch(`${api}/${payload}/${pky}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        // logout();\n        //location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { crudService } from \"../services\";\nimport {toastr} from 'react-redux-toastr'\nexport const crudActions = {        \n  GET_DATA,  \n  GET_ITEM,\n  GET_ITEM_SINGLE,\n  GET_ITEMS,\n  GET_ITEM_LOAD,\n  GET_ITEM_COMPUESTO,\n  GET_SEARCH,\n  GET_SEARCHS,\n  GET_LIST,  \n  GET_DELETE,  \n  GET_DELETE_LOAD,\n  SET_CHANGE,\n  SET_ADD,\n  SET_ADD_LOAD,\n  SET_ADD_SINGLE,\n  SET_COPIAR,\n  SET_UPDATE,\n  SET_UPDATES,\n  VENTA_DIRECTA,\n  SET_APROBAR,\n  GET_INFORMES,\n  GET_CONTABLES,\n  SET_UPLOAD_IMAGEN,\n  GET_DASHBOARD,\n  GET_SEARCH_ITEMS,\n  GET_SEARCHS_ITEMS\n};\n\nfunction GET_SEARCHS_ITEMS(xredux, payload, dato) {    \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_SEARCHS_ITEMS(payload, dato)\n      .then((response) => {  \n        if(response.result){                   \n          dispatch(resRedux(xredux, response.result));                  \n        } \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)\n      });\n  };\n}\n\nfunction GET_SEARCH_ITEMS(xredux, payload, dato) {    \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_SEARCH_ITEMS(payload, dato)\n      .then((response) => {  \n        if(response.result){                   \n          dispatch(resRedux(xredux, response.result));                  \n        } \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)\n      });\n  };\n}\n\nfunction SET_COPIAR(xredux, payload, pky) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .SET_COPIAR(payload,pky)\n      .then((response) => {         \n        dispatch(resRedux(xredux, response.result));        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.success(payload, 'Item copiado')\n      })\n      .catch((err) => {                  \n        toastr.error(payload, err)   \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      });\n};\n}\n\nfunction GET_DASHBOARD(xredux, payload, dato) {  \n  return (dispatch) => {\n    crudService\n      .GET_INFORMES(payload,dato)\n      .then((response) => {      \n        /*console.log(response)*/       \n        dispatch(resRedux(xredux, response.result));\n       \n      })\n      .catch((err) => {\n        toastr.error(payload, err)        \n      });\n  };\n}\n\nfunction SET_UPLOAD_IMAGEN(payload, data, datoId) {\n  return (dispatch) => {    \n    dispatch({type:'SET_LOADING',state:true})\n    crudService\n      .SET_UPLOAD_IMAGEN(payload, data, datoId)\n      .then((response) => {                            \n        setTimeout(() => { \n          dispatch({type:'SET_LOADING',state:false})\n          toastr.success(payload, 'Imagen cargada')\n          }, 1000);\n      })\n      .catch((err) => {        \n        dispatch({type:'SET_LOADING',state:false})\n      });\n  };\n}\n\nfunction GET_SEARCHS(xredux, payload, dato) {    \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_SEARCHS(payload, dato)\n      .then((response) => {      \n                 \n        if(response.result){                   \n          dispatch(resRedux(xredux, response.result));                  \n        } \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)\n      });\n  };\n}\n\nfunction GET_SEARCH(xredux, payload, dato) {    \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_SEARCH(payload, dato)\n      .then((response) => {                  \n        if(response.result){                   \n          dispatch(resRedux(xredux, response.result));                  \n        } \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)\n      });\n  };\n}\n\nfunction GET_INFORMES(xredux, payload, dato) {\n  return (dispatch) => {   \n    /*dispatch({type:'SET_LOADING',state:true})*/ \n    crudService\n      .GET_INFORMES(payload, dato)\n      .then((response) => {                 \n        /*console.log(response)*/   \n        dispatch(resRedux(xredux, response.result));  \n        /*dispatch({type:'SET_LOADING',state:false})*/        \n      })\n      .catch((err) => {\n        toastr.error(payload, err) \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      });\n  };\n}\n\nfunction GET_CONTABLES(xredux, payload, dato) {\n  return (dispatch) => {   \n    dispatch({type:'SET_LOADING',state:true}) \n    crudService\n      .GET_CONTABLES(payload, dato)\n      .then((response) => {                 \n        \n        dispatch(resRedux(xredux, response));  \n        dispatch({type:'SET_LOADING',state:false})        \n      })\n      .catch((err) => {\n        toastr.error(payload, err) \n        dispatch({type:'SET_LOADING',state:false})\n      });\n  };\n}\n\nfunction GET_ITEMS(xredux, payload, prop, orden) {  \n  return (dispatch) => {\n    crudService\n      .GET_ITEMS(payload, prop,orden)\n      .then((response) => {             \n        dispatch(resRedux(xredux, response.result));\n      })\n      .catch((err) => {\n        toastr.error(payload, err)        \n      });\n  };\n}\n\n\n\nfunction VENTA_DIRECTA(xredux, payload, dato, tipo) {  \n  return (dispatch) => {\n    crudService\n      .SET_ADD(payload, dato, tipo)\n      .then((response) => {             \n        if(response.result){      \n          dispatch({type:'VENTAS_DIRECTAS'})              \n          dispatch(resRedux(xredux, response.result));  \n        }                            \n        toastr.success(payload, 'Dato creado')       \n      })\n      .catch((err) => {       \n        toastr.error(payload, err)       \n      });\n  };\n}\n\nfunction SET_APROBAR(xredux,payload, dato,tipo) {  \n  return (dispatch) => {\n    crudService\n     .SET_UPDATES(payload, dato,tipo)\n      .then((response) => {            \n        /*console.log(response)*/  \n          dispatch(resRedux(xredux, response.result));        \n          toastr.success(payload, 'Compra aprobada') \n      })\n      .catch((err) => {\n        toastr.error(payload, err) \n      });\n  };\n}\n\nfunction SET_UPDATES(xredux,payload, dato,tipo) {  \n  return (dispatch) => {\n    crudService\n      .SET_UPDATES(payload, dato,tipo)\n      .then((response) => {      \n        if(response.item){\n          dispatch(resRedux(xredux, response.result));\n        }        \n        toastr.success(payload, 'Dato actualizado') \n      })\n      .catch((err) => {\n        toastr.error(payload, err)\n      });\n  };\n}\n\nfunction GET_ITEM_COMPUESTO(xredux, payload, pky) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_ITEM(payload, pky)\n      .then((response) => {            \n        /*console.log(response)*/\n        /*dispatch({type:'SET_LOADING',state:false})*/        \n        if(xredux === 'PERSONAS_ITEM')\n        {          \n          dispatch({type:'PERSONAS_ITEM',response:response.result.persona})\n          dispatch({type:'ESTUDIOS_ADD',response:response.result.estudios})          \n          dispatch({type:'EXPERIENCIAS_ADD',response:response.result.experiencias})\n        }\n        if(xredux === 'CLIENTES_ITEM')\n        {\n          dispatch(resRedux('CLIENTES_ITEM', response.result.cliente));\n          dispatch(resRedux('VENTAS_ITEM_DATA', response.result.ventas));\n        }\n      })\n      .catch((err) => {\n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)                \n      });\n  };\n}\n\nfunction GET_ITEM_LOAD(xredux, payload, pky) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_ITEM(payload, pky)\n      .then((response) => {    \n        /*console.log(response)*/         \n        /*dispatch({type:'SET_LOADING',state:false})*/\n        dispatch(resRedux(xredux, response.result)); \n        if(xredux === 'PROSPECTOS_ITEM' && response.result.articulo)\n        {\n          dispatch({type:'ARTICULOS_ITEM',response:response.result.articulo})\n        }\n      })\n      .catch((err) => {\n        /*dispatch({type:'SET_LOADING',state:false})*/\n        toastr.error(payload, err)                \n      });\n  };\n}\n\nfunction GET_DELETE_LOAD(xredux, payload, pky, tipo) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_DELETE(payload, pky,tipo)\n      .then((response) => {                          \n        if(response.result){\n          dispatch(resRedux(xredux, response.result));  \n        }                            \n        /*dispatch({type:'SET_LOADING',state:false})*/    \n      })\n      .catch((err) => {               \n        /*dispatch({type:'SET_LOADING',state:false})*/    \n      });\n  };\n}\n\nfunction GET_DELETE(xredux, payload, pky, tipo) {  \n  return (dispatch) => {\n    crudService\n      .GET_DELETE(payload, pky,tipo)\n      .then((response) => {                          \n        if(response.result){\n          dispatch(resRedux(xredux, response.result));  \n        }                            \n        toastr.success(payload, 'Dato eliminado')       \n      })\n      .catch((err) => {               \n        toastr.error(payload, err.message)       \n      });\n  };\n}\n\nfunction GET_LIST(xredux, payload, prop, orden) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_LIST(payload, prop, orden)\n      .then((response) => {                             \n            \n       dispatch(resRedux(xredux, response.result));\n       /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {\n        /*dispatch({type:'SET_LOADING',state:false})*/\n          toastr.error(payload, err)          \n    });\n};\n}\n\n\n\n\n\nfunction SET_UPDATE(xredux,payload, dato,tipo) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .SET_UPDATE(payload, dato,tipo)\n      .then((response) => {          \n            \n        dispatch(resRedux(xredux, response.result));        \n        toastr.success(payload, 'Dato actualizado') \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {\n        toastr.error(payload, err)\n        /*dispatch({type:'SET_LOADING',state:false})*/\n      });\n  };\n}\n\nfunction SET_ADD_LOAD(xredux, payload, dato, tipo) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .SET_ADD(payload, dato, tipo)\n      .then((response) => {             \n        if(response.result){           \n                 \n          dispatch(resRedux(xredux, response.result)); \n        }  \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {       \n        toastr.error(payload, err)\n        /*dispatch({type:'SET_LOADING',state:false})*/      \n      });\n  };\n}\n\nfunction SET_ADD(xredux, payload, dato, tipo) {  \n  return (dispatch) => {\n    crudService\n      .SET_ADD(payload, dato, tipo)\n      .then((response) => {  \n           /*console.log(response)*/        \n        if(response.result){                    \n          dispatch(resRedux(xredux, response.result));  \n        }  \n                             \n        toastr.success(payload, response.message)       \n      })\n      .catch((err) => {       \n        toastr.error(payload, err)       \n      });\n  };\n}\nfunction SET_ADD_SINGLE(xredux, payload, dato) {  \n  return (dispatch) => {\n    crudService\n      .SET_ADD_SINGLE(payload, dato)\n      .then((response) => {  \n           /*console.log(response)*/        \n        if(response.result){                    \n          dispatch(resRedux(xredux, response.result));  \n        }                            \n        toastr.success(payload, response.message)       \n      })\n      .catch((err) => {       \n        toastr.error(payload, err)       \n      });\n  };\n}\n\nfunction SET_CHANGE(xredux, props, values) {  \n  return {\n    type: xredux, props: props, value: values\n  };\n}\n\nfunction GET_ITEM_SINGLE(xredux, payload, pky) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_ITEM_SINGLE(payload, pky)\n      .then((response) => {             \n        dispatch(resRedux(xredux, response.result));\n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {\n        /*dispatch({type:'SET_LOADING',state:false})*/\n          toastr.error(payload, err)      \n      });\n  };\n}\n\nfunction GET_ITEM(xredux, payload, pky) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_ITEM(payload, pky)\n      .then((response) => {                     \n       dispatch(resRedux(xredux, response.result));\n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {\n        /*dispatch({type:'SET_LOADING',state:false})*/\n          toastr.error(payload, err)      \n      });\n  };\n}\n\nfunction GET_DATA(xredux, payload, page, num, prop, orden) {  \n  return (dispatch) => {\n    /*dispatch({type:'SET_LOADING',state:true})*/\n    crudService\n      .GET_DATA(payload,page,num,prop,orden)\n      .then((response) => {      \n           \n        dispatch(resRedux(xredux, response.result));        \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      })\n      .catch((err) => {                  \n        toastr.error(payload, err)   \n        /*dispatch({type:'SET_LOADING',state:false})*/\n      });\n};\n}\n\nexport function resRedux(xredux, result) {     \n  return {\n    type: xredux,\n    response: result\n  };    \n}\n\n\n\n\n  ","import { usuarioService } from \"../services\";\nimport { history } from \"../helpers\";\nimport { toastr } from \"react-redux-toastr\";\n\n\nexport const usuarioActions = {  \n  login,\n  logout\n};\n/*---------------------------------------------------------------*/\nfunction login(user) {\n  return (dispatch) => {    \n    usuarioService\n      .login(user)\n      .then((response) => {                    \n        if(response.user.usuario){          \n          dispatch({type:'LOGIN_SUCCESS'})                \n            history.push(\"/inicio\");                                        \n        }else{          \n          toastr.error('Error', response.user.message)\n        }              \n      })\n      .catch((err) => {          \n        toastr.error('Error', err)\n      });\n  };\n}\n\nfunction logout() {    \n  return (dispatch) => {\n    usuarioService.logout();\n    dispatch({type:'LOGIN_LOGOUT'})\n    history.push(\"/\");\n  };\n}\n\n\n\n/*---------------------------------------------------------------*/\n","import { cajaService, crudService } from \"../services\";\nimport {toastr} from 'react-redux-toastr'\nexport const cajaActions = {  \n  /*GET*/  \n  getListDetalle,\n  getItems,\n  viewModal,\n  getItem,\n  setAdd\n};\n\n/*---------------------------------------------------------------*/\nfunction setAdd(payload, dato) {  \n  return (dispatch) => {\n    crudService\n      .SET_ADD(payload, dato,'lista')                \n      .then((response) => {                                         \n        dispatch(ItemGet('CAJAS_ITEMS_DATA', response.result.items));           \n        dispatch(ListaPost(\"CAJAS_ITEM\", response.result.item));\n        dispatch({type:'CAJAS_ITEMS_RESET_ITEM'})      \n        toastr.success(payload, 'Dato creado')     \n\n      })\n      .catch((err) => {        \n        \n      });\n  };\n}\n\n\n\nexport function ListaPost(xredux, result) { \n  return {  \n    type: xredux,\n    response: result\n  };\n}\n\n/*---------------------------------------------------------------*/\nfunction viewModal(xredux, est) {  \n  return (dispatch) => {    \n    dispatch({type: xredux, view:est});\n  };\n}\n/*---------------------------------------------------------------*/\nfunction getItems(xredux, payload, pky) {  \n  return (dispatch) => {\n    cajaService\n      .getItems(payload, pky)\n      .then((response) => {                                         \n          dispatch(ItemGet('CAJAS_ITEM', response.result.cajau));\n          dispatch(ItemGet('CAJAS_ITEMS_DATAS', response.result.itemsu));                  \n      })\n      .catch((err) => {\n         \n      });\n  };\n}\n\n/*---------------------------------------------------------------*/\nfunction getListDetalle(xredux, payload, page,num,dato) {  \n  return (dispatch) => {\n    cajaService\n      .getListDetalle(payload, page,num,dato)\n      .then((response) => {                                   \n        dispatch(ListaGet(xredux, response.result));\n      })\n      .catch((err) => {\n        toastr.error('Error', err)      \n        \n      });\n  };\n}\n\nexport function ListaGet(xredux, result) {  \n \n  return {\n    type: xredux,\n    response: result\n  };\n}\n\n\nfunction getItem(xredux, payload, pky) {  \n  return (dispatch) => {\n    crudService\n      .GET_ITEM(payload, pky)\n      .then((response) => {                                                       \n        dispatch(ItemGet('CAJAS_ITEM', response.result.item));\n        dispatch(ItemGet('CAJAS_ITEMS_DATA', response.result.items));  \n         console.log(response)       \n      })\n      .catch((err) => {        \n        \n      });\n  };\n}\n\nexport function ItemGet(xredux, result) {  \n  return {\n    type: xredux,\n    response: result\n  };\n}","import { crudService } from \"../services\";\nimport {toastr} from 'react-redux-toastr'\nexport const mailActions = {        \n  SEND_MAIL\n};\n\nfunction SEND_MAIL(payload, dato) {  \n    return (dispatch) => {\n      dispatch({type:'SET_LOADING',state:true})\n      crudService\n        .SEND_MAIL(payload,dato)\n        .then((response) => {         \n          toastr.success(\"Cotización enviada\")       \n          dispatch({type:'SET_LOADING',state:false})\n        })\n        .catch((err) => {                  \n          toastr.error(payload, err)   \n          dispatch({type:'SET_LOADING',state:false})\n        });\n  };\n  }\n\n\n\n  ","import React,{useEffect} from \"react\";\nimport { Row,Col, Card, CardHeader, CardTitle } from \"reactstrap\"\nimport { useSelector, useDispatch } from 'react-redux'  \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandHoldingUsd, faDollarSign, faReceipt, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../actions'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nconst InicioView = () => {\n  const dispatch = useDispatch()   \n  const {compraT, comprasItem, comprasLabel, resCompras,pagosPendientes, pagosRealizados,prealizados, ppendientes } = useSelector(state => state.informes)\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  let d = new Date()\n  let gestion = d.getFullYear()\n  \n  const makeHttpRequestWithPage = () =>{\n    let iok={\n      \"usuarioId\":usuario.id,\n      \"rolId\": usuario.rolId,\n      \"gestion\": gestion\n    }\n    dispatch(crudActions.GET_INFORMES('INFORMES_DASHBOARD_COMPRA','buycons',iok))      \n  }\n\n  useEffect(() => {\n    makeHttpRequestWithPage() //COMPRAS_INFORMES_RESET\n    return () => {\n      dispatch({type:'INFORMES_DASHBOARD_RESET_COMPRA'}) \n    };\n  }, []);\n\n  const compras = {\n    chart: {\n      type: 'bar'\n  },\n  title: {\n      text: 'Compras'\n  },\n  subtitle: {\n      text: 'Gestión: '+ gestion\n  },\n  xAxis: {\n      categories: comprasLabel,\n      title: {\n          text: null\n      }\n  },\n\n \n  credits: {\n      enabled: false\n  },\n  series: [{\n      name: 'Compras 2020',\n      data: comprasItem\n    }]\n  }\n\n  const pagos = {\n    chart: {\n      type: 'column'\n  },\n  title: {\n      text: 'Pagos'\n  },\n  subtitle: {\n    text: 'Gestión: '+ gestion\n  },\n  credits: {\n    enabled: false\n  },\n  xAxis: {\n      categories: [\n          'Ene',\n          'Feb',\n          'Mar',\n          'Abr',\n          'May',\n          'Jun',\n          'Jul',\n          'Ago',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dic'\n      ],\n      crosshair: true\n  },\n  yAxis: {\n      min: 0,\n      title: {\n          text: 'Expresado en  '+ '('+ empresa.moneda+')'\n      }\n  },\n\n  plotOptions: {\n      column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n      }\n  },\n  series: [{\n      name: 'Realizados',\n      data: pagosRealizados\n\n  }, {\n      name: 'Pendientes',\n      data: pagosPendientes\n\n  }]\n  }\n\n  const samples = {\n\n    chart: {\n      type: 'line'\n  },\n  title: {\n      text: 'Compras'\n  },\n  subtitle: {\n      text: 'Gestión: '+ gestion\n  },\n  xAxis: {\n      categories: ['Ean', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dic']\n  },\n  yAxis: {\n      title: {\n          text: 'Expresado en Cantidades'\n      }\n  },\n  plotOptions: {\n      line: {\n          dataLabels: {\n              enabled: true\n          },\n          enableMouseTracking: false\n      }\n  },\n  credits: {\n    enabled: false\n  },\n  series: [{\n      name: 'Compras',\n      data: resCompras\n  } ]\n\n  }\n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <Row className=\"mt-1\">           \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\"><FontAwesomeIcon icon={faShoppingCart} /></div>\n              <CardTitle className=\"text-dark\"> COMPRAS CANTIDAD</CardTitle>\n              <p>{compraT.total}</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n              <div className=\"card-icono\"><FontAwesomeIcon icon={faReceipt} /></div>\n              <CardTitle className=\"text-dark\"> COMPRAS VALOR</CardTitle>\n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(compraT.suma)}</p>                                    \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-rojo\"><FontAwesomeIcon icon={faDollarSign} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b>{ppendientes.total || '0'}</b> - PAGOS PENDIENTES</CardTitle>              \n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(ppendientes.suma || '0')}</p>                                  \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n              <div className=\"card-verde\"><FontAwesomeIcon icon={faHandHoldingUsd} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b>{prealizados.total || '0'}</b> - PAGOS REALIZADOS</CardTitle>\n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(prealizados.suma || '0')}</p>                                    \n              </CardHeader>\n          </Card>    \n          </Col>\n          \n        </Row>  \n\n        <Row className=\"mt-1\">\n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={compras}\n                />\n            </Card>    \n          </Col>  \n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={samples}\n                />\n            </Card>    \n          </Col>            \n        </Row> \n        <Row className=\"mt-1\">\n          <Col md={12}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={pagos}\n                />\n            </Card>                       \n          </Col>            \n        </Row>   \n      </div>\n    </div>    \n  )\n\n};\nexport default InicioView;\n","import React from \"react\";\nimport { Button, Nav } from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleLeft,\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Pagination({\n  makeHttpRequestWithPage,    \n  total,\n  paginas,\n  current,  \n  pagina,\n}) {\n  let renderPageNumbers;\n  const pageNumber = [];\n  if (total !== null) {\n    for (let i = 1; i <= paginas; i++) {\n      pageNumber.push(i);\n    }\n    renderPageNumbers = pageNumber.map((number,index) => {          \n      let classes = current === number ? \"btn-linkis\" : \"btn-linkis disabled\";\n\n      if (\n        number === 1 ||\n        number === total ||\n        (number >= current - 2 && number <= current + 2)\n      ) {\n        return (\n          <li className=\"nav-link\" key={index}>\n          <Button            \n            className={classes}\n            onClick={() => makeHttpRequestWithPage(number, pagina)}\n          >\n            {number}\n          </Button>\n          </li>\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n  return (\n    <Nav className=\"navbari navbar-expand bnavbar\">\n      <li className=\"nav-link\">\n        <Button\n          className=\"btn-linki\"\n          onClick={() => makeHttpRequestWithPage(1, pagina)}>\n          <FontAwesomeIcon icon={faAngleDoubleLeft} />\n        </Button>\n      </li>\n\n      <li className=\"nav-link\">\n        <Button\n          className=\"btn-linki\"\n          onClick={() =>\n            makeHttpRequestWithPage(current === 1 ? 1 : current - 1, pagina)\n          }\n        >\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </Button>\n      </li>\n      {renderPageNumbers}\n\n      <li className=\"nav-link\">\n        <Button\n          className=\"btn-linki\"\n          onClick={() =>\n            makeHttpRequestWithPage(current === paginas ? current : current + 1,\n              pagina\n            )\n          }\n        >\n          <FontAwesomeIcon icon={faAngleRight} />\n        </Button>\n      </li>\n      <li className=\"nav-link\">\n        <Button\n          className=\"btn-linki\"\n          onClick={() => makeHttpRequestWithPage(paginas, pagina)}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n        </Button>\n      </li>\n      <li className=\"nav-link pull-right\">\n      <p className=\"labeln\">página {current} de {paginas}</p>\n      </li>\n     \n    </Nav>\n  );\n}\nexport default Pagination;\n","export const defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )  \n}\nfunction getDay (day){       \n  let nday = '01';\n  switch(day)\n  {\n    case 1:      \n      nday = '01'\n    break;\n    case 2:      \n      nday = '02'\n    break;\n    case 3:      \n      nday = '03'\n    break;\n    case 4:      \n      nday = '04'\n    break;\n    case 5:      \n      nday = '05'\n    break;\n    case 6:      \n      nday = '06'\n    break;\n    case 7:      \n      nday = '07'\n    break;\n    case 8:      \n      nday = '08'\n    break; \n    case 9:      \n      nday = '09'\n      break;\n    case 10:      \n      nday = '10'\n      break;\n    case 11:      \n      nday = '11'\n      break;\n    case 12:      \n      nday = '12'      \n      break;            \n    default:\n    break;\n\n  }    \n  return nday\n\n}\n\nexport function getMes(){\nlet mesHoy = new Date()  \nlet m = getDay(mesHoy.getMonth()+1)\nlet y = mesHoy.getFullYear()\n\nlet fecha ={}\nfecha.desde = `${y}-${m}-01`\nfecha.hasta = '0'  \n\nswitch(m)\n{\n  case '01':      \n    fecha.hasta = `${y}-${m}-31`\n  break;  \n  case '02':\n    fecha.hasta = `${y}-${m}-28`          \n  break;  \n  case '03':      \n    fecha.hasta = `${y}-${m}-31`\n    break;\n  case '04':      \n    fecha.hasta = `${y}-${m}-30`      \n    break;\n  case '05':      \n    fecha.hasta = `${y}-${m}-31`\n    break;\n  case '06':      \n    fecha.hasta = `${y}-${m}-30`\n    break;\n  case '07':      \n    fecha.hasta = `${y}-${m}-31`\n    break;\n  case '08':      \n    fecha.hasta = `${y}-${m}-31`\n    break;\n  case '09':      \n    fecha.hasta = `${y}-${m}-30`\n    break;\n  case '10':      \n    fecha.hasta = `${y}-${m}-31`\n    break;\n  case '11':      \n    fecha.hasta = `${y}-${m}-30`\n    break;        \n  case '12':      \n    fecha.hasta = `${y}-${m}-31`\n    break;  \n  default:\n  break;\n\n}\nreturn fecha\n\n}","export const tipoCliente = [\n    {\"value\":\"prospectos\",\"label\":\"prospectos\"},\n    {\"value\":\"interesados\",\"label\":\"interesados\"},\n    {\"value\":\"compradores\",\"label\":\"compradores\"},\n    {\"value\":\"clientes\",\"label\":\"clientes\"},\n    {\"value\":\"leales\",\"label\":\"leales\"}\n\n]; \nexport const grupoCliente = [    \n    {\"value\":\"empresarial\",\"label\":\"empresarial\"},\n    {\"value\":\"personal\",\"label\":\"personal\"}    \n]; \n\nexport const formaPagos = [    \n    {\"value\":\"contado\",\"label\":\"contado\"},\n    {\"value\":\"crédito\",\"label\":\"crédito\"}    \n];\n\nexport const formaEntregas = [    \n    {\"value\":\"Inmediato\",\"label\":\"Inmediato\"},\n    {\"value\":\"Mismo día\",\"label\":\"Mismo día\"},\n    {\"value\":\"Día siguiente\",\"label\":\"Día siguiente\"},\n    {\"value\":\"1 semana\",\"label\":\"1 semana\"}\n];\n\nexport const impuestos = [    \n    {\"value\":'0',\"label\":\"Sin/Iva\"},\n    {\"value\":'13',\"label\":\"IVA(13%)\"}    \n];\n\nexport const tipoPromociones = [    \n    {\"value\":'agotar stock',\"label\":'agotar stock'},\n    {\"value\":'descuento',\"label\":'descuento'},\n    {\"value\":'nuevo producto',\"label\":'nuevo producto'},\n    {\"value\":'oferta',\"label\":'oferta'}\n];\n\n\nexport const tiposPersona = [    \n    {\"value\":'Natural',\"label\":'Natural'},\n    {\"value\":'Jurídica',\"label\":'Jurídica'}    \n];\nexport const tiposProveedor = [    \n    {\"value\":'Proveedor Local',\"label\":'Proveedor Local'},\n    {\"value\":'Proveedor Internacional',\"label\":'Proveedor Internacional'}\n];\n\nexport const tiposLlamada = [        \n    {\"value\":\"#f0352eb0\",\"label\":\"Email\"}, \n    {\"value\":\"#99ee38b4\",\"label\":\"Llamada\"},                   \n    {\"value\":\"#c338eebd\",\"label\":\"Reunion\"}\n    \n];\n\nexport const pages =[\n    {\"value\":15,\"label\":\"15\"},\n    {\"value\":30,\"label\":\"30\"},\n    {\"value\":50,\"label\":\"50\"}             \n];\n\n\nexport const niveles = [\n              {\"value\":\"AR\",\"label\":\"Alta Rotación (AR)\"},\n              {\"value\":\"LM\",\"label\":\"Lento Movimiento (LM)\"},\n              {\"value\":\"OB\",\"label\":\"Obsoleto (OB)\"}                                 \n              ];      \nexport const clasificaciones = [\n                {\"value\":\"A\",\"label\":\"A\"},\n                {\"value\":\"B\",\"label\":\"B\"},\n                {\"value\":\"C\",\"label\":\"C\"}                                 \n                ];                                                         \nexport const tiposServicio = [\n              {\"value\":\"Bienes de Consumo\",\"label\":\"Bienes de Consumo\"}, \n              {\"value\":\"Servicios\",\"label\":\"Servicios\"},\n              {\"value\":\"Bienes de uso Comun\",\"label\":\"Bienes de uso Comun\"},\n              {\"value\":\"Bienes de emergencia\",\"label\":\"Bienes de emergencia\"},\n              {\"value\":\"Bienes durables\",\"label\":\"Bienes durables\"},\n              ]\n","import React,{useEffect,  useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableCompras = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas,indicador }= useSelector(state => state.compras)\n \n   const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('COMPRAS_DATA','compras',page, num,usuario.id,usuario.rolId))     \n  }\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  useEffect(() => {\n    makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'COMPRAS_RESET_DATA'})\n      };\n  }, []);\n\n  const setIndicador = (pky,est,monto) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'COMPRAS_INDICADOR',value:iok,estado:est,indicadorTotal:monto}) \n  };\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n\n                  <th width=\"5%\"></th>\n                  <th width=\"5%\">Código</th>\n                  <th width=\"10%\">Origen</th>\n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"35%\">Titulo</th>                  \n                  <th width=\"10%\">Total</th>\n                  <th width=\"5%\">Estado</th>\n                  <th width=\"20%\">Proveedor</th>                               \n                  \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item, index) => (\n                      <tr key={index}>                                            \n                        <td >                       \n                        <Input type=\"checkbox\" \n                        onChange={() => { setIndicador(item.id, item.estado, item.totalGeneral) }} \n                        checked={ item.id === indicador ? true : false}\n                        /></td>\n                        <td>{item.id}</td>\n                        <td>{item.origen}</td>\n                        <td><Moment format=\"DD-MM-YYYY\">{item.fechaCompra}</Moment></td>                        \n                        <td>{item.observaciones}</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                                   \n                        <td className=\"text-center\">\n                          { item.estado === 'cerrado' ? \n                          <FontAwesomeIcon icon={faLock} className=\"text-verde\"/>\n                          :\n                          <FontAwesomeIcon icon={faLockOpen} className=\"text-rojo\"/>\n                          }                        \n                        </td>\n                        <td>{item.proveedor}</td>                                                                                 \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n      </CardBody>    \n      <CardFooter>     \n    <Row>  \n    <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>  \n    </Row>  \n    </CardFooter> \n        </Card>  \n      </Col>\n    </Row>    \n</>      \n  )\n\n};\nexport default TableCompras;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n      <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Compra # {this.props.dato.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Origen : {this.props.dato.origen}</h5>\n              <h5 className=\"text-center pio\"> Fecha : {this.props.dato.fechaCompra}</h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>    \n            <Table className=\"table-reporteh mt-2\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{this.props.dato.nroItems}</td>                                                            \n                  <td><b>Usuario : </b></td>\n                  <td>{this.props.dato.usuario.nombres || ''} </td>\n                </tr>                \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalGeneral)}</td>                     \n                  <td><b>Proveedor : </b></td>\n                  <td>{this.props.dato.proveedor.razonSocial || ''} </td>\n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"3\">{ this.props.dato.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"20%\" >Código</th>\n                <th width=\"50%\">Nombre</th>                                \n                <th width=\"10%\">Costo</th>\n                <th width=\"10%\">Cantidad</th>                \n                <th width=\"10%\">Total</th>                                             \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n                  {this.props.data.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                                                                                                                                      \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>                     \n                        <td>{item.cantidad} ({item.unidad})</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>\n            </Col>      \n        </Row>   \n        <Row>\n          <Col md=\"4\" className=\"mr-3\">\n          <h4>Nota de venta</h4>  \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Nº </b></td>\n                  <td>{this.props.xnota.id}</td>                                                            \n                </tr>  \n                <tr>      \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{this.props.xnota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.montoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Pago Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.pagoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.saldoTotal)}</td>                                       \n                </tr>                \n              </tbody>             \n            </Table>  \n          </Col>\n          <Col md=\"7\">\n            <h4>Pagos</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>                  \n                <th width=\"20%\">Cuota</th>\n                <th width=\"30%\">Fecha Pago</th>\n                <th width=\"10%\">Estado</th>\n                <th width=\"40%\">Monto</th>                \n              </tr>\n          </thead>\n          {this.props.xplan && (\n              <tbody>\n                  {this.props.xplan.map((item, index) => (\n                      <tr key={index}>                      \n                        <td>{item.cuota}</td>\n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaPago}</Moment></td>                                                                 \n                        <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                                             \n                      </tr>  \n                      ))}\n              </tbody>\n          )}     \n            </Table>      \n          </Col>\n        </Row>\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n      \n    </> \n    );\n  }\n}\n\n\nfunction ArticuloResumen () {    \nconst dispatch = useDispatch()\nconst { item, items, nota, plan } = useSelector(state => state.compras)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'COMPRAS_RESET_RESUMEN'})         \n    };\n  }, []);\n\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}\n            xnota={nota}\n            xplan={plan}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default ArticuloResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ButtonGroup, Row,Col,Button, Form, Modal, Table, ModalBody, FormGroup, Input, Label, Card, CardBody  } from \"reactstrap\"\nimport { crudActions, mailActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faCheck, faEnvelope, faEdit, faSearch, faPlus, faTrash, faFilePdf, faCoins, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport CompraResumen from './CompraResumen'\nimport Switch from 'react-switch'\nimport { defaultVal } from \"../../../../helpers/funciones\";\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'proveedor',\"label\":'proveedor'}\n            ];\n\nconst SearchCompras = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, indicadorTotal, estado}= useSelector(state => state.compras)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n    const [viewx, setviewx] = useState(false);\n    const [viewz, setviewz] = useState(false);\n    const [viewy, setviewy] = useState(false);\n    const [cuota, setcuota] = useState(1);\n    const [plan, setplan] = useState([]);\n\n    const [contado, setContado] = useState(true);\n    const [banco, setBanco] = useState(false);\n    const [inicial, setInicial] = useState(false);\n    const [pinicial, setPinicial] = useState(0);\n    const [nombres, setnombres] = useState(\"\");\n    const [email, setemail] = useState(\"\");\n    const [observaciones, setobservaciones] = useState(\"\");\n\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n    \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      iok.usuarioId = usuario.id\n      iok.rolId = usuario.rolId\n      dispatch(crudActions.GET_SEARCH('COMPRAS_DATA','compras',iok))              \n      console.log(iok)\n   }  \n  \n   const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('COMPRAS_DATA','compras',indicador,'lista'))      \n    dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setview(false)\n\n  };\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n  const toggleModalViewx = () => {        \n    setviewx(!viewx)      \n             \n  };\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)      \n             \n  };\n  const toggleModalViewy = () => {        \n    setviewy(!viewy)                   \n  };\n\n  const viewArticulo = () => {                    \n    dispatch(crudActions.GET_ITEM('COMPRAS_ITEM','compras',indicador))\n    setviewz(!viewz)\n  }; \n\n\n\n  const aprobarCompra = () => {   \n    let dato ={\n      \"id\": indicador,\n      \"tipo\": \"compra\",      \n      \"almacenId\": 1,\n      \"estado\": \"cerrado\",      \n      \"usuarioId\" : usuario.id,\n      \"rolId\": usuario.rolId,\n      \"nroPagos\": cuota,\n      \"total\": indicadorTotal     \n    }\n           \n    let xcode = {\n      item: dato,\n      items:plan,\n      contado:contado,\n      banco:banco,\n      inicial:inicial,\n      cuota:pinicial,\n      total:indicadorTotal\n    }\n    dispatch(crudActions.SET_APROBAR('COMPRAS_DATA','compras/aprobar',xcode,'lista'))     \n    dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setviewx(false)\n  };\n\n  const calcular = () => {         \n    let newArray = []\n    let diok = false\n    let dd = new Date()\n    for (let index = 0; index < cuota; index++) {\n      if(index === 0 && inicial){\n        setPinicial(parseFloat(indicadorTotal)/cuota)\n        diok = true\n      }\n      let iok = {}\n      iok.cuota     = index+1\n      iok.monto     = parseFloat(indicadorTotal)/cuota\n      iok.estado    =  diok\n      iok.fechaPago = dd\n      iok.mes       = dd.getMonth() + 1\n      newArray.push(iok)\n      diok = false\n    }\n    \n    setplan(newArray)\n}\n\nconst onChange = (event,item) => {       \n\n  const {name, value } = event.target    \n  let xarray = [...plan]\n  for (let index = 0; index < cuota; index++) {\n    xarray[item]['fechaPago']= value\n    \n  }\n  setplan(xarray)\n};\n\n\nconst enviar = event => {    \n  event.preventDefault()             \n  let dato ={\n    compraId: indicador,\n    proveedorId:2,\n    email: email,\n    nombres : nombres,\n    observaciones: observaciones\n  }\n  dispatch(mailActions.SEND_MAIL('mails/getcotizacion',dato))\n  dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n  setnombres('')\n  setobservaciones('')\n  setemail('')\n  setviewy(false)\n  \n};\n\n    return (                                      \n      <>       \n      <Card>    \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faShoppingCart} />  \n          </div>        \n        </Col>    \n        <Col md={4} className=\"cards\">\n          <ButtonGroup>\n                <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  \n                onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n                 <Button className={indicador === 0  || estado === 'cerrado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                   <FontAwesomeIcon icon={faEdit} /></Button>            \n                 <Button className={indicador === 0  || estado === 'cerrado' ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n                   <FontAwesomeIcon icon={faTrash} /> </Button>                                \n                 <Button className={indicador === 0 || estado === \"pendiente\" ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n                   <FontAwesomeIcon icon={faFilePdf} /> </Button> \n                 <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewx()} >\n                   <FontAwesomeIcon icon={faCoins} /></Button>      \n                   <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewy()} >\n               <FontAwesomeIcon icon={faEnvelope} /></Button>               \n          </ButtonGroup>\n        </Col>\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col>\n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } COMPRAS</p>          \n        </Col>\n\n      </Row>   \n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewx} toggle={toggleModalViewx} className=\"calculoBody\">  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewx()} >\n          <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody className=\"calculoConte\">\n          <Row>                       \n              <Col md={2}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nro. cuotas</Label>\n                    <Input type=\"number\" name=\"cuota\" id=\"cuota\" \n                    value={cuota || ''}                \n                    onChange={ (e) => setcuota(e.target.value)} />    \n                  </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Contado</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setContado(e)}}  \n                        checked={contado} />\n                    </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                      <Label for=\"estado\">Cheque</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setBanco(e)}}  \n                        checked={banco} />\n                </FormGroup>      \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">P.Inicial</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setInicial(e)}}  \n                        checked={inicial} />\n                    </FormGroup>\n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    className=\"btn-md btn-info mt-4\"\n                    onClick={() => calcular()}>\n                    <FontAwesomeIcon icon={faCoins} />  \n                    {' '} Calcular\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row>    \n          <Row>            \n              <Col md={12}>\n                <Card>            \n                  <CardBody>\n                    <h6>Compra total : {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(indicadorTotal)}</h6>\n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"20%\">Fecha</th>                  \n                            <th width=\"20%\">Cuota</th>                  \n                            <th width=\"30%\">Monto</th>\n                            <th width=\"30%\">Estado</th>\n                        </tr>\n                    </thead>\n                    {plan && (\n                        <tbody>\n                            {plan.map((item, index) => (\n                                <tr key={index}>                                                                       \n                                  <td>\n                                    <Input type=\"date\" name=\"fechaPago\" id=\"fechaPago\" \n                                      value={item.fechaPago || ''}       \n                                      onChange={ (e) => onChange(e,index)}                     \n                                    />   \n                                  </td>                                                 \n                                  <td>{item.cuota}</td> \n                                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>\n                                  <td>{item.estado ? \"pagado\":\"pendiente\" }</td>                                                                    \n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                  </Table>\n                </CardBody>  \n              </Card>\n              </Col>\n            </Row>\n            <Row>                                      \n                  <Col md={3}>\n                    <FormGroup>\n                      <Button                        \n                        className={plan ? \"btn btn-md btn-success\" : \"btn btn-md btn-success disabled\" }\n                        onClick={() => aprobarCompra()}>\n                        <FontAwesomeIcon icon={faCoins} />  \n                        {' '} Aprobar\n                      </Button>                  \n                    </FormGroup>               \n                  </Col>           \n            </Row>    \n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <CompraResumen/>\n          </ModalBody>\n      </Modal>\n      <Modal isOpen={viewy} toggle={toggleModalViewy}>  \n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewy()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Card>\n            <h6>Enviar cotización</h6>\n          <Form onSubmit={ enviar}>   \n          <Row>                       \n              <Col md={6}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nombre :</Label>\n                    <Input type=\"text\" name=\"nombres\" id=\"nombres\" \n                    value={nombres || ''}                \n                    onChange={ (e) => setnombres(e.target.value)} \n                    onInvalid={(e) => e.target.setCustomValidity('El campo nombres es obligatorio !')}\n                    onInput={(e) => e.target.setCustomValidity('')}\n                    required \n                    />    \n                  </FormGroup> \n              </Col>\n              <Col md={6}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Email :</Label>\n                      <Input type=\"text\" name=\"email\" id=\"email\" \n                        value={email || ''}                \n                        onChange={ (e) => setemail(e.target.value)} \n                        onInvalid={(e) => e.target.setCustomValidity('El campo email es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required \n                        />       \n                                           \n                    </FormGroup> \n              </Col>                                                \n          </Row> \n          <Row>                       \n              <Col md={12}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Observaciones</Label>\n                    <Input type=\"text\" name=\"observaciones\" id=\"observaciones\" \n                    value={observaciones || ''}                \n                    onChange={ (e) => setobservaciones(e.target.value)} />    \n                  </FormGroup> \n              </Col>             \n          </Row> \n          <Row>                                               \n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn-md btn-info mt-4\">\n                    <FontAwesomeIcon icon={faEnvelope} />  \n                    {' '} Enviar\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          </Form> \n          </Card>  \n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchCompras;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col,Card, CardBody, Button, Input, Label, Modal, ModalBody, Table, Form, FormGroup  } from \"reactstrap\"\n  import { crudActions } from '../../../../actions'  \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst SingleProveedor = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.proveedores) \n    const itt  = useSelector(state => state.compras.item) \n    const [prop, setProp] = useState('razonSocial');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };\n\n    const asignar = (item) => {    \n        let est = modalView === true ? false : true;                     \n        dispatch({type: 'COMPRAS_CHANGE', props: 'proveedorId', value: item.id})\n        dispatch({type: 'COMPRAS_CHANGE', props: 'proveedors', value: item.razonSocial})\n        setmodalView(est)  \n        dispatch({type:'PROVEEDORES_RESET_DATA'})             \n    };\n\n\n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('PROVEEDORES_DATA','proveedores',iok))              \n   } \n\n    return (  \n      <>      \n        <Col md={10}>\n              <FormGroup>\n              <Label for=\"proveedors\">Proveedor</Label>\n              <Input type=\"text\" name=\"proveedors\" id=\"proveedors\" \n                 value={itt.proveedors}\n                readOnly={true}/>     \n              </FormGroup>    \n        </Col> \n        <Col md={1}>\n              <FormGroup>\n              <Button className=\"btn-rd btn-info mt-3\" onClick={() => toggleModalView()}>\n            <FontAwesomeIcon icon={faSearch} />                          \n        </Button>    \n              </FormGroup>    \n        </Col>\n      \n\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>          \n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        } \n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n                    <thead>\n                        <tr>                              \n                            <th width=\"50%\">Razon Social</th>\n                            <th width=\"20%\">Tipo Fiscal</th>\n                            <th width=\"20%\">Nit</th>            \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                                                    \n                                    <td>{item.razonSocial}</td>\n                                    <td>{item.tipoFiscal}</td>\n                                    <td>{item.nit}</td>                                                       \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}                           >\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>            \n            </CardBody>\n          </Card>  \n        </Col>\n      </Row>  \n\n\n\n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default SingleProveedor;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { impuestos } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport Select from 'react-select'    \nimport { custom } from '../../../../helpers/customStyles'\nimport SingleProveedor from '../../Proveedores/components/SingleProveedor'\nconst FormCompra = () => {\n    const dispatch = useDispatch()  \n    const { item, items } = useSelector(state => state.compras)   \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE',name,value))  \n    }\n    const changesHandler = (event,name) => {                       \n      const { value } = event ? event : ''              \n      dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE',name,value))     \n      console.log(value)    \n      if(name === 'iva')\n      {\n        let iok = (value === 0 || value === '0') ? 0: (parseFloat(item.totalGeneral) * (parseFloat(value) / 100))\n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE','impuesto',iok)) \n        let sTotal = (value === 0 || value === '0') ? item.totalGeneral: parseFloat(item.totalGeneral)- parseFloat(iok)\n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE','subTotal',sTotal)) \n              \n      }       \n    }\n      \n\n\n    const submitHandle = () => { \n        let eItem = item                     \n        eItem.usuarioId = usuario.id                \n        eItem.detalle   = item.observaciones +', '+item.proveedors\n        let xcode ={\n          item : eItem,\n          items: items\n        }\n\n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATES('COMPRAS_ADD','compras',xcode,'unit'))\n        }else{\n          dispatch(crudActions.SET_ADD('COMPRAS_ADD','compras',xcode,'lista'))\n        }\n     }\n\n\n    useEffect(() => {      \n      return () => {\n        dispatch({type:'COMPRAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n        <>                                  \n          <Row form>            \n            <SingleProveedor/>            \n          </Row>\n          <Row form>\n            <Col md={12}>\n            <FormGroup>\n                <Label for=\"fiva\"> Impuesto </Label>\n                  <Select                                                               \n                    defaultValue={impuestos[0]}\n                    styles={custom} \n                    name=\"iva\"    \n                    id=\"iva\"                    \n                    options={impuestos}      \n                    isClearable={false}                          \n                    value={defaultVal(impuestos,item.iva)}\n                    onChange={ (e) => changesHandler(e,'iva')}/>\n              </FormGroup>   \n            </Col>\n          </Row>                  \n          \n          <Row form>                                    \n            <Col md={12}>\n                <FormGroup>\n                  <Label for=\"observaciones\">Glosa</Label>\n                  <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                          value={item.observaciones || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                </FormGroup>   \n            </Col>\n          </Row>  \n          \n          <Row form>\n            <Col md={4}>\n              <Button\n                className={ (item.proveedorId && item.observaciones) ? (item.id ? \"btn-md btn-warning mt-4\" : \"btn-md btn-info mt-4\") : \"btn-md disabled btn-info mt-4\"}\n                onClick={() => submitHandle()}>\n                <FontAwesomeIcon icon={faSave} />  \n                  {' '} {item.id ? \" Actualizar\" : \" Guardar\"}                        \n              </Button>    \n            </Col>                  \n          </Row>\n    </>\n                                      \n    );\n};\nexport default FormCompra;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row,Col, Button, FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchsArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)  \n    const { items, item  } = useSelector(state => state.compras)  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');\n    const [cantidad, setCantidad] = useState(0);\n    const [valor, setValor] = useState(0);\n    const [articulo, setArticulo] = useState({});\n  \n    \n    const changeHandler = event => {    \n      const { value } = event.target                        \n      setName(value)\n    } \n    \n    const search = () =>{ \n      if (!name) {      \n        clearInput();\n        return;\n      } \n      else{\n        setOpen(true)\n        dispatch(crudActions.GET_SEARCH_ITEMS('ARTICULOS_DATA_ITEMS','tpv',name))   \n      }\n      \n  \n      /*if (name) {\n        dispatch(crudActions.GET_SEARCH_ITEMS('ARTICULOS_DATA_ITEMS','tpv',searchTerm))   \n      } \n      */\n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)\n      setCantidad(0)\n      setValor(0)\n    } \n    \n    const upCantidad = (e) => {\n      const { value } = e.target \n      setCantidad(value)      \n    }\n    const upValor = (e) => {\n      const { value } = e.target \n      setValor(value)      \n    } \n\n    const add = () =>{     \n      let ites = [...items]\n      let cTotal = item.nroItems   \n      let gTotal = item.totalGeneral      \n      let sTotal = item.subTotal\n      let gImp   = item.impuesto  \n            \n      let repeat = false      \n      ites.map((item, index) =>{                        \n        if(item.articuloId === articulo.id)\n        { \n          repeat = true;\n        }\n        return null\n      }) \n     \n      if(!repeat)\n      {\n      let itemCompra = {\n        cantidad     : cantidad,          \n        articuloId   : articulo.id,\n        codigo       : articulo.codigo,          \n        nombre       : articulo.nombre,\n        unidad       : articulo.unidad, \n        compraId     : item.id,\n        valor        : valor,\n        subTotal     : parseFloat(cantidad) * parseFloat(valor)       \n      }  \n      ites.push(itemCompra);   \n        cTotal = parseFloat(cTotal) +parseFloat(cantidad);      \n        gTotal = parseFloat(gTotal) +parseFloat(itemCompra.subTotal)                  \n        gImp   = gTotal * parseFloat(item.iva / 100)\n        sTotal = gTotal - parseFloat(gImp)                        \n        dispatch({type:'COMPRAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp })\n      }\n      clearInput()\n\n    }\n\n    const handleAsignar = (articulo) =>{     \n      console.log(articulo)   \n      setArticulo(articulo)  \n      setName(articulo.nombre)    \n      setOpen(false)\n    }\n\n  \n    \n    return (       \n      <>             \n                         \n            <Row form>                      \n                      <Col md={6}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Nombres</Label>                 \n                          <Input \n                            type=\"text\" \n                            name=\"name\"                             \n                            id=\"name\"  \n                            value={name || ''}  \n                            onChange={changeHandler} />   \n                             {\n                              name ? \n                              <Button className=\"volatil\" onClick={(e) => {clearInput()}}>\n                                <FontAwesomeIcon icon={faTimes}   />\n                              </Button>\n                              : null\n                            }                         \n                        </FormGroup>\n                      </Col>\n                      <Col md={1}>\n                        <FormGroup>   \n                          <Button className=\"btn-primary btn-search mt-3\"\n                          onClick={search}>\n                            <FontAwesomeIcon icon={faSearch} />\n                          </Button>  \n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Cantidad</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"cantidad\"                             \n                            id=\"cantidad\"    \n                            value={cantidad}                          \n                            onChange={(e) => upCantidad(e)} />\n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eValor\">Valor</Label>                 \n                        <Input \n                            type=\"number\" \n                            name=\"valor\"                             \n                            id=\"valor\"    \n                            value={valor}                          \n                            onChange={(e) => upValor(e)} />\n                        </FormGroup>\n                      </Col>\n                                      \n                      <Col md={1}>\n                        <Button className={cantidad === 0 ? \"btn-rdd btn-disabled mt-3\":\"btn-rdd btn-danger mt-3\"}\n                          onClick={() => add() }>\n                         <FontAwesomeIcon icon={faArrowDown} />                          \n                        </Button>\n                      </Col>\n                    </Row>                  \n                  \n             \n          \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.nombre}  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n          </>                                     \n    );\n};\nexport default SearchsArticulos;\n","import React,{useEffect} from \"react\";\nimport { Table, Row, Col, Button  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ListaCompras = () => {\n   const dispatch = useDispatch() \n   const { item, items }= useSelector(state => state.compras)\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n   const removeItem = (index) => {     \n    var array = [...items];    \n    let cTotal = item.nroItems    \n    let gTotal = item.totalGeneral  \n    let sTotal = item.subTotal\n    let gImp    = item.impuesto  \n\n    if(array.length < 0){\n      cTotal = 0\n      gTotal = 0\n      sTotal = 0\n      gImp   = 0\n    }else{    \n        cTotal = cTotal - parseFloat(array[index].cantidad);    \n        gTotal = gTotal - parseFloat((array[index].cantidad * array[index].valor));        \n        gImp   = gTotal * parseFloat(item.iva / 100)\n        sTotal = gTotal - parseFloat(gImp)\n    }\n    array.splice(index,1);        \n    dispatch({type:'COMPRAS_SET_ITEMS',values:array, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp })      \n    } \n   \n   useEffect(() => {    \n    return () => {\n      dispatch({type:'COMPRAS_RESET_ITEMS'})   \n    };\n}, []);\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                <th width=\"20%\" >Código</th>\n                <th width=\"40%\">Nombre</th>                                \n                <th width=\"10%\">Precio</th>  \n                <th width=\"10%\">Cantidad</th>                                              \n                <th width=\"15%\">Total</th>            \n                <th width=\"5%\"></th>                   \n              </tr>\n          </thead>\n          {items && (\n              <tbody>\n                  {items.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo || ''}</td>\n                        <td>{item.nombre || ''}</td>                          \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>\n                        <td>{item.cantidad} ({item.unidad}) </td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                        \n                        <td>\n                          <Button className=\"btn btn-danger\" \n                            onClick={() => { removeItem(index)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>                                           \n                        </td>\n                      </tr>  \n                      ))}\n                      <tr>\n                        <td colSpan=\"4\">SubTotal:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                        \n                      </tr>\n                      <tr>\n                        <td colSpan=\"4\">Impuesto:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.impuesto)}</td>\n                      </tr>                      \n                      <tr>\n                        <td colSpan=\"4\"><b>TOTAL</b></td>\n                        <td><b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</b></td>                        \n                      </tr> \n              </tbody>\n          )}\n        </Table>\n    \n      </Col>         \n    </Row>       \n</>      \n  )\n\n};\nexport default ListaCompras;\n","import React  from \"react\";\nimport { useSelector} from 'react-redux'\nimport { Row, Col, Card, CardBody, Button } from \"reactstrap\"\nimport FormCompra from './FormCompra'\nimport SearchsArticulos from '../../../INVENTARIOS/Articulos/components/SearchsArticulo'\nimport ListaCompras from \"./ListaCompras\";\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst EditCompra = ({getComponent}) => {\n  const { item } = useSelector(state => state.compras)  \n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n  var d = new Date();\n    return (      \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA COMPRAS\n          </Button>              \n        </Col>  \n      </Row> \n      <Row>\n      <Col md=\"12\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"2\" className=\"barraz\">\n               <h5><b>COMPRA Nº : </b> {item.id} </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Estado : </b> {item.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {item.nroItems}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Valor Total : </b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</h5>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n\n      <Row>\n        <Col md=\"4\" className=\"cardCo\">\n            <Card>        \n              <CardBody>\n               <h6>Datos Compra</h6> \n              <FormCompra/> \n              </CardBody>   \n            </Card>\n        </Col>          \n        <Col md=\"8\" className=\"cardCo\">\n          <Card>\n            <CardBody>\n              <h6>Productos</h6> \n              <SearchsArticulos/>\n              <ListaCompras/>\n            </CardBody>\n          </Card>           \n        </Col>       \n      </Row>\n\n      </>\n    );\n};\nexport default EditCompra;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableCompras from \"./components/TableCompras\";\nimport SearchCompra from \"./components/SearchCompra\";\nimport EditCompra from \"./components/EditCompra\";\n\n\nconst Compras = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n \n\n\n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':       \n          setComponent(<><SearchCompra getComponent={getComponent}/><TableCompras getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'COMPRAS_RESET_RESUMEN'})          \n          setComponent(<EditCompra getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('COMPRAS_ITEM','compras',key)) \n          setComponent(<EditCompra getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n     /* console.log('descarga compras')*/\n    };\n  }, []); \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                   \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Compras;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableProveedores = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas,indicador}= useSelector(state => state.proveedores)\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('PROVEEDORES_DATA','proveedores',page, num,'razonSocial','asc'))      \n  }\n\n\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'PROVEEDORES_INDICADOR',value:iok}) \n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {      \n      dispatch({type:'PROVEEDORES_RESET_DATA'})\n      };\n  }, []);\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"5%\"></th>\n                  <th width=\"15%\">Codigo</th>\n                  <th width=\"50%\">Razon Social</th>\n                  <th width=\"15%\">Tipo Fiscal</th>\n                  <th width=\"15%\">Nit</th>                                       \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}> \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          />                       \n                        </td>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.razonSocial}</td>\n                        <td>{item.tipoFiscal}</td>\n                        <td>{item.nit}</td>   \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n    <CardFooter>\n    <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n    \n</>      \n  )\n\n};\nexport default TableProveedores;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ButtonGroup, Row,Col,Button, Form, FormGroup, Input, Modal, ModalBody, Card } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPeopleCarry, faFileExport, faCheck, faSearch, faPlus, faCopy, faTrash, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\n\nconst page =[{\"value\":'razonSocial',\"label\":'nombre'},\n             {\"value\":'nit',\"label\":'nit'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchProveedores = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView }= useSelector(state => state.proveedores )\n    const [prop, setProp] = useState('razonSocial');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('PROVEEDORES_DATA','proveedores',iok))              \n   } \n\n   const toggleModalView = () => {        \n    setview(!view)                  \n  };\n\n  const viewArticulo = () => {        \n    let est = modalView === true ? false : true;             \n    dispatch({type:'PROVEEDORES_VIEW',view:est}) \n    dispatch(crudActions.GET_ITEM('PROVEEDORES_ITEM','proveedores',indicador))\n  };  \n\n  const onCopiar = () => {                  \n    dispatch(crudActions.SET_COPIAR('PROVEEDORES_DATA','proveedores',indicador)) \n    dispatch({type:'PROVEEDORES_INDICADOR',value:0})\n  };\n\n  const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('PROVEEDORES_DATA','proveedores',indicador,'lista'))      \n    dispatch({type:'PROVEEDORES_INDICADOR',value:0})\n    setview(false)\n\n  };\n    return (              \n      <>             \n      <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faPeopleCarry} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n            <FontAwesomeIcon icon={faFileExport} /></Button>\n          <Button className={indicador === 0 ? \"bts bg-default disabled text-white\": \"bts bg-default text-white\"} onClick={()=> onCopiar()}>\n            <FontAwesomeIcon icon={faCopy} /> </Button>\n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n            <FontAwesomeIcon icon={faTrash} /> </Button>                                \n          <Button className={indicador === 0 ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> viewArticulo()}>\n            <FontAwesomeIcon icon={faFilePdf} /> </Button>               \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } PROVEEDORES</p>          \n        </Col>\n      </Row> \n      </Card>   \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>                   \n                         \n    );\n};\nexport default SearchProveedores;\n","import React,{useState, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ProveedorImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.proveedores) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"proveedor\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n    useEffect(() => {      \n      return () => {\n        dispatch({type:'PROVEEDORES_RESET_ITEM'})        \n      };\n    }, []); \n\nreturn(\n  <>  \n\n      <div className=\"sub-form\">  \n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img\n          alt=\"nit\"\n          className=\"img-perfil\"\n          src={api + \"/static/images/proveedores/md/\" + item.filename}\n        />}\n        </Col>\n      </Row>\n      { item.id ?\n        <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n     </Row>\n      : null\n      }\n        \n     </div>   \n    </>  \n    )\n}     \n  \nexport default ProveedorImagen;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport Select from 'react-select'  \nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport ProveedorImagen from './ProveedorImagen'\nimport { tiposPersona, tiposProveedor } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { locations, ciudades } from \"../../../../helpers/locations\";\nimport { custom } from '../../../../helpers/customStyles'\n\nconst EditProveedores = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.proveedores.item)   \n    const [citys, setcitys] = useState([]);\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('PROVEEDORES_CHANGE',name,value))  \n    }\n\n    const changesPaises = event => {                  \n      const {value, indice} = event ? event : ''         \n      dispatch(crudActions.SET_CHANGE('PROVEEDORES_CHANGE','pais',value))   \n      let datc = ciudades.filter(d => (d.indice === indice) )  \n      setcitys(datc)\n  }\n    const changesCiudades = event => {                  \n      const {value} = event ? event : ''               \n      dispatch(crudActions.SET_CHANGE('PROVEEDORES_CHANGE','ciudad',value))   \n      \n    }\n      \n   \n    const changesHandler = (event,name) => {                     \n        const {value} = event ? event : ''        \n        dispatch(crudActions.SET_CHANGE('PROVEEDORES_CHANGE',name,value))          \n    }\n  \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('PROVEEDORES_ADD','proveedores',item,'unit'))            \n        }else{\n          dispatch(crudActions.SET_ADD('PROVEEDORES_ADD','proveedores',item,'unit'))           \n        }            \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'PROVEEDORES_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (             \n    <> \n    <Row>\n      <Col>\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"7\">\n               <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n                 <FontAwesomeIcon icon={faArrowLeft} /> LISTA PROVEEDORES\n               </Button>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      <Row>\n        <Col>\n            <Card>        \n              <CardBody>\n               <Row>\n                <Col md=\"8\" className=\"cardCo\">\n                  <Form onSubmit={ submitHandle}>   \n                  <Row form>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"codigo\">Código</Label>\n                        <Input type=\"text\" name=\"codigo\" id=\"codigo\" \n                          value={item.codigo || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo código es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required \n                          />    \n                    </FormGroup>    \n                  </Col>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"tipoFiscal\">Tipo Persona</Label>\n                      <Select                                                               \n                          defaultValue={tiposPersona[0]}\n                          styles={custom}\n                          name=\"tipoFiscal\"    \n                          id=\"tipoFiscal\"                    \n                          options={tiposPersona}      \n                          isClearable={false}                          \n                          value={defaultVal(tiposPersona,item.tipoFiscal)}\n                          onChange={ (e) => changesHandler(e,'tipoFiscal')}                                                 \n                        />   \n                    </FormGroup>    \n                  </Col>  \n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"tipoProveedor\">Tipo Proveedor</Label>\n                      <Select                                                               \n                          defaultValue={tiposProveedor[0]}\n                          styles={custom}\n                          name=\"tipoProveedor\"    \n                          id=\"tipoProveedor\"                    \n                          options={tiposProveedor}      \n                          isClearable={false}                          \n                          value={defaultVal(tiposProveedor,item.tipoProveedor)}\n                          onChange={ (e) => changesHandler(e,'tipoProveedor')}                                                 \n                        />   \n                    </FormGroup>    \n                  </Col>                                             \n                </Row>\n                <Row form>\n                  <Col md={9}>\n                    <FormGroup>\n                      <Label for=\"razonSocial\">Razón Social</Label>\n                        <Input type=\"text\" name=\"razonSocial\" id=\"razonSocial\" \n                          value={item.razonSocial || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo razón social es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required \n                          />    \n                    </FormGroup>    \n                  </Col> \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"nit\">Nit</Label>\n                        <Input type=\"text\" name=\"nit\" id=\"nit\" \n                          value={item.nit || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nit es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required \n                         />    \n                    </FormGroup>    \n                  </Col>                                          \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"direccion\">Dirección</Label>\n                        <Input type=\"text\" name=\"direccion\" id=\"direccion\" \n                          value={item.direccion || ''}\n                          onChange={ (e) => changeHandler(e)} />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"contacto\">Contato</Label>\n                      <Input type=\"text\" name=\"contacto\" id=\"contacto\" \n                          value={item.contacto || ''}\n                          onChange={ (e) => changeHandler(e)} />   \n                    </FormGroup>    \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"pais\">País</Label>\n                      <Select                                                               \n                      defaultValue={locations[0]}\n                      styles={custom}\n                      name=\"pais\"    \n                      id=\"pais\"                    \n                      options={locations}      \n                      isClearable={false}                          \n                      value={defaultVal(locations,item.pais)}   \n                      onChange={ (e) => changesPaises(e)}                                               \n                    />  \n                    </FormGroup>    \n                  </Col>                                    \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"ciudad\">Ciudad</Label>\n                      <Select                                                               \n                    defaultValue={citys[0]}\n                    name=\"ciudad\"    \n                    id=\"ciudad\"                    \n                    options={citys}      \n                    isClearable={false}   \n                    styles={custom}                       \n                    value={defaultVal(ciudades,item.ciudad)}     \n                    onChange={ (e) => changesHandler(e,'ciudad')}                                           \n                  />\n                        \n                    </FormGroup>    \n                  </Col>                                                                                          \n                </Row>\n\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"email\">Email</Label>\n                      <Input type=\"email\" name=\"email\" id=\"email\" \n                          value={item.email || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo mail valido es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required                           \n                          />   \n                    </FormGroup>    \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"web\">Web</Label>\n                      <Input type=\"text\" name=\"web\" id=\"web\" \n                          value={item.web || ''}\n                          onChange={ (e) => changeHandler(e)} />   \n                        \n                    </FormGroup>    \n                  </Col>                                    \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"telefono\">Teléfono</Label>\n                      <Input type=\"text\" name=\"telefono\" id=\"telefono\" \n                          value={item.telefono || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo teléfono es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required \n                          />   \n                        \n                    </FormGroup>    \n                  </Col>                                                                                          \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"observacione\">Observaciones</Label>\n                        <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                          value={item.observaciones || ''}\n                          onChange={ (e) => changeHandler(e)} />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={5}>\n                <Button \n                  type=\"submit\"\n                  className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                      {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                </Button>\n                </Col>\n                </Row>               \n                  </Form>\n                </Col>\n            <Col md=\"4\" className=\"cardCo\">\n              <h6 className=\"text-center\">Imagen NIT</h6>\n              <ProveedorImagen/>\n            </Col>\n          </Row>\n        </CardBody>   \n      </Card>\n        </Col>          \n      </Row>\n    </>                                            \n    );\n};\nexport default EditProveedores;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport {     \n  Table,\n  Col,\n  Row,    \n  Button } from \"reactstrap\";\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    return (\n      <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Kardex Proveedor # <b>{this.props.data.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.data.razonSocial}</h5>\n             <h5 className=\"text-center pio\"> <b>CODIGO</b> : {this.props.data.codigo}</h5> \n             <h5 className=\"text-center pio\"> <b>NIT</b> : {this.props.data.nit}</h5>             \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={7} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                  <tr><td width=\"25%\"><b>Tipo Fiscal :</b></td>\n                      <td >{this.props.data.tipoFiscal}</td></tr>\n                  <tr><td width=\"25%\"><b>Tipo Proveedor :</b></td>\n                      <td >{this.props.data.tipoProveedor}</td></tr>              \n                  <tr><td><b>Dirección :</b></td>\n                      <td>{this.props.data.direccion}</td></tr>    \n                  <tr><td><b>Pais :</b></td>\n                      <td >{this.props.data.pais}</td>\n                  </tr>          \n\n                  <tr><td><b>Ciudad :</b></td>\n                      <td >{this.props.data.ciudad}</td>\n                  </tr>          \n\n                  <tr><td><b>Contacto :</b></td>\n                      <td >{this.props.data.contacto}</td>\n                  </tr>\n\n                  <tr><td><b>Email :</b></td>\n                      <td >{this.props.data.email}</td>\n                  </tr>\n\n                  <tr><td><b>Web :</b></td>\n                      <td >{this.props.data.web}</td>\n                  </tr>\n\n                  <tr><td><b>Teléfono :</b></td>\n                      <td >{this.props.data.telefono}</td>\n                  </tr>          \n                  <tr><td colSpan=\"2\"><b>Observaciones :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.data.observaciones }</td></tr>                    \n        </tbody>\n        </Table>\n          </Col>\n          <Col md={5} className=\"report-card\">\n            <Row>\n              <Col>\n              <img alt=\"articulo\"\n            className=\"text-center imglg\" \n            src={api + '/static/images/proveedores/lg/'+this.props.data.filename }/> \n              </Col>\n            </Row>                    \n          </Col>\n        </Row>\n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n      </div>\n    </div> \n    );\n  }\n}\n\n\nfunction ProveedorResumen () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.proveedores)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'PROVEEDORES_RESET_ITEM'}) \n    };\n  }, [dispatch]);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            data={item}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default ProveedorResumen","import React,{useState, useCallback, useEffect} from \"react\";\nimport TableProveedores from \"./components/TableProveedores\";\nimport SearchProveedores from \"./components/SearchProveedor\";\nimport EditProveedores from \"./components/EditProveedor\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ProveedorResumen from \"./components/ProveedorResumen\";\n\nconst ProveedoresView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView } = useSelector(state => state.proveedores)  \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'PROVEEDORES_VIEW',view:est})   \n    dispatch({type:'PROVEEDORES_INDICADOR',value:0})             \n  };\n\n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchProveedores getComponent={getComponent}/><TableProveedores getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'PROVEEDORES_RESET_ITEM'}) \n          setComponent(<EditProveedores getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM('PROVEEDORES_ITEM','proveedores',key)) \n          setComponent(<EditProveedores getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga proveedores')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">           \n        {component}  \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ProveedorResumen/>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default ProveedoresView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\nconst TablePagos = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15);\n  const {data,pagina,paginas,indicador }= useSelector(state => state.pagos)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  \n\n  const makeHttpRequestWithPage = (page, num) =>{\n   dispatch(crudActions.GET_DATA('PAGOS_DATA','notas/pagos',page, num,'fechaPago','desc'))       \n  }\n\n const changeSelect = (pky) => {        \n   const {value} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {\n    makeHttpRequestWithPage(1,pag)\n    return () => {    \n      dispatch({type:'PAGOS_RESET_DATA'})\n    };\n }, []);\n\n const setIndicador = (pky,est,compra) => {            \n   let iok = pky === indicador  ? 0 : pky\n   dispatch({type:'PAGOS_INDICADOR',value:iok,estado:est,compra:compra}) \n };\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>  \n\n                <th width=\"5%\"></th>\n                <th width=\"10%\">Id</th>                                \n                <th width=\"35%\">Glosa</th>\n                <th width=\"10%\">Fecha Pago</th>\n                <th width=\"10%\">Cuota</th>                  \n                <th width=\"10%\">Monto</th>\n                <th width=\"10%\">Estado</th>                \n                <th width=\"10%\">Nº Compra</th>                \n                <th width=\"10%\">Finan</th>                \n                \n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index} >                                                                  \n                      <td >                       \n                      <Input type=\"checkbox\" \n                      onChange={() => { setIndicador(item.id, item.estado, item.compraId) }} \n                      checked={ item.id === indicador ? true : false}\n                      /></td>                      \n                      <td>{item.id}</td>                      \n                      <td>{item.glosa}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fechaPago}</Moment></td>                                 \n                      <td>{item.cuota }</td>             \n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                      \n                      <td>{item.estado}</td>              \n                      <td>{item.compraId}</td>                                                                                   \n                      <td>{item.est ? \"pagado\":\"pendiente\"}</td>\n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TablePagos;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, ButtonGroup, Form, FormGroup, Input, Card  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoneyBill, faSearch, faCoins, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport { registerLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'}];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchPago = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, compraId}= useSelector(state => state.pagos)\n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");    \n   \n    \n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n      setValue('')\n    };\n\n       \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = true      \n      dispatch(crudActions.GET_SEARCH('PAGOS_DATA','notas/compra',iok))     \n    }\n\n\n    return (                                      \n      <>             \n       <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faMoneyBill} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador === 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('edit',compraId)}>\n            <FontAwesomeIcon icon={faCoins}/> \n          </Button>                                         \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } PAGOS</p>          \n        </Col>\n      </Row>  \n      \n    </Card>              \n\n     \n\n    </>                    \n    );\n};\nexport default SearchPago;\n","import React,{useState,useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormGroup,  Form, Label, Input, Button, Row, Col, Card, CardBody, Table } from \"reactstrap\"\n\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faSave, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport Switch from 'react-switch'\nconst EditPago = ({getComponent}) => {  \n    const dispatch = useDispatch()  \n    const { compra, compraItems, cantidadTotal, sumaTotal, plan, nota, compraId  } = useSelector(state => state.pagos)   \n    const d = new Date()   \n    const [ efectivo, setEfectivo] = useState(true)    \n    const [ cheque, setCheque] = useState('')    \n    const [ nbanco, setNBanco] = useState('')    \n    const [ pago, setpago] = useState({\n      cuota:0,\n      compraId:0,\n      planId:0,\n      monto:0\n    })    \n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n  const asignar = (xitem) =>{\n    let xpago = {\n      cuota: xitem.cuota,\n      compraId:compraId,\n      planId: xitem.id,\n      monto: xitem.monto\n    }\n    setpago(xpago)\n  } \n  \n  const pagar = event => { \n    event.preventDefault()             \n    let iok = pago\n    iok.usuarioId =usuario.id\n    iok.proveedor = compra.proveedor.razonSocial\n    iok.observaciones = compra.observaciones         \n    iok.efectivo = efectivo \n    iok.banco   = nbanco\n    iok.cheque   = cheque\n\n    console.log(iok)\n\n    dispatch(crudActions.SET_ADD('PAGOS_ADD','notas/compra',iok,'unit'))\n    setpago({\n      cuota:0,\n      ventaId:0,\n      planId:0,\n      monto:0\n    })\n    setNBanco('')\n    setCheque('')\n    setEfectivo(true)\n} \n\nuseEffect(() => {      \n  return () => {\n    dispatch({type:'PAGOS_RESET_ITEM'})        \n  };\n}, []); \n\n    return (              \n      <>\n       <Row>\n      <Col md=\"3\">\n        <Card>\n            <CardBody>             \n               <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n                 <FontAwesomeIcon icon={faArrowLeft} /> LISTA PAGOS\n               </Button>               \n            </CardBody>   \n        </Card>       \n      </Col>  \n      <Col md=\"9\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"2\" className=\"barraz\">\n               <h5><b>COMPRA Nº : </b> {compra.id} </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Estado : </b> {compra.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {compra.nroItems}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Valor Total : </b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(compra.totalGeneral)}</h5>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      <Row>                  \n        <Col md=\"6\" className=\"cardCo\">\n          <Row>\n            <Col>\n            <Card>        \n            <CardBody>\n            <h4>Nota de compra</h4> \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Fecha compra : </b></td>\n                  <td><Moment format=\"DD-MM-YYYY\">{compra.fechaVenta}</Moment></td>                                                                                  \n                  <td><b>Hora compra : </b></td>\n                  <td><Moment format=\"HH:mm:ss\">{compra.createdAt}</Moment></td>                                       \n                </tr>\n                <tr>                      \n                  <td><b>Cod. Proveedor : </b></td>\n                  <td>{compra.proveedor.codigo || ''}</td>                                                                                  \n                  <td><b>Proveedor : </b></td>\n                  <td>{compra.proveedor.razonSocial || ''}</td>                                       \n                </tr>\n                <tr>                      \n                  <td><b>Tipo </b></td>\n                  <td>{compra.tipo}</td>                                                                                  \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{nota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Pago Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.pagoTotal)}</td>                                                            \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.saldoTotal)}</td>                                       \n                </tr>                \n              </tbody>             \n            </Table> \n            </CardBody>   \n          </Card>\n            </Col>          \n          </Row>\n\n          <Row>\n            <Col md={7}>\n            <Card>        \n            <CardBody>\n            <h4>Pagos</h4> \n            <Table className=\"table-reportesh\">\n              <thead>\n                <tr>                  \n                  <th width=\"10%\">#</th>\n                  <th width=\"10%\">Cuota</th>\n                  <th width=\"20%\">Fecha Pago</th>\n                  <th width=\"10%\">Estado</th>\n                  <th width=\"30%\">Monto</th>\n                  <th width=\"10%\"></th>                \n                </tr>\n              </thead>\n              {plan && (\n                  <tbody>\n                      {plan.map((item, index) => (\n                          <tr key={item.id}>                      \n                            <td>{item.id}</td>\n                            <td>{item.cuota}</td>\n                            <td>{item.fechaPago}</td>                                                                 \n                            <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                \n                            <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                                             \n                            <td>\n                              {item.estado ?\n                                <Button className=\"btn btn-warning\" >                                \n                                <FontAwesomeIcon icon={ faCoins } />\n                                </Button>\n                              :\n                              <Button className=\"btn btn-danger\" \n                              onClick={() => { asignar(item)}}>\n                              <FontAwesomeIcon icon={ faArrowRight } />\n                              </Button>\n                              }                            \n                            </td>\n                          </tr>  \n                          ))}\n                  </tbody>\n              )}     \n            </Table> \n            </CardBody>   \n          </Card>\n          </Col>  \n          <Col md={5}>\n            <Card>        \n            <CardBody>\n                <Form onSubmit={ pagar}>     \n                    <Row form>\n                      <Col md={9}>\n                        <FormGroup>   \n                        <Label for=\"total\">Total</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"monto\"                             \n                            id=\"monto\"  \n                            value={pago.monto}                              \n                            readOnly={true}/>\n                        </FormGroup>\n                      </Col>\n                      <Col md={3}>\n                        <FormGroup>   \n                        <Label for=\"estado\">Efectivo</Label>\n                        <Switch                         \n                          className=\"mt-1\"                         \n                          onChange={ (e) =>{setEfectivo(e)}}  \n                          checked={efectivo} />                           \n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    { efectivo === false ?\n                      <>\n                       <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"recibido\">Nº Cheque</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"cheque\"                             \n                            id=\"cheque\"  \n                            value={cheque || ''}  \n                            onChange={(e)=>{setCheque(e.target.value)}} \n                            />\n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"cambio\">Banco</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"nbanco\"                             \n                            id=\"nbanco\"  \n                            value={ nbanco || ''}  \n                            onChange={(e)=>{setNBanco(e.target.value)}}                             \n                            />\n                        </FormGroup>\n                      </Col>\n                    </Row> \n                      </>\n                    :\n                    null\n                    }\n                    \n                    <Row>\n                      <Col md={12}>\n                        <Button className={(pago.monto > 0 && pago.compraId > 0) ? \"btn-md btn-info mt-3\": \"btn-md disabled mt-3\"}>\n                         <FontAwesomeIcon icon={faSave} />                          \n                        </Button>\n                      </Col>\n                    </Row>\n                </Form>   \n            </CardBody>\n            </Card>  \n          </Col>           \n          </Row>          \n        </Col>  \n        <Col md=\"6\" className=\"cardCo\">\n          <Card>        \n            <CardBody>\n            <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Compra # {compra.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha : {compra.fechaCompra}</h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>    \n            <Table className=\"table-reporteh mt-2\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{compra.nroItems}</td>                                                            \n                  <td><b>Usuario : </b></td>\n                  <td>{compra.usuario.nombres || ''} </td>\n                </tr>                \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(compra.totalGeneral)}</td>                     \n                  <td><b>Proveedor : </b></td>\n                  <td>{compra.proveedor.razonSocial || ''} </td>\n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"3\">{ compra.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"20%\" >Código</th>\n                <th width=\"50%\">Nombre</th>                                \n                <th width=\"10%\">Costo</th>\n                <th width=\"10%\">Cantidad</th>                \n                <th width=\"10%\">Total</th>                                             \n              </tr>\n          </thead>\n          {compraItems && (\n              <tbody>\n                  {compraItems.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                                                                                                                                      \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>                     \n                        <td>{item.cantidad}</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor * item.cantidad)}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>\n            </Col>      \n        </Row>   \n        <Row>\n          <Col md=\"4\" className=\"mr-3\">\n          <h4>Nota de venta</h4>  \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Nº </b></td>\n                  <td>{nota.id}</td>                                                            \n                </tr>  \n                <tr>      \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{nota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.montoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Pago Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.pagoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.saldoTotal)}</td>                                       \n                </tr>                \n              </tbody>             \n            </Table>  \n          </Col>\n          <Col md=\"7\">\n            <h4>Pagos</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>                  \n                <th width=\"20%\">Cuota</th>\n                <th width=\"30%\">Fecha Pago</th>\n                <th width=\"10%\">Estado</th>\n                <th width=\"40%\">Monto</th>                \n              </tr>\n          </thead>\n          {plan && (\n              <tbody>\n                  {plan.map((item, index) => (\n                      <tr key={index}>                      \n                        <td>{item.cuota}</td>\n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaPago}</Moment></td>                                                                 \n                        <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                                             \n                      </tr>  \n                      ))}\n              </tbody>\n          )}     \n            </Table>      \n          </Col>\n        </Row>\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {usuario.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{d}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n            </CardBody>   \n          </Card>\n        </Col>        \n      </Row>                                         \n      </>  \n                                                   \n    );\n};\nexport default EditPago;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport {  useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TablePagos from \"./components/TablePagos\";\nimport SearchPago from \"./components/SearchPago\";\nimport EditPago from \"./components/EditPago\";\n\nconst Pagos = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n    \n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchPago getComponent={getComponent}/><TablePagos getComponent={getComponent}/></>)          \n          break;    \n        case 'new':\n          dispatch({type:'COMPRA_RESET_ITEM'})\n          setComponent(<EditPago getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('PAGOS_ITEM','compras',key)) \n          setComponent(<EditPago getComponent={getComponent}/>)\n         \n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga ventas')\n    };\n  }, []); \n\n \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Pagos;\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subMenu = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/compras/${item.link}/`}\n        className={item.name === prop ? \"nav-link active\" : \"nav-link\"}> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subMenu;\n","export const InventarioRouter = [        \n    {\"name\":\"Categorias\",\"link\":\"utils\"},\n    {\"name\":\"Marcas\",\"link\":\"marcas\"},\n    {\"name\":\"Unidades\",\"link\":\"unidades\"},\n]\n\nexport const ConfiguracionRouter = [    \n    {\"name\":\"Usuarios\",\"link\":\"configuracion\"},        \n]\n\nexport const ContabilidadRouter = [        \n    {\"name\":\"Diarios\",\"link\":\"libros\"},\n    {\"name\":\"Mayores\",\"link\":\"mayores\"},\n    {\"name\":\"Sumas y Saldos\",\"link\":\"saldos\"}    \n]\n\nexport const CompraRouter = [    \n    {\"name\":\"Compras\",\"link\":\"compras\"},    \n    {\"name\":\"Proveedores\",\"link\":\"proveedores\"},\n    {\"name\":\"Pagos\",\"link\":\"pagos\"}\n]\n\nexport const CajasRoute = [    \n    {\"name\":\"Cajas\",\"link\":\"lcaja\"}            \n]\n\nexport const CajaRouter = [    \n    {\"name\":\"Cajas\",\"link\":\"cajas\"}\n]\n\nexport const CajasRouter = [        \n    {\"name\":\"Cajas\",\"link\":\"cajas\"}\n]\nexport const VentaRouter = [    \n    {\"name\":\"Ventas\",\"link\":\"ventas\"},        \n    {\"name\":\"Cobros\",\"link\":\"cobros\"}\n]\n\nexport const CotizacionRouter = [    \n    {\"name\":\"Cotizaciones\",\"link\":\"cotizaciones\"}\n]\n\nexport const ClienteRouter = [    \n    {\"name\":\"Clientes\",\"link\":\"clientes\"},        \n    {\"name\":\"Tickets\",\"link\":\"tickets\"},\n    {\"name\":\"Cotizaciones\",\"link\":\"cotizaciones\"}\n]\n\nexport const TpvRouter = [    \n    {\"name\":\"Tpv\",\"link\":\"tpv\"},        \n    {\"name\":\"Cajas\",\"link\":\"lcaja\"},\n    {\"name\":\"Lista ventas\",\"link\":\"lventas\"},\n]\nexport const TpvRouters = [    \n    {\"name\":\"Tpv\",\"link\":\"tpv\"}\n]\n\n\nexport const InformeRouter = [    \n    {\"name\":\"Movimientos\",\"link\":\"imovimientos\"},\n    {\"name\":\"Existencias\",\"link\":\"iexistencias\"},\n    {\"name\":\"Cajas\",\"link\":\"icajas\"},\n    {\"name\":\"Pagos\",\"link\":\"ipagos\"},\n]\n\nexport const InformeComprasRouter = [    \n    {\"name\":\"Compras\",\"link\":\"informes\"},\n    {\"name\":\"Pagos\",\"link\":\"ipagos\"}\n]\n\nexport const InformeVentasRouter = [    \n    {\"name\":\"Ventas\",\"link\":\"informes\"},\n    {\"name\":\"Cobros\",\"link\":\"icobros\"}\n]\n\nexport const InformeClientesRouter = [    \n    {\"name\":\"Clientes\",\"link\":\"informes\"},\n    {\"name\":\"Cotizaciones\",\"link\":\"icotizaciones\"},\n    {\"name\":\"Promociones\",\"link\":\"ipromociones\"},\n    {\"name\":\"Tickets\",\"link\":\"itickets\"}\n]\n\nexport const InformeInventariosRouter = [    \n    {\"name\":\"Existencias\",\"link\":\"informes\"},\n    {\"name\":\"Movimientos\",\"link\":\"imovimientos\"}    \n]\n\n\n\n\n\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE COMPRAS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Estado : {this.props.pestado}</h5>              \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"15%\" className=\"text-dark\">Proveedor</th>\n                <th width=\"25%\" className=\"text-dark\">Glosa</th>\n                <th width=\"10%\" className=\"text-dark\">F.Movimiento</th>                                                                                               \n                <th width=\"15%\" className=\"text-dark text-center\">Total</th>                    \n                <th width=\"15%\" className=\"text-dark text-center\">Pago</th> \n                <th width=\"15%\" className=\"text-dark text-center\">Saldo</th>                 \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.id}</td>\n                    <td>{item.proveedor}</td> \n                    <td>{item.observaciones}</td>                                                  \n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaCompra}</Moment></td>                              \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.pago)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.saldo)}</td>                    \n                    </tr>  \n                ))}\n                  <tr>\n                    <td className=\"centro\" colSpan=\"4\">TOTAL</td>                    \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psuma)}</td>\n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.ppago)}</td>\n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psaldo)}</td>\n                  </tr>\n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Movimientos ({value1, value2,estado}) {    \n  const componentRef = useRef();   \n  const { compras,montoTotal,pagoTotal,saldoTotal,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      dispatch({type:'INFORMES_RESET'})                   \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={compras}   \n            ptotal={total}                     \n            psuma={montoTotal}\n            psaldo={saldoTotal}\n            ppago={pagoTotal}\n            pvalue1={value1}\n            pvalue2={value2}\n            pestado={estado}            \n        />\n    </div>\n     )\n}\n\n\nexport default Movimientos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCompra.jsx';\nimport { InformeComprasRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport Select from 'react-select'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Movimientos  from './Movimientos';\nimport { customi } from '../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst estados =  [{\"value\":\"todas\",\"label\":\"--Todas--\"},{\"value\":\"pagado\",\"label\":\"Pagados\"},{\"value\":\"pendiente\",\"label\":\"Pedientes\"}];\n              const defaultVal = (options, valor) =>{\n                return options.filter(item =>\n                    item.value === valor\n                  )\n              \n              }\nconst MovimientosView = () => {\n  const dispatch = useDispatch() \n  const { compras } = useSelector(state => state.informes)    \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());  \n  const [estado, setEstado] = useState(\"todas\"); \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2      \n    item.estado = estado      \n    dispatch(crudActions.GET_INFORMES('INFORMES_COMPRAS_RANGOS','buyrango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      dispatch({type:'INFORMES_COMPRAS_RESET'}) \n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeComprasRouter} prop={'Compras'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n\n                <Row form> \n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eEstado\">Estado Financiero: </Label>                 \n                    <Select         \n                          defaultValue={ estados[0]}\n                          name=\"estado\"    \n                          id=\"estado\"                    \n                          options={estados}                                                    \n                          value={defaultVal(estados,estado)} \n                          onChange={ (e)=> { setEstado(e.value)}}        \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                 \n                </Row>\n              \n                <Row form>                  \n                  <Col md=\"6\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">        \n          <Movimientos value1={value1} value2={value2} estado={estado}/>          \n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default MovimientosView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n       <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE PAGOS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Estado : {this.props.pestado ? \"Pagados\":\"Pendientes\"}</h5>              \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>                \n                <th width=\"25%\" className=\"text-dark\">Proveedor</th>\n                <th width=\"30%\" className=\"text-dark\">Glosa</th>\n                <th width=\"10%\" className=\"text-dark\">Fecha Pago</th>\n                <th width=\"10%\" className=\"text-dark\">Fecha Pagado</th>\n                <th width=\"10%\" className=\"text-dark text-center\">Cuota</th>\n                <th width=\"10%\" className=\"text-dark text-center\">Monto</th>                                    \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.id}</td>\n                    <td>{item.proveedor}</td>                     \n                    <td>{item.observaciones}</td>\n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaPago}</Moment></td>                              \n                    <td>{item.fechaPagado === 'sin pago' ? item.fechaPagado: <Moment format=\"DD-MM-YYYY\">{item.fechaPagado}</Moment>} </td>\n                    <td className=\"text-center\">{item.cuota}</td>                              \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                    \n                    </tr>  \n                ))}\n                  <tr>\n                    <td className=\"centro\" colSpan=\"6\">TOTAL</td>                    \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psuma)}</td>                    \n                  </tr>\n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Pagos ({value1, value2, estado}) {    \n  const componentRef = useRef();   \n  const { montoTotal, total, pagos } = useSelector(state => state.informes)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      dispatch({type:'INFORMES_RESET'})     \n      \n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={pagos}  \n            pestado={estado} \n            ptotal={total}                     \n            psuma={montoTotal}\n            pvalue1={value1}\n            pvalue2={value2}            \n            \n        />\n    </div>\n     )\n}\n\n\nexport default Pagos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCompra.jsx';\nimport { InformeComprasRouter} from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport Select from 'react-select'\nimport { useDispatch } from 'react-redux'\nimport Pagos  from './Pagos';\nimport { customi } from '../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst estados =  [{\"value\":true,\"label\":\"Pagados\"},{\"value\":false,\"label\":\"Pendientes\"}];\n\n              const defaultVal = (options, valor) =>{\n                return options.filter(item =>\n                    item.value === valor\n                  )\n              \n              }\nconst PagosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  const [estado, setEstado] = useState(false);  \n    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde     = value1\n    item.hasta     = value2      \n    item.estado    = estado    \n    dispatch(crudActions.GET_INFORMES('INFORMES_COMPRA_PAGOS','payrango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      dispatch({type:'INFORMES_PAGOS_RESET'}) \n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n      <SubMenu items={InformeComprasRouter} prop={'Pagos'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eRango\">Estado </Label>                 \n                    <Select                                                               \n                          defaultValue={estados[0]}\n                          name=\"estado\"    \n                          id=\"estado\"                    \n                          options={estados}                                                    \n                          value={defaultVal(estados,estado)} \n                          onChange={ (e)=> { setEstado(e.value)}}      \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                                                        \n                </Row>\n\n                \n              \n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Pagos            \n            value1={value1}\n            value2={value2}   \n            estado={estado}              \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default PagosView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableCompras = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas,indicador }= useSelector(state => state.compras)\n   const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('COMPRAS_DATA','pedidos',page, num,usuario.id,usuario.rolId))  \n    }\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  useEffect(() => {\n    makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'COMPRAS_RESET_DATA'})\n      };\n  }, []);\n\n  const setIndicador = (pky,est,monto) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'COMPRAS_INDICADOR',value:iok,estado:est,indicadorTotal:parseFloat(monto)}) \n  };\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n\n                  <th width=\"5%\"></th>\n                  <th width=\"10%\">Código</th>\n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"30%\">Glosa</th>                  \n                  <th width=\"10%\">Cantidad</th>\n                  <th width=\"10%\">Total</th>\n                  <th width=\"5%\">Estado</th>\n                  <th width=\"5%\">Tipo</th>\n                  <th width=\"15%\">Proveedores</th>                               \n                  \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item, index) => (\n                      <tr key={index}>                                            \n                        <td >                       \n                        <Input type=\"checkbox\" \n                        onChange={() => { setIndicador(item.id, item.estado, item.totalGeneral) }} \n                        checked={ item.id === indicador ? true : false}\n                        /></td>\n                        <td>{item.id}</td>\n                        <td><Moment format=\"DD-MM-YYYY\">{item.fechaCompra}</Moment></td>                        \n                        <td>{item.observaciones}</td>\n                        <td>{item.nroItems}</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                        <td className=\"text-center\">\n                          { item.estado === 'cerrado' ? \n                          <FontAwesomeIcon icon={faLock} className=\"text-verde\"/>\n                          :\n                          <FontAwesomeIcon icon={faLockOpen} className=\"text-rojo\"/>\n                          }                        \n                        </td>\n                        <td>{item.tipo}</td>  \n                        <td>{item.proveedor}</td>                                                                                 \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n      </CardBody>    \n      <CardFooter>     \n    <Row>  \n    <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>  \n    </Row>  \n    </CardFooter> \n        </Card>  \n      </Col>\n    </Row>    \n</>      \n  )\n\n};\nexport default TableCompras;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    return (\n    <>\n      <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Compra # {this.props.dato.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha : {this.props.dato.fechaCompra}</h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>    \n            <Table className=\"table-reporteh mt-2\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{this.props.dato.nroItems}</td>                                                            \n                  <td><b>Usuario : </b></td>\n                  <td>{this.props.dato.usuario.nombres || ''} </td>\n                </tr>                \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(this.props.dato.total)}</td>                     \n                  <td><b>Proveedor : </b></td>\n                  <td>{this.props.dato.proveedor.razonSocial || ''} </td>\n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"3\">{ this.props.dato.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"20%\" >Código</th>\n                <th width=\"50%\">Nombre</th>                                \n                <th width=\"10%\">Costo</th>\n                <th width=\"10%\">Cantidad</th>                \n                <th width=\"10%\">Total</th>                                             \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n                  {this.props.data.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                                                                                                                                      \n                        <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(item.valor)}</td>                     \n                        <td>{item.cantidad}</td>\n                        <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(item.valor * item.cantidad)}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>\n            </Col>      \n        </Row>   \n        <Row>\n          <Col md=\"4\" className=\"mr-3\">\n          <h4>Nota de venta</h4>  \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Nº </b></td>\n                  <td>{this.props.xnota.id}</td>                                                            \n                </tr>  \n                <tr>      \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{this.props.xnota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(this.props.xnota.montoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Pago Total : </b></td>\n                  <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(this.props.xnota.pagoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(this.props.xnota.saldoTotal)}</td>                                       \n                </tr>                \n              </tbody>             \n            </Table>  \n          </Col>\n          <Col md=\"7\">\n            <h4>Pagos</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>                  \n                <th width=\"20%\">Cuota</th>\n                <th width=\"30%\">Fecha Pago</th>\n                <th width=\"10%\">Estado</th>\n                <th width=\"40%\">Monto</th>                \n              </tr>\n          </thead>\n          {this.props.xplan && (\n              <tbody>\n                  {this.props.xplan.map((item, index) => (\n                      <tr key={index}>                      \n                        <td>{item.cuota}</td>\n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaPago}</Moment></td>                                                                 \n                        <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                \n                        <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(item.monto)}</td>                                             \n                      </tr>  \n                      ))}\n              </tbody>\n          )}     \n            </Table>      \n          </Col>\n        </Row>\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n      \n    </> \n    );\n  }\n}\n\n\nfunction ArticuloResumen () {    \nconst dispatch = useDispatch()\nconst { item, items, nota, plan } = useSelector(state => state.compras)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n      dispatch({type:'COMPRAS_RESET_RESUMEN'}) \n    };\n  }, []);\n\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        /*<ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}\n            xnota={nota}\n            xplan={plan}\n            user={usuario}\n        />*/\n    </div>\n     )\n}\n\n\nexport default ArticuloResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ButtonGroup, Row,Col,Button, Form, Modal, Table, ModalBody, FormGroup, Input, Label, Card, CardBody  } from \"reactstrap\"\nimport { crudActions, mailActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faCheck, faEnvelope, faEdit, faSearch, faPlus, faTrash, faCoins, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport PedidoResumen from './PedidoResumen'\nimport Switch from 'react-switch'\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'proveedor',\"label\":'proveedor'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchPedidos = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, indicadorTotal, estado}= useSelector(state => state.compras)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n    const [viewx, setviewx] = useState(false);\n    const [viewz, setviewz] = useState(false);\n    const [viewy, setviewy] = useState(false);\n    const [cuota, setcuota] = useState(1);\n    const [plan, setplan] = useState([]);\n\n    const [contado, setContado] = useState(true);\n    const [banco, setBanco] = useState(false);\n    const [inicial, setInicial] = useState(false);\n    const [pinicial, setPinicial] = useState(0);\n    /*const [nombres, setnombres] = useState(\"\");\n    const [email, setemail] = useState(\"\");*/\n    const [observaciones, setobservaciones] = useState(\"\");\n\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n    \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      iok.usuarioId = usuario.id\n      iok.rolId = usuario.rolId\n      dispatch(crudActions.GET_SEARCH('COMPRAS_DATA','pedidos',iok))              \n      console.log(iok)\n   }  \n  \n    /*const createHandle = () => { \n      let eItem = {                            \n          usuarioId : usuario.id,\n          rolId: usuario.rolId\n     \n      }\n      dispatch(crudActions.SET_ADD('COMPRAS_DATA','compras',eItem,'lista'))      \n      dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})                                           \n   }*/\n\n   const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('COMPRAS_DATA','pedidos',indicador,'lista'))      \n    dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setview(false)\n\n  };\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n  const toggleModalViewx = () => {        \n    setviewx(!viewx)      \n             \n  };\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)      \n             \n  };\n  const toggleModalViewy = () => {        \n    setviewy(!viewy)                   \n  };\n\n  const aprobarCompra = () => {   \n    let dato ={\n      \"id\": indicador,\n      \"tipo\": \"compra\",      \n      \"almacenId\": 1,\n      \"estado\": \"cerrado\",      \n      \"usuarioId\" : usuario.id,\n      \"rolId\": usuario.rolId,\n      \"nroPagos\": cuota,\n      \"total\": indicadorTotal     \n    }\n           \n    let xcode = {\n      item: dato,\n      items:plan,\n      contado:contado,\n      banco:banco,\n      inicial:inicial,\n      cuota:pinicial,\n      total:indicadorTotal\n    }\n    dispatch(crudActions.SET_APROBAR('COMPRAS_DATA','pedidos/aprobar',xcode,'lista'))     \n    dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setviewx(false)\n  };\n\n  const calcular = () => {         \n    let newArray = []\n    let diok = false\n    let dd = new Date()\n    for (let index = 0; index < cuota; index++) {\n      if(index === 0 && inicial){\n        setPinicial(parseFloat(indicadorTotal)/cuota)\n        diok = true\n      }\n      let iok = {}\n      iok.cuota     = index+1\n      iok.monto     = parseFloat(indicadorTotal)/cuota\n      iok.estado    =  diok\n      iok.fechaPago = dd\n      iok.mes       = dd.getMonth() + 1\n      newArray.push(iok)\n      diok = false\n      /*console.log(parseFloat(indicadorTotal)/cuota)*/\n    }\n    \n    setplan(newArray)\n}\n\nconst onChange = (event,item) => {       \n\n  const {name, value } = event.target    \n  let xarray = [...plan]\n  for (let index = 0; index < cuota; index++) {\n    xarray[item]['fechaPago']= value\n    \n  }\n  setplan(xarray)\n};\n\n\nconst enviar = event => {    \n  event.preventDefault()             \n  let dato ={\n    compraId: indicador,\n    proveedorId:1,    \n    subject:observaciones\n  }\n  dispatch(mailActions.SEND_MAIL('mails/sendcotizaciones',dato))\n  dispatch({type:'COMPRAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n  /*setnombres('')  \n  setemail('')*/\n  setobservaciones('')\n  setviewy(false)\n  \n};\n\n    return (                                      \n      <>       \n      <Card>    \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faShoppingCart} />  \n          </div>        \n        </Col>    \n        <Col md={4} className=\"cards\">\n          <ButtonGroup>\n                <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  \n                onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n                 <Button className={indicador === 0  || estado === 'cerrado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                   <FontAwesomeIcon icon={faEdit} /></Button>            \n                 <Button className={indicador === 0  || estado === 'cerrado' ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n                   <FontAwesomeIcon icon={faTrash} /> </Button>                                                 \n                 <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewx()} >\n                   <FontAwesomeIcon icon={faCoins} /></Button>      \n                   <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewy()} >\n               <FontAwesomeIcon icon={faEnvelope} /></Button>               \n          </ButtonGroup>\n        </Col>\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col>\n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } COMPRAS</p>          \n        </Col>\n\n      </Row>   \n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewx} toggle={toggleModalViewx} className=\"calculoBody\">  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewx()} >\n          <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody className=\"calculoConte\">\n          <Row>                       \n              <Col md={2}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nro. cuotas</Label>\n                    <Input type=\"number\" name=\"cuota\" id=\"cuota\" \n                    value={cuota || ''}                \n                    onChange={ (e) => setcuota(e.target.value)} />    \n                  </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Contado</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setContado(e)}}  \n                        checked={contado} />\n                    </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                      <Label for=\"estado\">Cheque</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setBanco(e)}}  \n                        checked={banco} />\n                </FormGroup>      \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">P.Inicial</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setInicial(e)}}  \n                        checked={inicial} />\n                    </FormGroup>\n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    className=\"btn-md btn-info mt-4\"\n                    onClick={() => calcular()}>\n                    <FontAwesomeIcon icon={faCoins} />  \n                    {' '} Calcular\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row>    \n          <Row>            \n              <Col md={12}>\n                <Card>            \n                  <CardBody>\n                    <h6>Compra total : {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(indicadorTotal)}</h6>\n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"20%\">Fecha</th>                  \n                            <th width=\"20%\">Cuota</th>                  \n                            <th width=\"30%\">Monto</th>\n                            <th width=\"30%\">Estado</th>\n                        </tr>\n                    </thead>\n                    {plan && (\n                        <tbody>\n                            {plan.map((item, index) => (\n                                <tr key={index}>                                                                       \n                                  <td>\n                                    <Input type=\"date\" name=\"fechaPago\" id=\"fechaPago\" \n                                      value={item.fechaPago || ''}       \n                                      onChange={ (e) => onChange(e,index)}                     \n                                    />   \n                                  </td>                                                 \n                                  <td>{item.cuota}</td> \n                                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>\n                                  <td>{item.estado ? \"pagado\":\"pendiente\" }</td>                                                                    \n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                  </Table>\n                </CardBody>  \n              </Card>\n              </Col>\n            </Row>\n            <Row>                                      \n                  <Col md={3}>\n                    <FormGroup>\n                      <Button                        \n                        className={plan ? \"btn btn-md btn-success\" : \"btn btn-md btn-success disabled\" }\n                        onClick={() => aprobarCompra()}>\n                        <FontAwesomeIcon icon={faCoins} />  \n                        {' '} Aprobar\n                      </Button>                  \n                    </FormGroup>               \n                  </Col>           \n            </Row>    \n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <PedidoResumen/>\n          </ModalBody>\n      </Modal>\n      <Modal isOpen={viewy} toggle={toggleModalViewy}>  \n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewy()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Card>\n            <h6>Enviar cotización</h6>\n          <Form onSubmit={ enviar}>           \n          <Row>                       \n              <Col md={12}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Observaciones</Label>\n                    <Input type=\"text\" name=\"observaciones\" id=\"observaciones\" \n                    value={observaciones || ''}                \n                    onChange={ (e) => setobservaciones(e.target.value)} />    \n                  </FormGroup> \n              </Col>             \n          </Row> \n          <Row>                                               \n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn-md btn-info mt-4\">\n                    <FontAwesomeIcon icon={faEnvelope} />  \n                    {' '} Enviar\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          </Form> \n          </Card>  \n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchPedidos;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { impuestos } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport Select from 'react-select'    \nimport { custom } from '../../../../helpers/customStyles'\n\nconst FormCompra = () => {\n    const dispatch = useDispatch()  \n    const { item, items, pitems } = useSelector(state => state.compras)   \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE',name,value))  \n    }\n    const changesHandler = (event,name) => {                       \n      const { value } = event ? event : ''              \n      dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE',name,value))     \n      console.log(value)    \n      if(name === 'iva')\n      {\n        let iok = (value === 0 || value === '0') ? 0: (parseFloat(item.totalGeneral) * (parseFloat(value) / 100))\n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE','impuesto',iok)) \n        let sTotal = (value === 0 || value === '0') ? item.totalGeneral: parseFloat(item.totalGeneral)- parseFloat(iok)\n        dispatch(crudActions.SET_CHANGE('COMPRAS_CHANGE','subTotal',sTotal)) \n              \n      }       \n    }\n      \n\n\n    const submitHandle = () => { \n        let eItem = item                     \n        eItem.usuarioId   = usuario.id                \n        eItem.detalle     = item.observaciones +', '+item.proveedors\n        eItem.proveedorId = item.proveedorId === 0 ? 1: item.proveedorId\n        let xcode ={\n          item : eItem,\n          items: items,\n          pitems: pitems\n        }\n\n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATES('COMPRAS_ADD','pedidos',xcode,'unit'))\n        }else{\n          dispatch(crudActions.SET_ADD('COMPRAS_ADD','pedidos',xcode,'lista'))\n        }\n     }\n\n\n    useEffect(() => {      \n      return () => {\n        dispatch({type:'COMPRAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n        <>\n          <Row form>\n            <Col md={12}>\n            <FormGroup>\n                <Label for=\"fproveedorId\"> Proveedor </Label>\n                <Input type=\"text\" name=\"proveedors\" id=\"proveedors\" \n                    value={item.proveedors || ''}                          \n                    onChange={ (e) => changeHandler(e)} \n                    readOnly={true}\n                />                  \n              </FormGroup>   \n            </Col>\n          </Row> \n           <Row form>\n            <Col md={12}>\n            <FormGroup>\n                <Label for=\"fiva\"> Impuesto </Label>\n                  <Select                                                               \n                    defaultValue={impuestos[0]}\n                    styles={custom} \n                    name=\"iva\"    \n                    id=\"iva\"                    \n                    options={impuestos}      \n                    isClearable={false}                          \n                    value={defaultVal(impuestos,item.iva)}\n                    onChange={ (e) => changesHandler(e,'iva')}/>\n              </FormGroup>   \n            </Col>\n          </Row>   \n          <Row form>                                    \n            <Col md={12}>\n                <FormGroup>\n                  <Label for=\"observaciones\">Observaciones</Label>\n                  <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                          value={item.observaciones || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                </FormGroup>   \n            </Col>\n          </Row>  \n          \n          <Row form>\n            <Col md={6}>\n              <Button\n                className={item.id ? \"btn-md btn-warning mt-4\" : \"btn-md btn-info mt-4\"}\n                onClick={() => submitHandle()}>\n                <FontAwesomeIcon icon={faSave} />  \n                  {' '} {item.id ? \" Actualizar\" : \" Guardar\"}                        \n              </Button>    \n            </Col>                  \n          </Row>\n    </>\n                                      \n    );\n};\nexport default FormCompra;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row,Col, Button, FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faSearch, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst SearchpArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)  \n    const { items, item  } = useSelector(state => state.compras)  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');\n    const [cantidad, setCantidad] = useState(0);    \n    const [valor, setValor] = useState(0);\n    const [articulo, setArticulo] = useState({});\n    \n    const changeHandler = event => {    \n      const { value } = event.target  \n      setName(value)            \n    } \n\n    const search = () =>{    \n      if (!name) {      \n        clearInput();\n        return;\n      } \n      else{\n        setOpen(true)\n        dispatch(crudActions.GET_SEARCH_ITEMS('ARTICULOS_DATA_ITEMS','tpv',name))   \n      }\n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)\n      setCantidad(0)    \n      setValor(0)  \n    } \n    \n    const upCantidad = (e) => {\n      const { value } = e.target \n      setCantidad(value)            \n    }\n    const upValor = (e) => {      \n      const { value } = e.target \n      setValor(value)      \n    }\n   \n\n    const add = () =>{     \n      let ites = [...items]\n      let cTotal = item.nroItems   \n      let gTotal = item.totalGeneral      \n      let sTotal = item.subTotal\n      let gImp   = item.impuesto  \n            \n      let repeat = false      \n      ites.map((item, index) =>{                        \n        if(item.articuloId === articulo.id)\n        { \n          repeat = true;\n        }\n        return null\n      }) \n     \n      if(!repeat)\n      {\n      let itemCompra = {\n        cantidad     : cantidad,          \n        articuloId   : articulo.id,\n        codigo       : articulo.codigo,            \n        nombre       : articulo.nombre,\n        unidad       : articulo.unidad,\n        compraId     : item.id,\n        valor        : valor,\n        subTotal     : parseFloat(cantidad) * parseFloat(valor),                \n      }  \n      ites.push(itemCompra);   \n      cTotal = parseFloat(cTotal) +parseFloat(cantidad);      \n      gTotal = parseFloat(gTotal) +parseFloat(itemCompra.subTotal)                  \n      gImp   = gTotal * parseFloat(item.iva / 100)\n      sTotal = gTotal - parseFloat(gImp)                \n      dispatch({type:'COMPRAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp })\n        \n      }\n      clearInput()\n\n    }\n\n    const handleAsignar = (articulo) =>{        \n      setArticulo(articulo)  \n      setName(articulo.nombre)    \n      setOpen(false)\n    }\n    \n    return (       \n      <>                \n        <Row form>                      \n                <Col md={6}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Nombres</Label>                 \n                          <Input \n                            type=\"text\" \n                            name=\"name\"                             \n                            id=\"name\"  \n                            value={name || ''}  \n                            onChange={changeHandler} />\n                             {\n                              name ? \n                              <Button className=\"volatil\" onClick={(e) => {clearInput()}}>\n                                <FontAwesomeIcon icon={faTimes}   />\n                              </Button>\n                              : null\n                            } \n                        </FormGroup>\n                      </Col>\n                      <Col md={1}>\n                        <FormGroup>   \n                          <Button className=\"btn-primary btn-search mt-3\"\n                          onClick={search}>\n                            <FontAwesomeIcon icon={faSearch} />\n                          </Button>  \n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Cantidad</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"cantidad\"                             \n                            id=\"cantidad\"    \n                            value={cantidad}                          \n                            onChange={(e) => upCantidad(e)} />\n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eValor\">Valor</Label>                 \n                        <Input \n                            type=\"number\" \n                            name=\"valor\"                             \n                            id=\"valor\"    \n                            value={valor}                          \n                            onChange={(e) => upValor(e)} />\n                        </FormGroup>\n                      </Col>\n            <Col md={1}>\n                <Button className={cantidad === 0 ? \"btn-rdd btn-disabled mt-3\":\"btn-rdd btn-danger mt-3\"}\n                        onClick={() => add() }>\n                    <FontAwesomeIcon icon={faArrowDown} />                          \n                </Button>\n            </Col>\n        </Row>  \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.nombre}  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n          </>                                     \n    );\n};\nexport default SearchpArticulos;\n","import React,{useEffect} from \"react\";\nimport { Table, Row, Col, Button  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ListaCompras = () => {\n   const dispatch = useDispatch() \n   const { item, items }= useSelector(state => state.compras)\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n   const removeItem = (index) => {     \n    var array = [...items];    \n    let cTotal = item.nroItems    \n    let gTotal = item.totalGeneral  \n    let sTotal = item.subTotal\n    let gImp    = item.impuesto       \n    \n    if(array.length < 0){\n      cTotal = 0\n      gTotal = 0\n      sTotal = 0\n      gImp   = 0\n    }else{    \n        cTotal = cTotal - parseFloat(array[index].cantidad);    \n        gTotal = gTotal - parseFloat((array[index].cantidad * array[index].valor));        \n        gImp   = gTotal * parseFloat(item.iva / 100)\n        sTotal = gTotal - parseFloat(gImp)\n    }\n    array.splice(index,1);        \n    dispatch({type:'COMPRAS_SET_ITEMS',values:array, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp })      \n    } \n   \n   useEffect(() => {    \n    return () => {\n      dispatch({type:'COMPRAS_RESET_ITEMS'})   \n    };\n}, []);\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                <th width=\"20%\" >Código</th>\n                <th width=\"40%\">Nombre</th>                                \n                <th width=\"10%\">Precio</th>  \n                <th width=\"10%\">Cantidad</th>                                              \n                <th width=\"15%\">Total</th>            \n                <th width=\"5%\"></th> \n              </tr>\n          </thead>\n          {items && (\n              <tbody>\n                  {items.map((item, index) => (\n                     <tr key={item.articuloId}>                      \n                     <td>{item.codigo || ''}</td>\n                     <td>{item.nombre || ''}</td>                                                                                                      \n                     <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>\n                     <td>{item.cantidad} ({item.unidad})</td>\n                     <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                     \n                     <td>\n                       <Button className=\"btn btn-danger\" \n                         onClick={() => { removeItem(index)}}>\n                         <FontAwesomeIcon icon={faTrash} />\n                       </Button>                                           \n                     </td>\n                   </tr>   \n                      ))}\n                   <tr>\n                        <td colSpan=\"4\">SubTotal:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                        \n                      </tr>\n                      <tr>\n                        <td colSpan=\"4\">Impuesto:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.impuesto)}</td>\n                      </tr>                      \n                      <tr>\n                        <td colSpan=\"4\"><b>TOTAL</b></td>\n                        <td><b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</b></td>                        \n                      </tr>     \n              </tbody>\n          )}\n        </Table>\n    \n      </Col>         \n    </Row>       \n</>      \n  )\n\n};\nexport default ListaCompras;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport { Row,Col,Card,CardBody,Form,Button, FormGroup, Input, Modal, ModalBody, Table } from \"reactstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nconst ProveedorCotizacion = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.proveedores) \n    const { item, pitems }  = useSelector(state => state.compras) \n    const [prop, setProp] = useState('razonSocial');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };    \n    const asignar = (xitem) => {             \n      var array = [...pitems]\n      let repeat = false\n      array.map((itt,index) =>{\n        if(itt.id === xitem.id )\n        {\n          repeat = true\n        }\n        return null\n      }) \n      if(!repeat){\n        let iok = {\n          filename    : xitem.filename,          \n          proveedorId : xitem.id,\n          compraId    : item.id,\n          razonSocial : xitem.razonSocial,\n          telefono    : xitem.telefono,\n          email       : xitem.email\n\n        }         \n        array.push(iok)\n      }      \n      dispatch({type:'COMPRAS_SET_PROVEEDORES',values:array})          \n      }\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('PROVEEDORES_DATA','proveedores',iok))           \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'CLIENTES_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={9} className=\"text-left ml-2\">                     \n                <h6>Proveedores</h6>\n            </Col>\n            <Col md={2} className=\"text-right\">                     \n                <Button className=\"btn-rd btn-info\" onClick={() => toggleModalView()}>\n                    <FontAwesomeIcon icon={faSearch} />                          \n                </Button>\n            </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>                              \n                            <th width=\"50%\">Razon Social</th>\n                            <th width=\"40%\">Nit</th>          \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                                                          \n                                    <td>{item.razonSocial}</td>\n                                    <td>{item.nit}</td>                                    \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}>\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default ProveedorCotizacion;\n","import React,{useEffect} from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faEnvelope, faTimesCircle, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { api } from \"../../../../helpers\";\n\n\nconst ListaProveedores = () => {\n   const dispatch = useDispatch() \n   const {pitems, item}= useSelector(state => state.compras)\n\n   useEffect(() => {    \n    return () => {\n      dispatch({type:'PROVEEDORES_RESET_ITEMS'})   \n    };\n  }, []);\n\n  const handleEliminar = (index) => {          \n    var array = [...pitems];        \n    array.splice(index,1);        \n    dispatch({type:'COMPRAS_SET_PROVEEDORES',values:array})         \n  }\n  \n  const handleAsignar = (itt) => {          \n    dispatch({type: 'COMPRAS_CHANGE', props: 'proveedorId', value: itt.proveedorId})\n    dispatch({type: 'COMPRAS_CHANGE', props: 'proveedors', value: itt.razonSocial})\n  }\n  \n  return(\n    <>    \n    <Row className=\"mt-2 mb-3\">      \n        {pitems && (\n          <Col>    \n            {pitems.map((it, index) => (  \n                <div key={index} className={it.proveedorId === item.proveedorId ? \"prospectos\":\"prospecto\"}>   \n                  {it.proveedorId === item.proveedorId ? <FontAwesomeIcon icon={faCheckCircle} className=\"prosTiv\"/> : <FontAwesomeIcon icon={faTimesCircle} className=\"prosTi\" onClick={() => handleEliminar(index)}/>}                                  \n                    <div className=\"prospectol\" onClick={() => handleAsignar(it)}>\n                    <img alt=\"artículo\"   className=\"img-prospecto\" src={api + \"/static/images/proveedores/md/\" + it.filename}/>   \n                    </div>\n                    <div className=\"prospector\">\n                      <h4>{item.razonSocial}</h4>                  \n                      <h5><FontAwesomeIcon icon={faEnvelope} className=\"prosFa\"/> {it.email}</h5>\n                      <h5><FontAwesomeIcon icon={faPhone} className=\"prosFa\"/> {it.telefono}</h5>\n                    </div>\n                </div>\n            ))}\n          </Col>\n        )}\n    </Row>        \n</>      \n  )\n\n};\nexport default ListaProveedores;\n","import React  from \"react\";\nimport { useSelector} from 'react-redux'\nimport { Row, Col, Card, CardBody, Button } from \"reactstrap\"\nimport FormPedido from './FormPedido'\nimport SearchpArticulos from '../../../INVENTARIOS/Articulos/components/SearchpArticulo'\nimport ListaPedidos from \"./ListaPedidos\";\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport ProveedorCotizacion from '../../Proveedores/components/ProveedorCotizacion'\nimport ListaProveedores from \"./ListaProveedores\";\n\nconst EditPedido = ({getComponent}) => {\n  const { item } = useSelector(state => state.compras)  \n\n  var d = new Date();\n    return (      \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA COTIZACIONES\n          </Button>              \n        </Col>  \n      </Row> \n      <Row>\n      <Col md=\"12\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"3\" className=\"barraz\">\n               <h5><b>COTIZACIÓN Nº : </b> {item.id} </h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Estado : </b> {item.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {item.nroItems}</h5>\n               </Col>                \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n\n      <Row>\n        <Col md=\"3\" className=\"cardCo\">\n            <Card>        \n              <CardBody>\n               <h6>Datos Cotización</h6> \n              <FormPedido/> \n              </CardBody>   \n            </Card>\n        </Col>          \n        <Col md=\"6\" className=\"cardCo\">\n          <Card>\n            <CardBody>\n              <h6>Productos</h6> \n              <SearchpArticulos/>\n              <ListaPedidos/>\n            </CardBody>\n          </Card>           \n        </Col>\n        <Col md=\"3\" className=\"cardCo\">\n          <Card>\n            <CardBody>\n              <ProveedorCotizacion/>\n              <ListaProveedores/>\n            </CardBody>\n          </Card>           \n        </Col>          \n      </Row>\n\n      </>\n    );\n};\nexport default EditPedido;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TablePedidos from \"./components/TablePedidos\";\nimport SearchPedido from \"./components/SearchPedido\";\nimport EditPedido from \"./components/EditPedido\";\n\n\nconst Pedidos = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n \n\n\n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':       \n          setComponent(<><SearchPedido getComponent={getComponent}/><TablePedidos getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'PEDIDOS_RESET_RESUMEN'})   \n          setComponent(<EditPedido getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('PEDIDOS_ITEM','pedidos',key)) \n          setComponent(<EditPedido getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n     /* console.log('descarga compras')*/\n    };\n  }, []); \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                   \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Pedidos;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope,  faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Dashboard from \"../../pages/COMPRAS/InicioView\";\nimport Compras from \"../../pages/COMPRAS/Compras/Compras\"\nimport Proveedores from \"../../pages/COMPRAS/Proveedores/ProveedoresView\"\nimport Pagos from \"../../pages/COMPRAS/Pagos/Pagos\"\nimport Informes from \"../../pages/COMPRAS/Informes/MovimientosView.jsx\"\nimport Ipagos from \"../../pages/COMPRAS/Informes/PagosView.jsx\"\nimport Cotizaciones from \"../../pages/COMPRAS/Pedidos/Pedidos.jsx\"\nimport Moment from \"react-moment\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst fechaHoy = new Date()\nfunction Compra(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems')) \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))   \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{\n          if(prop.icon === \"compras\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n          }  \n          return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Dashboard\":\n            return Dashboard;                    \n          case \"Compras\":\n            return Compras;\n          case \"Proveedores\":\n            return Proveedores;\n          case \"Cotizaciones\":\n            return Cotizaciones;  \n          case \"Pagos\":\n            return Pagos;        \n          case \"Informes\":\n            return Informes;      \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/compras'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))  \n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">   \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>    \n            </div>  \n            <div className=\"center-unity\">\n            <h6>COMPRAS</h6>  \n            </div> \n            <div className=\"conta-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div> \n\n            <div className=\"right-unity\">\n            <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>          \n        <Nav> \n  \n            <NavItem>       \n              <NavLink to=\"/compras/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                <p className=\"text-white\">  Dashboard  </p>\n              </NavLink>          \n            </NavItem>\n            {itemr.map((prop, key) => (  \n              <NavItem key={key}>  \n                <NavLink                \n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\">               \n                  <p> {prop.name}</p>                    \n                </NavLink>\n              </NavItem>))\n            }\n     \n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}\n          <Route path=\"/compras/inicio\" component={Dashboard} />\n          <Route path=\"/compras/ipagos\" component={Ipagos} />\n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Compra;\n\n","import React,{useState} from 'react';\nimport { Form, FormGroup, Col, Button, Input, ButtonGroup  } from \"reactstrap\";\nimport { useDispatch } from 'react-redux'\nimport { usuarioActions } from '../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faKey, faLock } from \"@fortawesome/free-solid-svg-icons\";  \nexport default function LoginView({setToken}) {\n    const dispatch = useDispatch() \n    const [user, setUser] = useState({\n      username:\"\",\n      password:\"\"\n    })\n    const handleChange = prop => event => {                         \n      setUser({      \n          ...user,\n          [prop]: event.target.value\n      })  \n    } \n  \n    const submitHandle = event => {       \n      event.preventDefault()        \n      dispatch(usuarioActions.login(user))\n      \n   }\n   \n  return(\n    <div className=\"pos\">\n      <div className=\"contenedor\">\n        <div className=\"contenidoLeft\">\n          <div className=\"imas\">\n            <img src={require(\"../../assets/img/login.png\")}/>\n          </div>  \n        </div>   \n        <div className=\"contenidoRights\">   \n        <div className=\"login\">    \n          <Form className=\"form-login mt-3\" onSubmit={submitHandle}>\n          <h5>Iniciar Sessión</h5>\n          <FormGroup row>\n            <Col sm={2} className=\"io-blue\">\n              <FontAwesomeIcon icon={faUser} />\n            </Col>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                id=\"username\"\n                value={user.username}\n                placeholder=\"username\"\n                onChange={handleChange(\"username\")}\n                onInvalid={(e) => e.target.setCustomValidity('campo necesario !!')}\n                onInput={(e) => e.target.setCustomValidity('')}\n                required\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm={2} className=\"io-blue\">\n              <FontAwesomeIcon icon={faKey} />\n            </Col>\n            <Col sm={10}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"**********\"\n                value={user.password}\n                onChange={handleChange(\"password\")}\n                onInvalid={(e) => e.target.setCustomValidity('campo necesario !!')}\n                onInput={(e) => e.target.setCustomValidity('')}\n                required\n              />\n            </Col>\n          </FormGroup>\n            <div className=\"button-container\">\n              <ButtonGroup>\n                <Button type=\"submit\" className=\"btn-infos mt-5 btn-md\">\n                  <FontAwesomeIcon icon={faLock} />\n                  {' '} Ingresar\n                </Button>\n              </ButtonGroup>\n            </div>\n          </Form>\n        </div>\n        </div>  \n      </div>\n    </div>    \n  )\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport LoginView from \"../../pages/SECURITY/LoginView.jsx\"\nfunction Post(){\nreturn(\n    <Switch>\n        <Route path=\"/login/\" component={LoginView}/>        \n    </Switch>\n)    \n}\nexport default Post;\n","import React, { useEffect } from \"react\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport esLocale from '@fullcalendar/core/locales/es'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { getMes } from '../../../../helpers/funciones'\n\nconst Calendar = () => {  \n  const dispatch = useDispatch()\n  const {data}  = useSelector(state => state.tareas)   \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n\n  const makeHttpRequestWithPage = (xredux) =>{\n    const {desde, hasta } = getMes()        \n    let dato = {}\n    dato.usuarioId = user.id\n    dato.start = desde\n    dato.end = hasta\n    dato.inicio = desde\n    dato.fin = hasta    \n    dispatch(crudActions.SET_ADD_LOAD(xredux,'tareas',dato,'lista'))  \n  }\n  \n  const handleView = it => {       \n    let kko = {    \n      id      : it.event.id,    \n      title   : it.event.title,    \n      start   : it.event.start,\n      end     : it.event.start,\n      detalle   : it.event.extendedProps.detalle,\n      usuarioId : it.event.extendedProps.usuarioId,\n      backgroundColor : it.event.backgroundColor    \n    }     \n    dispatch({type:'TAREAS_ITEM',response:kko})  \n}\n\nuseEffect(() =>{            \n  makeHttpRequestWithPage('TAREAS_DATA','tareas');          \n  return () =>{            \n    dispatch({type:'TAREAS_RESET'})\n};\n}, []);\n\n\nreturn(\n  <div className=\"registroCalendario\">\n  <h6 className=\"ml-1 mt-2\" >Tareas</h6>  \n  <FullCalendar      \n     \t\tlocales={[ esLocale]}  \n     \t\tlocale= {'es'}\n        timeZone={'America/La_Paz'}\n        navLinks={true}\n        height={540}\n     \t\tplugins={[  dayGridPlugin, timeGridPlugin, interactionPlugin ]}\n        defaultView=\"dayGridMonth\"                        \n        header={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            }}\n     \t\tevents= { data }                                   \n        eventClick={handleView}        \n  />\n  </div>\n)\n}\n\n\nexport default Calendar","import React from \"react\";\nimport { Row, Col, Form, Label, Button, Input, FormGroup } from 'reactstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Select from 'react-select'  \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPlus, faEnvelope, faPhone, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { custom } from '../../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nimport { getMes, defaultVal } from \"../../../../helpers/funciones\";\nimport { tiposLlamada } from \"../../../../helpers/dataLoad\";\nregisterLocale('es', es)\n\n\nfunction FormTarea(){\n  const dispatch = useDispatch()    \n  const { item }  = useSelector(state => state.tareas)   \n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n\n\n  const changeHandler = event => {          \n    const { name, value } = event.target  \n    dispatch(crudActions.SET_CHANGE('TAREAS_CHANGE',name,value))   \n  }\n  const submitHandle = event => {       \n    event.preventDefault()   \n    const {desde, hasta} = getMes() \n    let iok = item\n    iok.usuarioId = usuario.id    \n    iok.end       = item.start\n    iok.inicio    = desde\n    iok.fin       = hasta    \n    iok.backgroundColor = item.backgroundColor\n    \n    if(item.id)\n    {\n      dispatch(crudActions.SET_UPDATE('TAREAS_ADD','tareas',iok,'unit'))            \n    }else{\n      dispatch(crudActions.SET_ADD_SINGLE('TAREAS_ADD','tareas',iok)) \n    }\n    \n\n  }\n  const onChange1 = (value) => {          \n    dispatch(crudActions.SET_CHANGE('TAREAS_CHANGE','start',value)) \n  }\n  const changesHandler = event => {                    \n    const {value} = event ? event : ''        \n    dispatch(crudActions.SET_CHANGE('TAREAS_CHANGE','backgroundColor',value))          \n  }\n  const handleNew = () => {                    \n    dispatch({type:'TAREAS_ITEM_RESET'}) \n  }\n \nreturn(\n    <div className=\"registroCalendario\">\n    <h6 className=\"ml-1 mt-2\" >Registro de tareas</h6>\n    <Row form>\n        <Col md={2}>\n          <Button className={ item.id ? \"btn-xs btn-warning mt-2\" :\"btn-xs btn-warning mt-2 disabled\"} \n            onClick={handleNew}>\n            <FontAwesomeIcon icon={faPlus} />\n          </Button>\n        </Col>        \n        <Col md={8}></Col>\n        <Col md={2}>\n          <Button             \n            className={item.title === '' ? \"btn-xs disabled btn-info mt-2\":\"btn-xs btn-info mt-2\"}\n            onClick={submitHandle}>\n            <FontAwesomeIcon icon={faSave} />\n          </Button>\n        </Col>\n    </Row>            \n    <Row form>\n        <Col md={12} className=\"mt-3\">   \n          <FormGroup>\n            <Label for=\"titulo\">Titulo</Label>\n              <Input\n                  id=\"title\"\n                  name=\"title\"                    \n                  type=\"text\"\n                  value={item.title || ''}\n                  onChange={ (e) => changeHandler(e)}                                 \n                  onInvalid={(e) => e.target.setCustomValidity('El campo titulo es obligatorio !')}\n                  onInput={(e) => e.target.setCustomValidity('')}\n                  required />\n          </FormGroup>\n        </Col>\n      </Row> \n      <Row form>\n        <Col md={12}>   \n          <FormGroup>\n            <Label for=\"detalle\">Detalle</Label>\n              <Input\n                  id=\"detalle\"\n                  name=\"detalle\"                    \n                  type=\"textarea\" \n                  value={item.detalle || ''}\n                  onChange={ (e) => changeHandler(e)}                                 \n                  onInvalid={(e) => e.target.setCustomValidity('El campo titulo es obligatorio !')}\n                  onInput={(e) => e.target.setCustomValidity('')}\n                  required />\n          </FormGroup>\n        </Col>\n      </Row> \n      <Row form>\n        <Col md={12}>\n          <FormGroup>\n            <Label for=\"eHasta\">Fecha : </Label>\n              <DatePicker \n                locale=\"es\" \n                selected={item.start} \n                onChange={(date) => onChange1(date)} \n              />            \n          </FormGroup>\n        </Col>\n      </Row>   \n      <Row form>\n        <Col md={12}>\n          <FormGroup>\n            <Label for=\"eTipo\">Tipo : </Label>\n            <Select                                                               \n              defaultValue={tiposLlamada[0]}\n              styles={custom} \n              name=\"backgroundColor\"    \n              id=\"backgroundColor\"                    \n              options={tiposLlamada}      \n              isClearable={false}                          \n              value={defaultVal(tiposLlamada,item.backgroundColor)}\n              onChange={ (e) => changesHandler(e)}  \n            />        \n          </FormGroup>\n        </Col>\n      </Row>    \n      <Row form>        \n        <Col md={12} className=\"linea\">\n         <p className=\"linear\"><FontAwesomeIcon icon={faEnvelope}/>     Email</p> \n         <p className=\"lineav\"><FontAwesomeIcon icon={faPhone} />     Llamada</p> \n         <p className=\"lineam\"><FontAwesomeIcon icon={faUsersCog } />     Reunion</p> \n        </Col>\n      </Row>  \n    </div>       \n  )\n}\n\n\nexport default FormTarea","import React,{useEffect} from \"react\";\nimport { Card, CardTitle, CardHeader, Row, Col  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'  \nimport { crudActions } from '../../actions'\nimport Calendar from \"./Tareas/components/Calendar\"\nimport FormTarea from \"./Tareas/components/FormTarea\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDollarSign, faUsers, faHeadset, faBookmark} from \"@fortawesome/free-solid-svg-icons\";\n\nconst InicioView = () => {\n  const dispatch = useDispatch()   \n  const { clienteT, cotizacionT, prospectoT, ticketT } = useSelector(state => state.informes)\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  let d = new Date()\n  let gestion = d.getFullYear()\n  \n  const makeHttpRequestWithPage = () =>{\n    let iok={\n      \"usuarioId\":usuario.id,\n      \"rolId\": usuario.rolId,\n      \"gestion\": gestion\n    }\n    dispatch(crudActions.GET_INFORMES('INFORMES_DASHBOARD_CLIENTE','clientcons',iok))      \n  }\n\n  useEffect(() => {\n    makeHttpRequestWithPage()\n    return () => {\n      dispatch({type:'INFORMES_RESET_CLIENTE'}) \n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">     \n      <Row className=\"mt-1\">           \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\"><FontAwesomeIcon icon={faUsers} /></div>\n              <CardTitle className=\"text-dark\"> CLIENTES </CardTitle>\n              <p>{clienteT}</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col>\n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\"><FontAwesomeIcon icon={faHeadset} /></div>\n              <CardTitle className=\"text-dark\"> TICKETS </CardTitle>\n              <p>{ticketT.total}</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col>\n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\"><FontAwesomeIcon icon={faBookmark} /></div>\n              <CardTitle className=\"text-dark\"> PROMOCIONES </CardTitle>\n              <p>{prospectoT.total}</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col>           \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-rojo\"><FontAwesomeIcon icon={faDollarSign} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b>{cotizacionT.total || '0'}</b> - COTIZACIONES</CardTitle>              \n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(cotizacionT.suma || '0')}</p>                                  \n              </CardHeader>\n          </Card>    \n          </Col> \n        </Row>         \n      <Row>\n        <Col md=\"3\">\n          <Card>\n            <FormTarea/>\n          </Card>\n        </Col>\n        <Col md=\"9\">\n          <Card>\n            <Calendar />\n          </Card>\n        </Col>               \n      </Row>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default InicioView;\n","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport Moment from 'react-moment'\nimport QRCode from \"qrcode.react\";\n\nconst fechaHoy = new Date()\n\nexport class ComponentToPrint extends React.PureComponent {   \n  render() {    \n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Kardex Cliente # <b>{this.props.data.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.data.nombres}</h5>\n             <h5 className=\"text-center pio\"> NIT : {this.props.data.nit}</h5>             \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body mt-2\">        \n        <Row>\n          <Col md={7} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                  <tr><td width=\"25%\"><b>Tipo Fiscal :</b></td>\n                      <td >{this.props.data.tipo}</td></tr>          \n                  <tr><td><b>Dirección :</b></td>\n                      <td>{this.props.data.direccion}</td></tr>          \n\n                  <tr><td><b>Pais :</b></td>\n                      <td >{this.props.data.pais}</td>\n                  </tr>          \n\n                  <tr><td><b>Ciudad :</b></td>\n                      <td >{this.props.data.ciudad}</td>\n                  </tr>          \n\n                  <tr><td><b>Contacto :</b></td>\n                      <td >{this.props.data.contacto}</td>\n                  </tr>\n\n                  <tr><td><b>Email :</b></td>\n                      <td >{this.props.data.email}</td>\n                  </tr>\n\n                  <tr><td><b>Web :</b></td>\n                      <td >{this.props.data.web}</td>\n                  </tr>\n\n                  <tr><td><b>Teléfono :</b></td>\n                      <td >{this.props.data.telefono}</td>\n                  </tr>          \n                  <tr><td colSpan=\"2\"><b>Observaciones :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.data.observaciones }</td></tr>                                      \n        </tbody>\n        </Table>\n          </Col>\n          <Col md={5} className=\"report-card\">\n            <Row>\n              <Col className=\"report-imagen\">\n                <img alt=\"cliente\" className=\"text-center reportimg\" src={api + '/static/images/clientes/lg/'+this.props.data.filename }/> \n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center report-qr\">\n                <QRCode value={'http://localhost:3000/clientes'+this.props.data.codigo} style={{  backgroundColor:'#fff', padding:5, border: 'solid 1px #eaeaea', marginRight: 5 }}/>\n              </Col>\n            </Row>                    \n          </Col>\n        </Row>\n\n        \n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"5\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"7\">           \n              <p>Fecha y hora de emisión: {'  '}\n              <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment> {'  '}\n              <Moment format=\"HH:mm:ss\">{fechaHoy}</Moment></p>\n            </Col>            \n          </Row>  \n                  \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction ClienteResumen () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.clientes)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n      dispatch({type:'CLIENTES_RESET_ITEM'})\n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            data={item}            \n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default ClienteResumen","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport Moment from 'react-moment'\n\n\n export class ComponentToPrint extends React.PureComponent {   \n  render() {    \n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Estado de Cuenta # <b>{this.props.aitem.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.aitem.nombres}</h5>\n             <h5 className=\"text-center pio\"> NIT : {this.props.aitem.nit}</h5>                          \n            </Col>            \n          </Row>\n          <Row>\n          <Col md={12} className=\"report-header mt-2\">                       \n            <Table className=\"table-reporteshs\">            \n            <tbody>\n              <tr>                                              \n                <td width=\"20%\"><b>Ventas Total :</b></td>\n                <td width=\"80%\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.atotal)}</td>                                             \n              </tr>\n              <tr>              \n                <td width=\"20%\"><b>Pagos Total :</b></td>\n                <td width=\"80%\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.apago)}</td>                                             \n              </tr>\n\n              <tr>\n                <td width=\"20%\"><b>Saldo Total :</b></td>\n                <td width=\"80%\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.asaldo)}</td>                                             \n              </tr>      \n              </tbody>           \n            </Table>                \n          </Col>      \n        </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={12} className=\"report-card\">          \n            <h4>Ventas</h4>  \n            <Table className=\"table-reporteshs\">\n            <thead>\n              <tr>                  \n                <th width=\"10%\">Fecha</th>\n                <th width=\"35%\">Detalle</th>\n                <th width=\"10%\">Tipo</th>\n                <th width=\"15%\">Total</th>\n                <th width=\"15%\">Pago</th>                \n                <th width=\"15%\">Saldo</th>                \n              </tr>\n          </thead>\n          {this.props.aitems && (\n              <tbody>\n                  {this.props.aitems.map((item, index) => (\n                      <tr key={index}>                                              \n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaVenta}</Moment></td>                                                                 \n                        <td>{ item.observaciones }</td>\n                        <td>{ item.tipo }</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.ventaTotal)}</td>                                             \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.pagoTotal)}</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.saldoTotal)}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}     \n            </Table>                \n          </Col>      \n        </Row>\n      \n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"5\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"7\">           \n              <p>Fecha y hora de emisión: {'  '}\n              <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment> {'  '}\n              <Moment format=\"HH:mm:ss\">{fechaHoy}</Moment></p>\n            </Col>            \n          </Row>  \n                  \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction ClienteSaldo () {    \nconst dispatch = useDispatch()\nconst { items, montoTotal, saldoTotal, pagoTotal, item } = useSelector(state => state.clientes)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'CLIENTES_RESET_SALDO'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            aitem={item}\n            aitems={items}\n            atotal={montoTotal}\n            apago={pagoTotal}\n            asaldo={saldoTotal}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default ClienteSaldo","import React,{useEffect, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customStyles } from '../../../../helpers/customStyles'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n            \n\nconst TableClientes = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas, indicador}= useSelector(state => state.clientes)\n   \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('CLIENTES_DATA','clientes',page, num,'nombres','ASC'))      \n  }\n\n \n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'CLIENTES_INDICADOR',value:iok}) \n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'CLIENTES_RESET_DATA'})\n      };\n  }, []);\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n              <thead>\n                  <tr>  \n                      <th width=\"5%\"></th>\n                      <th width=\"15%\">Código</th>\n                      <th width=\"50%\">Nombre</th>\n                      <th width=\"15%\">Tipo Fiscal</th>\n                      <th width=\"15%\">Nit</th>                                                  \n                  </tr>\n              </thead>\n              {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                           \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          />                       \n                        </td>                \n                        <td>{item.codigo}</td>\n                        <td>{item.nombres}</td>\n                        <td>{item.tipo}</td>\n                        <td>{item.nit}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>  \n          </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n</>      \n  )\n\n};\nexport default TableClientes;\n","import React,{useState} from \"react\";\nimport { ButtonGroup, Modal, ModalBody, Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDollarSign, faCheck, faSearch, faPlus, faFileExport, faUsers, faCopy, faTrash, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\nconst page =[{\"value\":'codigo',\"label\":'codigo'},\n             {\"value\":'nombres',\"label\":'nombres'},\n             {\"value\":'direccion',\"label\":'direccion'},\n             {\"value\":'nit',\"label\":'nit'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\nconst SearchClientes = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView, modalViews }= useSelector(state => state.clientes)\n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n\n    \n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n\n    \n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CLIENTES_DATA','clientes',iok))              \n     }  \n    \n    const onCopiar = () => {                  \n      dispatch(crudActions.SET_COPIAR('CLIENTES_DATA','clientes',indicador)) \n      dispatch({type:'CLIENTES_INDICADOR',value:0})\n    };\n  \n    const onBorrar = () => {            \n      dispatch(crudActions.GET_DELETE('CLIENTES_DATA','clientes',indicador,'lista'))      \n      dispatch({type:'CLIENTES_INDICADOR',value:0})\n      setview(false)\n\n    };\n\n    const viewArticulo = () => {        \n      let est = modalView === true ? false : true;             \n      dispatch({type:'CLIENTES_VIEW',view:est}) \n      dispatch(crudActions.GET_ITEM_COMPUESTO('CLIENTES_ITEM','clientes',indicador))\n    };   \n\n    const viewArticulos = () => {        \n      let est = modalViews === true ? false : true;             \n      dispatch({type:'CLIENTES_VIEWS',view:est}) \n      let dok ={\n        clienteId:indicador\n      }\n      dispatch(crudActions.GET_INFORMES('CLIENTES_SALDO','estadocuentas',dok))      \n    }; \n\n    const toggleModalView = () => {        \n      setview(!view)                  \n    };\n    \n    return ( \n      <>             \n      <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faUsers} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n            <FontAwesomeIcon icon={faFileExport} /></Button>\n          <Button className={indicador === 0 ? \"bts bg-default disabled text-white\": \"bts bg-default text-white\"} onClick={()=> onCopiar()}>\n            <FontAwesomeIcon icon={faCopy} /> </Button>\n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n            <FontAwesomeIcon icon={faTrash} /> </Button>                                \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n            <FontAwesomeIcon icon={faFilePdf} /> </Button>     \n          <Button className={indicador === 0 ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> viewArticulos()}>\n            <FontAwesomeIcon icon={faDollarSign} /> </Button>             \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } CLIENTES</p>          \n        </Col>\n      </Row>  \n\n\n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>    \n     \n                         \n    );\n};\nexport default SearchClientes;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\n\n\nconst ClienteImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.clientes) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"cliente\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n      \n      <div className=\"sub-form\">  \n      <h6>Fotografía</h6>\n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/clientes/md/\" + item.filename}\n        />}\n        </Col>\n      </Row> \n      { item.id ?     \n      <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6 mt-1\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n      </Row>\n      : null\n    }\n     </div>  \n      \n    \n    )\n}     \n  \nexport default ClienteImagen;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\n\n\nconst ClienteNit = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.clientes) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"clientenit\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n      \n      <div className=\"sub-form\">  \n      <h6>Registro Comercial (N.I.T.)</h6>\n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/clientesNit/md/\" + item.filenameNit}\n        />}\n        </Col>\n      </Row> \n      { item.id ?     \n      <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6 mt-1\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n      </Row>\n      : null\n    }\n     </div>  \n      \n    \n    )\n}     \n  \nexport default ClienteNit;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\n\n\nconst ClienteCi = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.clientes) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"clienteci\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n      \n      <div className=\"sub-form\">  \n      <h6>Carnet de Identidad</h6>\n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/clientesCi/md/\" + item.filenameCi}\n        />}\n        </Col>\n      </Row> \n      { item.id ?     \n      <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6 mt-1\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n      </Row>\n      : null\n    }\n     </div>  \n      \n    \n    )\n}     \n  \nexport default ClienteCi;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableVentasCliente = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(12);\n  const {data,pagina,paginas}= useSelector(state => state.ventaitems)\n  const { item }= useSelector(state => state.clientes)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  const makeHttpRequestWithPage = (page, num) =>{\n   dispatch(crudActions.GET_DATA('VENTAS_ITEM_DATA','ventaitems',page, num,item.id,'desc'))     \n  }\n\n const changeSelect = (pky) => {        \n   const {value} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {     \n     return () => {          \n     dispatch({type:'VENTAS_ITEM_RESET'}) \n     };\n }, []);\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>\n                <th width=\"10%\">Id</th>\n                <th width=\"10%\">Fecha</th>\n                <th width=\"50%\">Glosa</th>                  \n                <th width=\"20%\">Total</th>\n                <th width=\"10%\">Estado</th>\n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index}>                                            \n                      <td>{item.id}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fechaVenta}</Moment></td>                        \n                      <td>{item.observaciones}</td>\n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.total)}</td>\n                      <td>{item.estado }</td>                      \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TableVentasCliente;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TabPane, TabContent, Nav, NavItem, NavLink,Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport Select from 'react-select'  \nimport { crudActions } from '../../../../actions'\nimport { locations, ciudades } from \"../../../../helpers/locations\";\nimport { tipoCliente, grupoCliente } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { custom } from '../../../../helpers/customStyles'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft   } from \"@fortawesome/free-solid-svg-icons\";\nimport ClienteImagen from './ClienteImagen'\nimport ClienteNit from './ClienteNit'\nimport ClienteCi from './ClienteCi'\nimport TableVentasCliente from '../../../VENTAS/Ventas/components/TableVentasCliente'\n\n                    \nconst EditClientes = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.clientes)   \n    const [citys, setcitys] = useState([]);\n    const [iok1, setiok1] = useState(true);\n    const [iok2, setiok2] = useState(false);\n    const [iok3, setiok3] = useState(false);\n    const [tab, settab] = useState('1');\n\n    \n    const changeHandler = event => {          \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('CLIENTES_CHANGE',name,value))  \n    }\n\n    const changesHandler = (event,name) => {                       \n      const { value } = event ? event : ''              \n      dispatch(crudActions.SET_CHANGE('CLIENTES_CHANGE',name,value))          \n    }\n\n\n      \n    const changesPaises = event => {                  \n      const {value, indice} = event ? event : ''                  \n      dispatch(crudActions.SET_CHANGE('CLIENTES_CHANGE','pais',value))   \n      let datc = ciudades.filter(d => (d.indice === indice) )  \n      setcitys(datc)\n  }\n\n    \n   \n  \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('CLIENTES_ADD','clientes',item,'unit'))            \n        }else{\n          dispatch(crudActions.SET_ADD('CLIENTES_ADD','clientes',item,'unit'))           \n        }            \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'CLIENTES_RESET_ITEM'})        \n      };\n    }, []); \n\n    const setChange = (kit) =>{ \n      switch(kit){\n        case '1':\n          setiok1(true)\n          setiok2(false)\n          setiok3(false)\n          settab('1') \n          break;\n        case '2':\n          setiok1(false)\n          setiok2(true)\n          setiok3(false)\n          settab('2') \n          break;\n        case '3':\n          setiok1(false)\n          setiok2(false)\n          setiok3(true)\n          settab('3') \n          break;        \n        default:\n          break;  \n      }      \n    }\n    return (              \n      <>\n     <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA CLIENTES\n          </Button>              \n        </Col>  \n      </Row>\n      <Row>      \n        <Col>\n        <div className=\"nav-sunitys\" expand=\"lg\">            \n               <Nav tabs>\n                <NavItem>\n                  <NavLink className={iok1 ? 'active':''}  onClick={ () => {setChange('1')}} >\n                   Datos Generales\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok2 ? 'active':''}  onClick={ () => {setChange('2')}} >\n                    Imagenes\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok3 ? 'active':''}  onClick={ () => {setChange('3')}} >\n                    Ventas \n                  </NavLink>\n                </NavItem>\n              </Nav>\n              </div>\n        </Col>          \n      </Row>\n\n      <Row>      \n       <Col>\n        <Card>\n          <CardBody>\n          <TabContent activeTab={tab}>\n            <TabPane tabId=\"1\">\n            <Form onSubmit={ submitHandle} className=\"mb-3\">   \n                <Row form>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"fcodigo\">Código</Label>\n                      <Input\n                        id=\"codigo\"\n                        name=\"codigo\"                    \n                        type=\"text\"\n                        value={item.codigo || ''}\n                        onChange={ (e) => changeHandler(e)}                                 \n                        onInvalid={(e) => e.target.setCustomValidity('El campo código es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                      />\n                    </FormGroup>\n                  </Col> \n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"fnit\">Nit</Label>\n                      <Input\n                        id=\"nit\"\n                        name=\"nit\"                    \n                        type=\"text\"\n                        value={item.nit || ''}\n                        onChange={ (e) => changeHandler(e)}                                 \n                        onInvalid={(e) => e.target.setCustomValidity('El campo nit es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                      />\n                    </FormGroup>\n                  </Col> \n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"fnombres\">Nombres</Label>\n                      <Input\n                        id=\"nombres\"\n                        name=\"nombres\"                    \n                        type=\"text\"\n                        value={item.nombres || ''}\n                        onChange={ (e) => changeHandler(e)}                                 \n                        onInvalid={(e) => e.target.setCustomValidity('El campo nombres es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                      />\n                    </FormGroup>\n                  </Col>  \n                </Row>  \n\n                <Row form>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"fregistro\">Fecha Registro</Label>\n                      <Input\n                        id=\"createdAt\"\n                        name=\"createdAt\"\n                        type=\"date\"\n                        value={item.createdAt || ''}\n                        onChange={ (e) => changeHandler(e)}                        \n                        readOnly={true}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"ftipo\"> Tipo </Label>\n                        <Select                                                               \n                          defaultValue={tipoCliente[0]}\n                          styles={custom} \n                          name=\"tipo\"    \n                          id=\"tipo\"                    \n                          options={tipoCliente}      \n                          isClearable={false}                          \n                          value={defaultVal(tipoCliente,item.tipo)}\n                          onChange={ (e) => changesHandler(e,'tipo')}/>\n                    </FormGroup>\n                  </Col>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"fgrupo\"> Grupo </Label>\n                        <Select                                                               \n                          defaultValue={grupoCliente[0]}\n                          styles={custom} \n                          name=\"grupo\"    \n                          id=\"grupo\"                    \n                          options={grupoCliente}      \n                          isClearable={false}                          \n                          value={defaultVal(grupoCliente,item.grupo)}\n                          onChange={ (e) => changesHandler(e,'grupo')}/>\n                    </FormGroup>\n                  </Col>\n                </Row>  \n                <Row form>\n                  <Col md={3}>\n                  <FormGroup>\n                    <Label for=\"ftelefono\">Teléfono</Label>\n                    <Input\n                      id=\"telefono\"\n                      name=\"telefono\"                    \n                      type=\"text\"\n                      value={item.telefono || ''}\n                      onChange={ (e) => changeHandler(e)}\n                      onInvalid={(e) => e.target.setCustomValidity('El campo teléfono es obligatorio !')}\n                      onInput={(e) => e.target.setCustomValidity('')}\n                      required  \n                      placeholder=\"(00)-000000\"\n                    />\n                  </FormGroup>\n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"fcelular\">Celular</Label>\n                      <Input\n                        id=\"celular\"\n                        name=\"celular\"                    \n                        type=\"text\"\n                        value={item.celular || ''}\n                        onChange={ (e) => changeHandler(e)}\n                        onInvalid={(e) => e.target.setCustomValidity('El campo celular es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required  \n                        placeholder=\"(00)-000000\"/>\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                  <FormGroup>\n                      <Label for=\"fpersonac\">Persona Contacto</Label>\n                      <Input\n                        id=\"personaContacto\"\n                        name=\"personaContacto\"                    \n                        type=\"text\"\n                        value={item.personaContacto || ''}\n                        onChange={ (e) => changeHandler(e)}                        \n                        />\n                    </FormGroup>\n                  </Col>\n                </Row>  \n                <Row form>\n                  <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"fdireccion\">Dirección</Label>\n                    <Input\n                      id=\"direccion\"\n                      name=\"direccion\"                    \n                      type=\"text\"\n                      value={item.direccion || ''}\n                      onChange={ (e) => changeHandler(e)}                              \n                    />\n                  </FormGroup>\n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"fpais\">Pais</Label>\n                      <Select                                                               \n                        defaultValue={locations[0]}\n                        styles={custom} \n                        name=\"pais\"    \n                        id=\"pais\"                    \n                        options={locations}                                               \n                        value={defaultVal(locations,item.pais)}   \n                        onChange={ (e) => changesPaises(e)}/>\n                    </FormGroup>\n                  </Col>\n                  <Col md={3}>\n                  <FormGroup>\n                      <Label for=\"fciudad\">Ciudad</Label>\n                      <Select                                                               \n                        defaultValue={citys[0]}\n                        styles={custom} \n                        name=\"ciudad\"    \n                        id=\"ciudad\"                    \n                        options={citys}                                                 \n                        value={defaultVal(ciudades,item.ciudad)}     \n                        onChange={ (e) => changesHandler(e,'ciudad')}/>\n                    </FormGroup>\n                  </Col>\n                </Row> \n                <Row form>\n                  <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"fcuenta\">Cuenta Bancaria</Label>\n                    <Input\n                      id=\"cuentaBancario\"\n                      name=\"cuentaBancario\"                    \n                      type=\"text\"\n                      value={item.cuentaBancario || ''}\n                      onChange={ (e) => changeHandler(e)}/>\n                  </FormGroup>\n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"femail\">Email</Label>\n                      <Input\n                      id=\"email\"\n                      name=\"email\"                    \n                      type=\"text\"\n                      value={item.email || ''}\n                      onChange={ (e) => changeHandler(e)}/>\n                      \n                    </FormGroup>\n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"fweb\">Web</Label>\n                      <Input\n                      id=\"web\"\n                      name=\"web\"                    \n                      type=\"text\"\n                      value={item.web || ''}\n                      onChange={ (e) => changeHandler(e)}/>                     \n                    </FormGroup>\n                  </Col>\n                </Row> \n                  <FormGroup>\n                      <Label for=\"fobservaciones\">Observaciones</Label>\n                      <Input\n                      id=\"observaciones\"\n                      name=\"observaciones\"                    \n                      type=\"textarea\"\n                      value={item.observaciones || ''}\n                      onChange={ (e) => changeHandler(e)}/>                     \n                  </FormGroup>\n\n                <Row form>\n                  <Col md={2}>            \n                      <Button \n                        type=\"submit\"\n                        className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                        <FontAwesomeIcon icon={faSave} />  \n                        {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                      </Button>\n                  </Col>\n                </Row> \n            </Form>\n          </TabPane>  \n          <TabPane tabId=\"2\">\n              <Row>\n                <Col md=\"4\">\n                  <ClienteImagen/>\n                </Col>\n                <Col md=\"4\">\n                  <ClienteNit/>\n                </Col>\n                <Col md=\"4\">\n                  <ClienteCi/>\n                </Col>\n              </Row>\n          </TabPane>\n            \n          <TabPane tabId=\"3\">\n              <TableVentasCliente/>\n            </TabPane>\n          </TabContent> \n          </CardBody>\n        </Card>  \n       </Col>\n      </Row>  \n    </>\n    );\n};\nexport default EditClientes;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../actions'\nimport ClienteResumen from \"./components/ClienteResumen\";\nimport ClienteSaldo from \"./components/ClienteSaldo\";\nimport TableClientes from \"./components/TableClientes\";\nimport SearchCliente from \"./components/SearchCliente\";\nimport EditCliente from \"./components/EditCliente\";\n\nconst ClienteView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView, modalViews } = useSelector(state => state.clientes)  \n \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'CLIENTES_VIEW',view:est})  \n                 \n  };\n\n  const toggleModalViews = () => {    \n    let est = modalViews === true ? false : true;             \n    dispatch({type:'CLIENTES_VIEWS',view:est})  \n                 \n  };\n\n  const getComponent = useCallback((io, key) =>{        \n      switch(io){\n        case 'data':\n          setComponent(<><SearchCliente getComponent={getComponent}/><TableClientes getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'CLIENTES_RESET_ITEM'}) \n          setComponent(<EditCliente getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_COMPUESTO('CLIENTES_ITEM','clientes',key)) \n          setComponent(<EditCliente getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n    return () => {\n     /* console.log('exit clients view')*/\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">             \n          {component}          \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ClienteResumen/>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={modalViews} toggle={toggleModalViews}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViews()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ClienteSaldo/>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default ClienteView;\n","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport Moment from 'react-moment'\n\nconst fechaHoy = new Date()\n export class ComponentToPrint extends React.PureComponent {\n   \n  render() {    \n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Ticket # <b>{this.props.pitem.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.pitem.tipo}</h5>\n             <h5 className=\"text-center pio\"> FECHA : {this.props.pitem.fechaRegistro}</h5>             \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={12} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                  <tr><td width=\"25%\"><b>Cliente :</b></td>\n                      <td >{this.props.pitem.clients}</td></tr>          \n                  <tr><td><b>Estado :</b></td>\n                      <td >{this.props.pitem.estado}</td>\n                  </tr> \n                  <tr><td><b>Usuario :</b></td>\n                      <td >{this.props.pitem.usuario.nombres}</td>\n                  </tr>         \n                  <tr><td colSpan=\"2\"><b>Detalle :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.pitem.detalle }</td></tr>                                      \n              </tbody>\n            </Table>\n          </Col>  \n        </Row>  \n       \n        <Row>  \n          <Col>\n        <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\">Id</th>\n                <th width=\"10%\">Fecha</th>                                \n                <th width=\"85%\">Descripción</th>                \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n                  {this.props.data.map((item, index) => (\n                      <tr key={item.id}>                      \n                        <td>{index+1}</td>\n                        <td>{item.fecha}</td>                                                                                                                                                              \n                        <td>{item.descripcion}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>\n            </Col>\n        </Row>   \n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction TicketResumen () {    \nconst dispatch = useDispatch()\nconst { item, items } = useSelector(state => state.tickets)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'TICKETS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            pitem={item}\n            data={items}\n            user={usuario}            \n        />\n    </div>\n     )\n}\n\n\nexport default TicketResumen","import React,{useEffect, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customStyles } from '../../../../helpers/customStyles'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n   \n\nconst TableTickets = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas, indicador}= useSelector(state => state.tickets)\n   \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('TICKETS_DATA','tickets',page, num,'id','ASC'))      \n  }\n\n \n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'TICKETS_INDICADOR',value:iok}) \n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'TICKETS_RESET_DATA'})\n      };\n  }, []);\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n              <thead>\n                  <tr>  \n                      <th width=\"5%\"></th>                      \n                      <th width=\"15%\">Fecha Registro</th>\n                      <th width=\"15%\">Cliente</th>\n                      <th width=\"45%\">Detalle</th>                                                   \n                      <th width=\"10%\">Estado</th>    \n                      <th width=\"10%\">Fecha Cierre</th>                                       \n                  </tr>\n              </thead>\n              {data && (\n              <tbody>\n                  {data.map((item,index) => (\n                      <tr key={index}>                           \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          />                       \n                        </td>                                        \n                        <td>{item.fechaRegistro}</td>\n                        <td>{item.clients}</td>\n                        <td>{item.detalle}</td>\n                        <td>{item.estado}</td>\n                        <td>{item.fechaCierre}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>  \n          </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n</>      \n  )\n\n};\nexport default TableTickets;\n","import React,{useState} from \"react\";\nimport { ButtonGroup, Modal, ModalBody, Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faSearch, faPlus, faFileExport, faUsers, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\n\nconst page =[{\"value\":'descripcion',\"label\":'descripcion'},\n             {\"value\":'clients',\"label\":'cliente'}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\nconst SearchTickets = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView }= useSelector(state => state.tickets)\n    const [prop, setProp] = useState('clients');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n\n    \n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n\n    \n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('TICKETS_DATA','tickets',iok))              \n     }  \n    \n    const onCopiar = () => {                  \n      dispatch(crudActions.SET_COPIAR('TICKETS_DATA','tickets',indicador)) \n      dispatch({type:'TICKETS_INDICADOR',value:0})\n    };\n  \n    const onBorrar = () => {            \n      dispatch(crudActions.GET_DELETE('TICKETS_DATA','tickets',indicador,'lista'))      \n      dispatch({type:'TICKETS_INDICADOR',value:0})\n      setview(false)\n\n    };\n\n    const viewArticulo = () => {        \n      let est = modalView === true ? false : true;             \n      dispatch({type:'TICKETS_VIEW',view:est}) \n      dispatch(crudActions.GET_ITEM('TICKETS_ITEM','tickets',indicador))\n    };   \n\n    const toggleModalView = () => {        \n      setview(!view)                  \n    };\n    \n    return ( \n      <>             \n      <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faUsers} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n            <FontAwesomeIcon icon={faFileExport} /></Button>\n                                        \n          <Button className={indicador === 0 ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> viewArticulo()}>\n            <FontAwesomeIcon icon={faFilePdf} /> </Button>               \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } TICKETS</p>          \n        </Col>\n      </Row>  \n\n\n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>    \n     \n                         \n    );\n};\nexport default SearchTickets;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport {  \n    Row,\n    Col,\n    Card,\n    CardBody,\n    Form,\n    Button, FormGroup, Input, Label, Modal, ModalBody, Table\n  } from \"reactstrap\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport SearchCliente from \"./SearchCliente\";\n\nconst TicketCliente = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.clientes) \n    const itt  = useSelector(state => state.tickets.item) \n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };\n\n    const asignar = (item) => {    \n        let est = modalView === true ? false : true;                     \n        dispatch({type: 'TICKETS_CHANGE', props: 'clienteId', value: item.id})\n        dispatch({type: 'TICKETS_CHANGE', props: 'clients', value: item.nombres})        \n        setmodalView(est)  \n        dispatch({type:'CLIENTES_RESET_DATA'})             \n    };\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CLIENTES_DATA','clientes',iok))              \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'CLIENTES_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={10}>        \n             <FormGroup>\n              <Label for=\"clients\">Cliente</Label>\n              <Input type=\"text\" name=\"clients\" id=\"clients\" \n                    value={itt.clients}\n                    readOnly={true}/>              \n             </FormGroup>       \n            </Col>            \n            <Col md={2}>        \n            <Button className=\"btn-rd btn-info mt-3\" onClick={() => toggleModalView()}>\n                <FontAwesomeIcon icon={faSearch} />                          \n            </Button>\n          </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"15%\">Id</th>\n                            <th width=\"45%\">Nombres</th>\n                            <th width=\"15%\">Dirección</th>\n                            <th width=\"15%\">Nit</th>            \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                      \n                                    <td>{item.id}</td>\n                                    <td>{item.nombres}</td>\n                                    <td>{item.direccion}</td>\n                                    <td>{item.nit}</td>                                                       \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}                           >\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default TicketCliente;\n","import React,{useState} from \"react\";\nimport { Form, FormGroup, Label, Table, Row, Col, Button, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave   } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ItemsTickets = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   let fecha = new Date()\n   const {item, items,ipagina,ipaginas}= useSelector(state => state.tickets)         \n   const [detalle, setdetalle] = useState(\"\");\n\n   const submitHandle = event => {       \n    event.preventDefault()              \n    let loki = {\n        descripcion: detalle,\n        ticketId: item.id,\n        fecha : fecha\n    }\n    dispatch(crudActions.SET_ADD('TICKETS_ITEMS_ADD','ticketsitem',loki,'unit'))                 \n    setdetalle('')\n   } \n\n   const makeHttpRequestWithPage = (page,num) => {  \n    dispatch(crudActions.GET_DATA('TICKETS_ITEMS_ADD','ticketsitem',page, num,item.id,item.id))  \n  }\n \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Form onSubmit={ submitHandle}>   \n            <Row form>                        \n                <Col md={10}>\n                          <FormGroup>\n                            <Label for=\"codigo\">\n                              Descripción\n                            </Label>\n                            <Input\n                              id=\"detalle\"\n                              name=\"detalle\"                    \n                              type=\"textarea\"\n                              value={detalle}\n                              onChange={ (e) => setdetalle(e.target.value)}                                 \n                              onInvalid={(e) => e.target.setCustomValidity('El campo código es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required \n                            />\n                          </FormGroup>\n                </Col>\n                <Col md={2}>            \n                    <Button \n                       type=\"submit\"\n                       className={detalle ?\"btn-md btn-warning mt-3\" : \"btn-md btn-info mt-3\"}>\n                        <FontAwesomeIcon icon={faSave} />  \n                        Registrar\n                    </Button>\n                </Col>\n            </Row>    \n        </Form>    \n      </Col>\n    </Row>  \n    <Row>\n      <Col>      \n        <Table className=\"table-simple\">\n              <thead>\n                  <tr>  \n                      <th width=\"5%\">#</th>                      \n                      <th width=\"10%\">Fecha</th>\n                      <th width=\"85%\">Descripción</th> \n                  </tr>\n              </thead>\n              {items && (\n              <tbody>\n                  {items.map((item) => (\n                      <tr key={item.id}>                                                                 \n                        <td>{item.id}</td>\n                        <td>{item.fecha}</td>\n                        <td>{item.descripcion}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>  \n        \n      </Col>\n    </Row>  \n    <Row>  \n        <Col md={6} >\n            <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={ipaginas}\n                    current= {ipagina} \n                    pagina= {pag}\n            />\n        </Col>          \n    </Row>\n</>      \n  )\n\n};\nexport default ItemsTickets;\n","import React,{ useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport Select from 'react-select'  \nimport { crudActions } from '../../../../actions'\nimport TicketCliente from '../../Clientes/components/TicketCliente'\nimport { custom } from '../../../../helpers/customStyles'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft   } from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport ItemsTickets from \"./ItemsTickets\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\n\nconst tipos     = [\n                  {\"value\":\"llamada\",\"label\":\"llamada\"},\n                  {\"value\":\"reclamo\",\"label\":\"reclamo\"},\n                  {\"value\":\"soporte\",\"label\":\"soporte\"},                  \n                  {\"value\":\"servicio\",\"label\":\"servicio\"}                  \n                  ];\n\nconst estados   = [\n                    {\"value\":\"abierto\",\"label\":\"abierto\"},\n                    {\"value\":\"anulado\",\"label\":\"anulado\"},\n                    {\"value\":\"cerrado\",\"label\":\"cerrado\"},\n                    {\"value\":\"rechazado\",\"label\":\"rechazado\"},                  \n                    {\"value\":\"servicio\",\"label\":\"servicio\"}                  \n                    ];                  \n                     \nconst EditTickets = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.tickets)       \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    \n    const changeHandler = event => {          \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('TICKETS_CHANGE',name,value))  \n    }\n      \n    const changesHandler = event => {                    \n        const {value} = event ? event : ''        \n        dispatch(crudActions.SET_CHANGE('TICKETS_CHANGE','tipo',value))          \n    }\n\n    const changetHandler = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('TICKETS_CHANGE','estado',value))          \n  }\n  \n    const submitHandle = event => {       \n        event.preventDefault()      \n        let loki = item\n        loki.usuarioId = usuario.id  \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('TICKETS_ADD','tickets',loki,'unit'))        \n        }else{\n          dispatch(crudActions.SET_ADD('TICKETS_ADD','tickets',loki,'unit'))           \n        }            \n        console.log(item)\n     }  \n    useEffect(() => {      \n      return () => {\n       /* dispatch({type:'TICKETS_RESET_ITEM'})        */\n      };\n    }, []); \n\n    const onChange1 = (value) => {          \n      console.log(value)\n      dispatch(crudActions.SET_CHANGE('TICKETS_CHANGE','fechaRegistro',value)) \n    }\n\n\n     \n    return (              \n      <>\n      <Row>\n      <Col>\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"7\">\n               <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n                 <FontAwesomeIcon icon={faArrowLeft} /> LISTA TICKETS\n               </Button>\n               </Col> \n               \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n\n      <Row>\n        <Col md={4}>\n          <Card className=\"registroTicket\">   \n          <TicketCliente/>     \n          <Form onSubmit={ submitHandle}>   \n                      <Row form>                        \n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"codigo\">\n                              Código\n                            </Label>\n                            <Input\n                              id=\"codigo\"\n                              name=\"codigo\"                    \n                              type=\"text\"\n                              value={item.codigo || ''}\n                              onChange={ (e) => changeHandler(e)}                                 \n                              onInvalid={(e) => e.target.setCustomValidity('El campo código es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required \n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"tipo\">\n                              Tipo\n                            </Label>\n                              <Select                                                               \n                                defaultValue={tipos[0]}\n                                styles={custom} \n                                name=\"tipo\"    \n                                id=\"tipo\"                    \n                                options={tipos}      \n                                isClearable={false}                          \n                                value={defaultVal(tipos,item.tipo)}\n                                onChange={ (e) => changesHandler(e)}      \n                                \n                              />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row form>                        \n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"nombres\">\n                              Fecha Registro\n                            </Label>\n                            { item.id ? \n                             <Input\n                             id=\"fechaRegistro\"\n                             name=\"fechaRegistro\"                    \n                             type=\"text\"\n                             value={item.fechaRegistro}                             \n                             readOnly={true}\n                           />: \n                            <DatePicker \n                              locale=\"es\" \n                              selected={item.fechaRegistro || ''} \n                              onChange={(date) => onChange1(date)} \n                            />}                    \n                          </FormGroup>\n                        </Col>   \n                       \n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"estado\">\n                              Estado\n                            </Label>\n                              <Select                                                               \n                                defaultValue={estados[0]}\n                                styles={custom} \n                                name=\"estado\"    \n                                id=\"estado\"                    \n                                options={estados}      \n                                isClearable={false}                          \n                                value={defaultVal(estados,item.estado)}\n                                onChange={ (e) => changetHandler(e)}      \n                                \n                              />\n                          </FormGroup>\n                        </Col>        \n                      </Row>\n                      <Row form>\n                      <Col md={12}>\n                          <FormGroup>\n                            <Label for=\"detalle\"> Detalle     </Label>\n                            <Input\n                              id=\"detalle\"\n                              name=\"detalle\"                    \n                              type=\"textarea\"\n                              value={item.detalle || ''}\n                              onChange={ (e) => changeHandler(e)}\n                            />\n                        </FormGroup>\n                        </Col>                                  \n                      </Row>\n                      <Row form>\n                        <Col md={4}>            \n                            <Button \n                              type=\"submit\"\n                              className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                              <FontAwesomeIcon icon={faSave} />  \n                              {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                            </Button>\n                        </Col>\n                      </Row>              \n            </Form>\n          </Card>\n        </Col>          \n        <Col md={8}>\n          <Card className=\"registroTicket\">      \n             <ItemsTickets/>                 \n          </Card>\n        </Col>          \n      </Row>\n    </>\n    );\n};\nexport default EditTickets;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../actions'\nimport TicketsResumen from \"./components/TicketsResumen\";\nimport TableTickets from \"./components/TableTickets\";\nimport SearchTickets from \"./components/SearchTickets\";\nimport EditTickets from \"./components/EditTickets\";\n\nconst TicketsView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView } = useSelector(state => state.tickets)  \n \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'TICKETS_VIEW',view:est})  \n                 \n  };\n\n  const getComponent = useCallback((io, key) =>{        \n      switch(io){\n        case 'data':\n          setComponent(<><SearchTickets getComponent={getComponent}/><TableTickets getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'TICKETS_RESET_ITEM'}) \n          setComponent(<EditTickets getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM('TICKETS_ITEM','tickets',key)) \n          setComponent(<EditTickets getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n    return () => {\n     /* console.log('exit clients view')*/\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">             \n          {component}          \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <TicketsResumen/>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default TicketsView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\n\nconst TableCotizaciones = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15);\n  const {data,pagina,paginas,indicador }= useSelector(state => state.cotizaciones)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  const makeHttpRequestWithPage = (page, num) =>{\n   dispatch(crudActions.GET_DATA('COTIZACIONES_DATA','cotizaciones',page, num,'id','desc'))   \n  }\n\n const changeSelect = (pky) => {        \n   const {value} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {\n  makeHttpRequestWithPage(1,pag)\n     return () => {\n      dispatch({type:'COTIZACIONES_RESET_DATA'})   \n     };\n }, []);\n\n const setIndicador = (pky,est,monto) => {            \n   let iok = pky === indicador  ? 0 : pky\n   dispatch({type:'COTIZACIONES_INDICADOR',value:iok,estado:est,indicadorTotal:monto}) \n };\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>  \n\n                <th width=\"5%\"></th>\n                <th width=\"5%\">Id</th>\n                <th width=\"10%\">Fecha</th>\n                <th width=\"40%\">Glosa</th>                  \n                <th width=\"10%\">Total</th>\n                <th width=\"10%\">Estado</th>\n                <th width=\"20%\">Cliente</th>                                \n                \n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index} >                      \n                      <td >                       \n                      <Input type=\"checkbox\" \n                      onChange={() => { setIndicador(item.id, item.estado, item.total) }} \n                      checked={ item.id === indicador ? true : false}\n                      /></td>\n                      <td>{item.id}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fechaVenta}</Moment></td>                        \n                      <td>{item.observaciones}</td>\n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                      <td>{item.estado }</td>\n                      <td>{item.cliente}</td>                      \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TableCotizaciones;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n        <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Cotización # {this.props.dato.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha : <Moment format=\"DD-MM-YYYY\">{this.props.dato.fechaCotizacion}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Hora : <Moment format=\"HH:mm:ss\">{this.props.dato.createdAt}</Moment></h5>             \n              <h5 className=\"text-center pio\"> {this.props.dato.estado}</h5> \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">  \n        <Row >  \n          <Col> \n          <h3>{this.props.empresa.labelCotizacion} </h3>          \n          </Col>\n        </Row>\n        <Row >\n          <Col md={12} className=\"mt-2\">\n          <h4>Detalle</h4>  \n          <Table className=\"table-reporteh\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{this.props.dato.nroItems}</td>                                                            \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalGeneral)}</td>                                        \n                </tr>           \n                <tr>                                          \n                  <td><b>Cliente : </b></td>\n                  <td>{this.props.dato.clients || ''} </td>\n                  <td><b>Descuento : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.descuento)}</td>\n                </tr>\n                <tr>                                          \n                  <td><b>Forma de Pago : </b></td>\n                  <td>{this.props.dato.formaPago || ''} </td>\n                                                        \n                  <td><b>Forma de Entrega : </b></td>\n                  <td>{this.props.dato.formaEntrega || ''} </td>\n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"5\">{ this.props.dato.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <h4>Items</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>  \n              <th width=\"15%\">Código</th>\n                <th width=\"45%\">Nombre</th>                                \n                <th width=\"10%\">Precio</th>\n                <th width=\"10%\">Cantidad</th>\n                <th width=\"20%\">Sub-Total</th>                                          \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n              {this.props.data.map((item, index) => (\n                  <tr key={item.articuloId}>                      \n                    <td>{item.codigo}</td>\n                    <td>{item.nombre}</td>                                                                                     \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>                     \n                    <td className=\"text-center\">{item.cantidad} ({item.unidad})</td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor * item.cantidad)}</td>\n                  </tr>  \n\n                  ))}\n                  <tr> \n                    <td colSpan=\"4\" className=\"text-right\"><b>Sub-Total </b></td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.subTotal)}</td>                                        \n                  </tr> \n                  <tr>                     \n                    <td colSpan=\"4\" className=\"text-right\"><b>Impuesto </b></td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.impuesto)}</td>\n                  </tr> \n                  <tr>                     \n                    <td colSpan=\"4\" className=\"text-right\"><b>Total </b></td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalGeneral)}</td>\n                  </tr> \n                  <tr>                     \n                    <td colSpan=\"4\" className=\"text-right\"><b>Total - Descuento</b></td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalDescuento)}</td>\n                  </tr> \n          </tbody>\n          )}\n            </Table>\n          </Col>      \n        </Row> \n\n        <Row>           \n          <Col>\n          <h3><b>Garantias :</b> {this.props.empresa.garantiaCotizacion} </h3>\n          <h3><b>Politicas:</b> {this.props.empresa.politicaCotizacion} </h3>\n          </Col>      \n        </Row>         \n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha/Hora emisión: <Moment format=\"DD/MM/YYYY HH:mm:ss\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n     </> \n    );\n  }\n}\n\n\nfunction VentaResumen () {    \n  const dispatch = useDispatch()\n  const { item, items } = useSelector(state => state.cotizaciones)\n  const  iempresa = useSelector(state => state.empresa.item)\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const componentRef = useRef();     \n  useEffect(() =>{        \n      return () =>{            \n          dispatch({type:'VENTAS_RESET_ITEMS'}) \n          dispatch({type:'VENTAS_RESET_ITEM'}) \n      };\n    }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}            \n            empresa={iempresa}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default VentaResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, Modal, ModalBody, FormGroup, Input, Label, Card  } from \"reactstrap\"\nimport { crudActions, mailActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faCheck, faReceipt, faEdit, faSearch, faPlus , faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport CotizacionResumen from \"./CotizacionResumen\";\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'cliente',\"label\":'cliente'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchVenta = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, estado}= useSelector(state => state.cotizaciones)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);    \n    const [viewz, setviewz] = useState(false);\n    const [viewy, setviewy] = useState(false);\n    const [nombres, setnombres] = useState(\"\");\n    const [email, setemail] = useState(\"\");\n    const [observaciones, setobservaciones] = useState(\"\");\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n      setValue('')\n    };\n        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('COTIZACIONES_DATA','cotizaciones',iok))              \n   }  \n  \n    const createHandle = () => { \n      let eItem = {                            \n          clients:'sin cliente',                    \n          observaciones:'cotizacion nueva - sin items',               \n          usuarioId : usuario.id,\n          nroItems : 0,\n          total : 0\n    \n      }\n      dispatch(crudActions.SET_ADD('COTIZACIONES_DATA','cotizaciones',eItem,'lista'))      \n      dispatch({type:'COTIZACIONES_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})                                           \n   }\n\n   const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('COTIZACIONES_DATA','cotizaciones',indicador,'lista'))      \n    dispatch({type:'COTIZACIONES_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setview(false)\n\n  };\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)                   \n  };\n  const toggleModalViewy = () => {        \n    setviewy(!viewy)                   \n  };\n\n  const viewArticulo = () => {                   \n\n    dispatch(crudActions.GET_ITEM('COTIZACIONES_ITEM','cotizaciones',indicador))\n    setviewz(!viewz)\n  }; \n\n\n\nconst enviar = event => {    \n  event.preventDefault()             \n  let dato ={\n    cotizacionId: indicador,\n    clienteId:2,\n    email: email,\n    nombres : nombres,\n    observaciones: observaciones\n  }\n  dispatch(mailActions.SEND_MAIL('mails/sendcotizacion',dato))\n  dispatch({type:'COTIZACIONES_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n  setnombres('')\n  setobservaciones('')\n  setemail('')\n  setviewy(false)\n  \n};\n    return (                                      \n      <>  \n      <Card>        \n      <Row>        \n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faReceipt} className=\"ml-1 \"/>  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">                \n            <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  onClick={()=> createHandle()}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n            <Button className={indicador === 0  || estado === 'cerrado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                  <FontAwesomeIcon icon={faEdit} /></Button>            \n                                        \n            <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n                <FontAwesomeIcon icon={faFilePdf} /> </Button>         \n            <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewy()} >\n               <FontAwesomeIcon icon={faEnvelope} /></Button>     \n        </Col>                 \n        \n        <Col md={1} className=\"cards text-right\">\n                 <Select                 \n                        styles={customs}                                              \n                        defaultValue={page[0]}\n                        name=\"prop\"    \n                        id=\"prop\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,prop)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n        </Col>                \n        \n        <Col md={4} className=\"cards\">                \n                  <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                      type=\"text\" \n                      name=\"value\"                                 \n                      id=\"value\"  \n                      value={ value || '' }  \n                      onChange={ (e) => {setValue(e.target.value)}} />\n                      {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    }\n                                      \n                    </Col>    \n                    <Button  className=\"btn-primary \" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                  </Form>               \n        </Col>  \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } COTIZACIONES</p>          \n        </Col>  \n      </Row>\n      </Card> \n\n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n           <CotizacionResumen/>         \n          </ModalBody>\n      </Modal>\n      <Modal isOpen={viewy} toggle={toggleModalViewy}>  \n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewy()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Card>\n            <h6>Enviar cotización</h6>\n          <Form onSubmit={ enviar}>   \n          <Row>                       \n              <Col md={6}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nombre :</Label>\n                    <Input type=\"text\" name=\"nombres\" id=\"nombres\" \n                    value={nombres || ''}                \n                    onChange={ (e) => setnombres(e.target.value)} \n                    onInvalid={(e) => e.target.setCustomValidity('El campo nombres es obligatorio !')}\n                    onInput={(e) => e.target.setCustomValidity('')}\n                    required \n                    />    \n                  </FormGroup> \n              </Col>\n              <Col md={6}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Email :</Label>\n                      <Input type=\"text\" name=\"email\" id=\"email\" \n                        value={email || ''}                \n                        onChange={ (e) => setemail(e.target.value)} \n                        onInvalid={(e) => e.target.setCustomValidity('El campo email es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required \n                        />       \n                                           \n                    </FormGroup> \n              </Col>                                                \n          </Row> \n          <Row>                       \n              <Col md={12}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Observaciones</Label>\n                    <Input type=\"text\" name=\"observaciones\" id=\"observaciones\" \n                    value={observaciones || ''}                \n                    onChange={ (e) => setobservaciones(e.target.value)} />    \n                  </FormGroup> \n              </Col>             \n          </Row> \n          <Row>                                               \n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn-md btn-info mt-4\">\n                    <FontAwesomeIcon icon={faEnvelope} />  \n                    {' '} Enviar\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          </Form> \n          </Card>  \n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchVenta;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport {  \n    Row,\n    Col,\n    Card,\n    CardBody,\n    Form,\n    Button, FormGroup, Input, Label, Modal, ModalBody, Table\n  } from \"reactstrap\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport SearchCliente from \"./SearchCliente\";\n\nconst CotizacionCliente = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.clientes) \n    const itt  = useSelector(state => state.cotizaciones.item) \n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };\n\n    const asignar = (item) => {    \n        let est = modalView === true ? false : true;                     \n        dispatch({type: 'COTIZACIONES_CHANGE', props: 'clienteId', value: item.id})\n        dispatch({type: 'COTIZACIONES_CHANGE', props: 'clients', value: item.nombres})        \n        setmodalView(est)  \n        dispatch({type:'CLIENTES_RESET_DATA'})             \n    };\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CLIENTES_DATA','clientes',iok))              \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'CLIENTES_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={10}>        \n             <FormGroup>\n              <Label for=\"clients\">Cliente</Label>\n              <Input type=\"text\" name=\"clients\" id=\"clients\" \n                    value={itt.clients}\n                    readOnly={true}/>              \n             </FormGroup>       \n            </Col>        \n            <Col md={2}>        \n            <Button className=\"btn-rd btn-info mt-3\" onClick={() => toggleModalView()}>\n                <FontAwesomeIcon icon={faSearch} />                          \n            </Button>\n          </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"10%\">Id</th>\n                            <th width=\"70%\">Nombres</th>                            \n                            <th width=\"10%\">Nit</th>            \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                      \n                                    <td>{item.id}</td>\n                                    <td>{item.nombres}</td>                                    \n                                    <td>{item.nit}</td>                                                       \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}>\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default CotizacionCliente;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { formaPagos, formaEntregas, impuestos } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { custom } from '../../../../helpers/customStyles'\nimport CotizacionCliente from '../../Clientes/components/CotizacionCliente'\nimport Select from 'react-select'          \n\nconst FormVenta = () => {\n    const dispatch = useDispatch()  \n    const { item, items } = useSelector(state => state.cotizaciones)   \n    const it = useSelector(state => state.empresa.item)   \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))    \n\n    const changeHandler = event => {    \n        const { name, value } = event.target          \n        dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE',name,value))                   \n    }\n    const changesHandler = (event,name) => {            \n      const { value } = event ? event : ''              \n      dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE',name,value))           \n      if(name === 'iva')\n      {\n        let iok = (value === 0 || value === '0') ? 0: (parseFloat(item.totalGeneral) * (parseFloat(value) / 100))\n        dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE','impuesto',iok)) \n        let sTotal = (value === 0 || value === '0') ? item.totalGeneral: parseFloat(item.totalGeneral)- parseFloat(iok)\n        dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE','subTotal',sTotal)) \n              \n      }             \n    }\n    const changeDescuento = (event) => {                       \n      const ivalue = event.target.value ? event.target.value : 0  \n      dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE','descuento',ivalue))    \n      let tDescuento = (ivalue === 0 || ivalue === '0') ? item.totalGeneral: parseFloat(item.totalGeneral) - parseFloat(ivalue)\n      dispatch(crudActions.SET_CHANGE('COTIZACIONES_CHANGE','totalDescuento',tDescuento))              \n    }\n    const submitHandle = () => {       \n      let eItem = item                    \n      eItem.usuarioId = usuario.id            \n      let dato={\n        item: eItem,\n        items:items\n      }          \n          \n      dispatch(crudActions.SET_UPDATES('COTIZACIONES_ADD','cotizaciones',dato,'unit'))            \n        \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'COTIZACIONES_RESET_ITEM'})        \n      };\n    }, []); \n\n\n\n  \n     \n    return (              \n          <>                                  \n          <Row form>\n            <Col md={12}>\n              <CotizacionCliente/>    \n            </Col>\n          </Row>\n\n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"fpago\"> Forma de pago </Label>\n                  <Select                                                               \n                    defaultValue={formaPagos[0]}\n                    styles={custom} \n                    name=\"formaPago\"    \n                    id=\"formaPago\"                    \n                    options={formaPagos}      \n                    isClearable={false}                          \n                    value={defaultVal(formaPagos,item.formaPago)}\n                    onChange={ (e) => changesHandler(e,'formaPago')}/>\n              </FormGroup>   \n            </Col>\n          </Row>\n\n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"fentrega\"> Forma de entrega </Label>\n                  <Select                                                               \n                    defaultValue={formaEntregas[0]}\n                    styles={custom} \n                    name=\"formaEntrega\"    \n                    id=\"formaEntrega\"                    \n                    options={formaEntregas}      \n                    isClearable={false}                          \n                    value={defaultVal(formaEntregas,item.formaEntrega)}\n                    onChange={ (e) => changesHandler(e,'formaEntrega')}/>\n              </FormGroup>   \n            </Col>\n          </Row>\n          <Row form>\n            <Col md={12}>\n            <FormGroup>\n                <Label for=\"fiva\"> Impuesto </Label>\n                  <Select                                                               \n                    defaultValue={impuestos[0]}\n                    styles={custom} \n                    name=\"iva\"    \n                    id=\"iva\"                    \n                    options={impuestos}      \n                    isClearable={false}                          \n                    value={defaultVal(impuestos,item.iva)}\n                    onChange={ (e) => changesHandler(e,'iva')}/>\n              </FormGroup>   \n            </Col>\n          </Row> \n\n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"ndescuento\">Descuento</Label>\n                  <Input \n                      type=\"number\" name=\"descuento\" id=\"descuento\" \n                      value={item.descuento || 0}                          \n                      onChange={ (e) => changeDescuento(e)} \n                      min={0} \n                      max={50000}\n                  />\n              </FormGroup>   \n            </Col>\n          </Row>  \n         \n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"observaciones\">Glosa</Label>\n                <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                      value={item.observaciones || ''}                          \n                      onChange={ (e) => changeHandler(e)} \n                      min={0} max={50000}\n                      />\n              </FormGroup>   \n            </Col>\n          </Row>        \n          <Row>  \n            <Col md={7}>\n              <Button\n                className={item.id ?\"btn-md btn-warning mt-4\" : \"btn-md btn-info mt-4\"}\n                onClick={() => submitHandle()}>\n                <FontAwesomeIcon icon={faSave} />  \n                {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n              </Button>    \n            </Col>                  \n          </Row>\n        </>\n\n\n                                      \n    );\n};\nexport default FormVenta;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchcArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)  \n    const { items, item } = useSelector(state => state.cotizaciones)  \n    const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');\n    const [cantidad, setCantidad] = useState(0);\n    const [valor, setValor] = useState(0.00);\n    const [articulo, setArticulo] = useState({});\n    \n    const changeHandler = event => {    \n      const { value } = event.target  \n      setName(value)\n    } \n    const search = () =>{    \n      setOpen(true)  \n      let iok ={      \n      nombre    : name,\n      almacenId : almacenId.id      \n      }  \n      dispatch(crudActions.GET_SEARCHS_ITEMS('ARTICULOS_DATA_ITEMS','tpv',iok))\n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)\n      setCantidad(0)\n      setValor(0)\n    } \n    \n    const upCantidad = (e) => {\n      const { value } = e.target \n      setCantidad(value)      \n    }\n    const upValor = (value, name) => {            \n      setValor(value)      \n    } \n\n    const add = () =>{  \n      let ites = [...items]\n      let cTotal = item.nroItems     \n      let gTotal = item.totalGeneral      \n      let sTotal = item.subTotal\n      let gImp   = item.impuesto\n      let repeat = false\n      let tDescuento = item.descuento\n      ites.map((item, index) =>{                        \n        if(item.articuloId === articulo.articuloId)\n        { \n          repeat = true;\n        }\n        return null\n      }) \n      if(!repeat)\n      {\n      let itemCotizacion = {\n        cantidad     : cantidad,          \n        articuloId   : articulo.articuloId,\n        codigo       : articulo.codigo, \n        unidad       : articulo.unidad, \n        marca        : articulo.marca,\n        valor        : parseFloat(valor),\n        subTotal     : parseInt(cantidad) * parseFloat(valor),        \n        nombre       : articulo.nombre,    \n        cotizacionId : item.id    \n      }  \n      console.log(itemCotizacion)\n      ites.push(itemCotizacion);   \n\n      cTotal = parseInt(cTotal) + parseInt(cantidad);    \n      gTotal = parseFloat(gTotal) + parseFloat(itemCotizacion.subTotal)      \n        \n      gImp       = parseFloat(gTotal) * parseFloat(item.iva / 100)\n      sTotal     = parseFloat(gTotal) - parseFloat(gImp)     \n      tDescuento = parseFloat(gTotal) - parseFloat(item.descuento)\n      dispatch({type:'COTIZACIONES_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp,totalDescuento : tDescuento })\n      }\n        clearInput()\n\n    }\n\n    const handleAsignar = (articulo) =>{   \n      console.log(articulo)      \n      setArticulo(articulo)  \n      setName(articulo.nombre)    \n      setValor(articulo.precioVenta)    \n      setOpen(false)\n    }\n\n\n    return (   \n      <>           \n        <Row form>                      \n                    <Col md={6}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Nombres</Label>                 \n                          <Input \n                            type=\"text\" \n                            name=\"name\"                             \n                            id=\"name\"  \n                            value={name || ''}  \n                            onChange={changeHandler} />\n                            {\n                              name ? \n                              <Button className=\"volatil\" onClick={(e) => {clearInput()}}>\n                                <FontAwesomeIcon icon={faTimes}   />\n                              </Button>\n                              : null\n                            } \n                        </FormGroup>\n                      </Col>\n                      <Col md={1}>\n                        <FormGroup>   \n                          <Button className=\"btn-primary btn-search mt-3\"\n                          onClick={search}>\n                            <FontAwesomeIcon icon={faSearch} />\n                          </Button>  \n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Cantidad</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"cantidad\"                             \n                            id=\"cantidad\"    \n                            value={cantidad}                          \n                            onChange={(e) => upCantidad(e)} />\n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eValor\">Valor</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"valor\"                             \n                            id=\"valor\"    \n                            value={valor}                          \n                            onChange={(e) => upValor(e)} \n                            readOnly={true}\n                          />\n                        </FormGroup>\n                      </Col>\n                                      \n                      <Col md={1}>\n                        <Button className={cantidad === 0 ? \"btn-rd btn-disabled mt-3\":\"btn-rd btn-danger mt-3\"}\n                          onClick={() => add() }\n                        >\n                         <FontAwesomeIcon icon={faArrowDown} />                          \n                         </Button>\n                      </Col>\n                    </Row>                  \n                    \n           \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.nombre}/{item.marca} - (Stock: {item.stock})  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n        </>                    \n                         \n    );\n};\nexport default SearchcArticulos;\n","import React,{useEffect} from \"react\";\nimport { Table, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ListaCotizaciones = () => {\n   const dispatch = useDispatch() \n   const {item, items }= useSelector(state => state.cotizaciones)\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n   const removeItem = (index) => {          \n    var array = [...items];    \n    let cTotal = item.cantidadTotal      \n    let gTotal = item.totalGeneral  \n    let sTotal = item.subTotal\n    let gImp    = item.impuesto\n    let tDescuento = item.descuento\n\n    if(index === 0){\n      cTotal = 0\n      gTotal = 0\n      sTotal = 0\n      gImp   = 0\n      tDescuento = 0\n    }else{    \n        cTotal = cTotal - parseFloat(array[index].cantidad);    \n        gTotal = gTotal - parseFloat((array[index].cantidad * array[index].valor));        \n        gImp   = gTotal * parseFloat(item.iva / 100)\n        sTotal = gTotal - parseFloat(gImp)\n        tDescuento = parseFloat(gTotal) - parseFloat(item.descuento)\n    }\n    array.splice(index,1);        \n    dispatch({type:'COTIZACIONES_SET_ITEMS',values:array, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp,totalDescuento : tDescuento })\n   }\n   \n   useEffect(() => {    \n    return () => {\n      dispatch({type:'COTIZACIONES_RESET_ITEMS'})   \n    };\n}, []);\n  return(\n    <>    \n    <Row>\n      <Col>\n      <Card>        \n        <CardBody>\n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                <th width=\"15%\" >Código</th>\n                <th width=\"45%\">Nombre</th>                                \n                <th width=\"15%\">Cantidad</th>\n                <th width=\"10%\">Precio</th>                                \n                <th width=\"10%\">Total</th>            \n                <th width=\"5%\"></th>                   \n              </tr>\n          </thead>\n          {items && (\n              <tbody>\n                  {items.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                                        \n                        <td>{item.cantidad} ({item.unidad}) </td>                            \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>                        \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                        <td>\n                          <Button className=\"btn btn-danger\" \n                            onClick={() => { removeItem(index)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>                                           \n                        </td>\n                      </tr>  \n                      ))}\n                      <tr>\n                        <td colSpan=\"4\">SubTotal:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>                        \n                      </tr>\n                      <tr>\n                        <td colSpan=\"4\">Impuesto:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.impuesto)}</td>\n                      </tr>                      \n                      <tr>\n                        <td colSpan=\"4\" className={item.descuento === 0 || item.descuento === '0' ? \"nn\": \"subs\" }><b>TOTAL</b></td>                        \n                        <td className={item.descuento === 0 || item.descuento === '0' ? \"nn\": \"subs\" }>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                      </tr>\n                      { item.descuento === '0' || item.descuento === 0 ? null : \n                        <tr>\n                        <td colSpan=\"4\"><b>TOTAL - Descuento</b></td>                        \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalDescuento)}</td>\n                        </tr>\n                      }                      \n              </tbody>\n          )}\n        </Table>\n        </CardBody>\n      </Card> \n      </Col>         \n    </Row>        \n</>      \n  )\n\n};\nexport default ListaCotizaciones;\n","import React from \"react\";\nimport { useSelector } from 'react-redux'\nimport {  Button, Row, Col, Card, CardBody } from \"reactstrap\"\nimport FormCotizacion from './FormCotizacion' \nimport SearchcArticulos from '../../../INVENTARIOS/Articulos/components/SearchcArticulo'\nimport ListaCotizaciones from \"./ListaCotizaciones\";\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditVenta = ({getComponent}) => {\n  const { item, cantidadTotal, sumaTotal  } = useSelector(state => state.cotizaciones)  \n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  var d = new Date();  \n    return (              \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA COTIZACIONES\n          </Button>              \n        </Col>  \n      </Row>\n\n      <Row>\n      <Col md=\"12\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"2\" className=\"barraz\">\n               <h5><b>COTIZACION Nº : </b> {item.id} </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Estado : </b> {item.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {item.nroItems}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Valor Total : </b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</h5>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      <Row>\n        <Col md=\"4\" className=\"cardCo\">\n            <Card>        \n              <CardBody>\n              <FormCotizacion/> \n              </CardBody>   \n            </Card>\n        </Col>          \n        <Col md=\"8\" className=\"cardCo\">\n           <SearchcArticulos/>\n           <ListaCotizaciones/>\n        </Col>          \n      </Row>                                         \n      </>  \n                                                   \n    );\n};\nexport default EditVenta;\n","  import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableCotizaciones from \"./components/TableCotizaciones\";\nimport SearchCotizacion from \"./components/SearchCotizacion\";\nimport EditCotizacion from \"./components/EditCotizacion\";\n\n\nconst Cotizacions = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();   \n  const getComponent = useCallback((io, key) =>{ \n    dispatch(crudActions.GET_ITEM('EMPRESA_ITEM','empresas',1))      \n      switch(io){\n        case 'data':\n          setComponent(<><SearchCotizacion getComponent={getComponent}/><TableCotizaciones getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'COTIZACIONES_RESET_ITEM'})\n          setComponent(<EditCotizacion getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('COTIZACIONES_ITEM','cotizaciones',key)) \n          setComponent(<EditCotizacion getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga cotizacions')\n    };\n  }, []); \n\n \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Cotizacions;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\n\nconst TableProspectos = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15);\n  const {data,pagina,paginas,indicador }= useSelector(state => state.prospectos)\n \n  const makeHttpRequestWithPage = useCallback((page, num) =>{\n   dispatch(crudActions.GET_DATA('PROSPECTOS_DATA','prospectos',page, num,'id','desc'))  \n   console.log('segui1')\n },[]) \n\n const changeSelect = (pky) => {        \n   const {value} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {\n  makeHttpRequestWithPage(1,pag)\n     return () => {\n     /*    cleanup*/\n     console.log('clean table inventario')\n     };\n }, []);\n\n const setIndicador = (pky,est,monto) => {            \n   let iok = pky === indicador  ? 0 : pky\n   dispatch({type:'PROSPECTOS_INDICADOR',value:iok,estado:est,indicadorTotal:monto}) \n };\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>  \n\n                <th width=\"5%\"></th>\n                <th width=\"5%\">Id</th>\n                <th width=\"10%\">Fecha</th>\n                <th width=\"50%\">Nombre</th>                  \n                <th width=\"10%\">Tipo</th>\n                <th width=\"10%\">Vencimiento</th>\n                <th width=\"10%\">Estado</th>                                \n                \n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index} >                      \n                      <td >                       \n                      <Input type=\"checkbox\" \n                      onChange={() => { setIndicador(item.id, item.estado, item.total) }} \n                      checked={ item.id === indicador ? true : false}\n                      /></td>\n                      <td>{item.id}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fecha}</Moment></td>                        \n                      <td>{item.nombre}</td>\n                      <td>{item.tipo}</td>\n                      <td>{item.vencimiento }</td>\n                      <td>{item.estado ? \"aprobado\":\"transcripción\"}</td>                      \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TableProspectos;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {     \n  Table,\n  Col,  \n  Row,    \n  Button } from \"reactstrap\";\n\nimport ReactToPrint from \"react-to-print\";\nimport { api } from \"../../../../helpers\";\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n        <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Promoción # {this.props.dato.id}</b></h6>              \n              <h5 className=\"text-center pio\"> {this.props.dato.nombre}</h5>             \n              <h5 className=\"text-center pio\"> Fecha Promoción : <Moment format=\"DD-MM-YYYY\">{this.props.dato.fecha}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Hora Promoción : <Moment format=\"HH:mm:ss\">{this.props.dato.createdAt}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Tipo: {this.props.dato.tipo}</h5> \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">    \n          <Row >\n          <Col md={4}>\n          <img alt=\"articulo\" className=\"text-center imgPr\" src={api + '/static/images/articulos/lg/'+this.props.articulo.filename }/> \n          </Col>      \n          <Col md={8}>\n          <h4>Detalle</h4>  \n          <Table className=\"table-reporteh\">                      \n            <tbody>                \n                <tr><td width=\"35%\"><b>Nombre Corto :</b></td><td >{this.props.articulo.nombreCorto}</td></tr> \n                <tr><td><b>Precio Venta :</b></td>\n                <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(this.props.articulo.precioVenta)}</td>\n                </tr> \n                <tr><td colSpan=\"2\"><b>Descripción :</b></td></tr>   \n                <tr><td colSpan=\"2\">{ this.props.articulo.descripcion }</td></tr> \n            </tbody> \n            </Table>\n          </Col>      \n        </Row> \n        <Row >\n          <Col md={12}>\n            <h4>Clientes</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>  \n              <th width=\"15%\">Id</th>\n                <th width=\"45%\">Nombres</th>                                \n                <th width=\"20%\">Email</th>\n                <th width=\"20%\">Teléfono</th>                \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n              {this.props.data.map((item, index) => (\n                  <tr key={index}>                      \n                    <td>{item.cliente.id || ''}</td>\n                    <td>{item.cliente.nombres}</td>\n                    <td>{item.cliente.email}</td>\n                    <td>{item.cliente.telefono}</td>                                        \n                  </tr>  \n                  ))}\n          </tbody>\n          )}\n            </Table>\n          </Col>      \n        </Row>       \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha/Hora emisión: <Moment format=\"DD/MM/YYYY HH:mm:ss\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n     </> \n    );\n  }\n}\n\n\nfunction ProspectoResumen () {    \nconst dispatch = useDispatch()\nconst { item, items } = useSelector(state => state.prospectos)\nconst itt = useSelector(state => state.articulos.item)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'PROSPECTOS_RESET_ITEMS'}) \n        dispatch({type:'PROSPECTOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}            \n            user={usuario}\n            articulo={itt}\n        />\n    </div>\n     )\n}\n\n\nexport default ProspectoResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, Modal, ModalBody, FormGroup, Input, Label, Card  } from \"reactstrap\"\nimport { crudActions, mailActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faCheck, faReceipt, faEdit, faSearch, faPlus ,faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport ProspectoResumen from \"./ProspectoResumen\";\nimport  { registerLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'cliente',\"label\":'cliente'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchVenta = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const fecha = new Date()\n    const { total, indicador, estado}= useSelector(state => state.prospectos)    \n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);    \n    const [viewz, setviewz] = useState(false);\n    const [viewy, setviewy] = useState(false);\n    const [nombres, setnombres] = useState(\"\");\n    const [email, setemail] = useState(\"\");\n    const [observaciones, setobservaciones] = useState(\"\");\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n      setValue('')\n    };\n        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('PROSPECTOS_DATA','prospectos',iok))              \n   }  \n  \n    const createHandle = () => { \n      let eItem = {                            \n        fecha: fecha,\n        nombre:'s-n',\n        tipo:'',\n        vencimiento:'',\n        nivel:0,\n        estado:false,\n        observaciones:'',\n        resultado:0,\n        medidas:0,\n        articuloId:8\n      }\n      dispatch(crudActions.SET_ADD('PROSPECTOS_DATA','prospectos',eItem,'lista'))      \n      dispatch({type:'PROSPECTOS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})                                           \n   }\n\n   const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('PROSPECTOS_DATA','prospectos',indicador,'lista'))      \n    dispatch({type:'PROSPECTOS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setview(false)\n\n  };\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)                   \n  };\n  const toggleModalViewy = () => {        \n    setviewy(!viewy)                   \n  };\n\n  const viewArticulo = () => { \n    dispatch(crudActions.GET_ITEM_LOAD('PROSPECTOS_ITEM','prospectos',indicador))\n    /*dispatch(crudActions.GET_ITEM_LOAD('PROSPECTOS_ITEM','prospectos',key))*/\n    setviewz(!viewz)\n  }; \n\n\n\nconst enviar = event => {    \n  event.preventDefault()             \n  let dato ={\n    prospectoId: indicador,\n    subject: nombres\n  }\n  dispatch(mailActions.SEND_MAIL('mails/sendprospecto',dato))\n  dispatch({type:'PROSPECTOS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n  setnombres('')\n  setobservaciones('')\n  setemail('')\n  setviewy(false)\n  \n};\n    return (                                      \n      <>  \n      <Card>        \n      <Row>        \n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faReceipt} className=\"ml-1 \"/>  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">                \n            <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  onClick={()=> createHandle()}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n            <Button className={indicador === 0  || estado === 'cerrado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                  <FontAwesomeIcon icon={faEdit} /></Button>            \n                                       \n            <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n                <FontAwesomeIcon icon={faFilePdf} /> </Button>         \n            <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewy()} >\n               <FontAwesomeIcon icon={faEnvelope} /></Button>     \n        </Col>                 \n        \n        <Col md={1} className=\"cards text-right\">\n                 <Select                 \n                        styles={customs}                                              \n                        defaultValue={page[0]}\n                        name=\"prop\"    \n                        id=\"prop\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,prop)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n        </Col>                \n        \n        <Col md={4} className=\"cards\">                \n                  <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>                    \n                      <Input \n                      type=\"text\" \n                      name=\"value\"                                 \n                      id=\"value\"  \n                      value={ value || '' }  \n                      onChange={ (e) => {setValue(e.target.value)}} />\n                      {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    }         \n                    </Col>    \n                    <Button  className=\"btn-primary \" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                  </Form>               \n        </Col>  \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } PROMOCIONES</p>          \n        </Col>  \n      </Row>\n      </Card> \n\n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n           <ProspectoResumen/>         \n          </ModalBody>\n      </Modal>\n      <Modal isOpen={viewy} toggle={toggleModalViewy}>  \n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewy()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Card>\n            <h6>Enviar cotización</h6>\n          <Form onSubmit={ enviar}>   \n          <Row>                       \n              <Col md={12}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Subject :</Label>\n                    <Input type=\"text\" name=\"nombres\" id=\"nombres\" \n                    value={nombres || ''}                \n                    onChange={ (e) => setnombres(e.target.value)} \n                    onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                    onInput={(e) => e.target.setCustomValidity('')}\n                    required \n                    />    \n                  </FormGroup> \n              </Col>              \n          </Row>        \n          <Row>                                               \n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn-md btn-info mt-4\">\n                    <FontAwesomeIcon icon={faEnvelope} />  \n                    {' '} Enviar\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          </Form> \n          </Card>  \n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchVenta;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { custom } from '../../../../helpers/customStyles'\nimport {  tipoPromociones } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\n\nconst FormProspecto = () => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.prospectos)\n    const itt = useSelector(state => state.articulos.item)\n    \n    const changeHandler = event => {    \n        const { name, value } = event.target          \n        dispatch(crudActions.SET_CHANGE('PROSPECTOS_CHANGE',name,value)) \n    }\n    const changesHandler = event => {            \n      console.log(event)       \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('PROSPECTOS_CHANGE','tipo',value))          \n  }\n    const submitHandle = () => {       \n      let dato = item                    \n      dato.articuloId = itt.id ? itt.id : null       \n      dispatch(crudActions.SET_UPDATE('PROSPECTOS_ADD','prospectos',dato,'unit'))            \n        \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'PROSPECTOS_RESET_ITEM'})        \n      };\n    }, []); \n\n\n\n  \n     \n    return (              \n        <>                                  \n          <h6>Datos promoción</h6>  \n            <FormGroup>\n              <Label for=\"fnombre\">Titulo</Label>\n              <Input type=\"text\" name=\"nombre\" id=\"nombre\" \n                    value={item.nombre || ''}                          \n                    onChange={ (e) => changeHandler(e)} />\n            </FormGroup>              \n            <FormGroup>                            \n              <Label for=\"tipoi\">Tipo</Label>\n                <Select                                                               \n                  defaultValue={tipoPromociones[0]}\n                  styles={custom} \n                  name=\"tipo\"    \n                  id=\"tipo\"                    \n                  options={tipoPromociones}      \n                  isClearable={false}                          \n                  value={defaultVal(tipoPromociones,item.tipo)}\n                  onChange={ (e) => changesHandler(e)}/>\n            </FormGroup>    \n                                            \n        \n            <FormGroup>\n              <Label for=\"observaciones\">Observaciones</Label>\n              <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                value={item.observaciones || ''}                          \n                onChange={ (e) => changeHandler(e)} />\n            </FormGroup>  \n       \n            <Button\n              className={item.id ?\"btn-md btn-warning mt-4\" : \"btn-md btn-info mt-4\"}\n              onClick={() => submitHandle()}\n            >\n            <FontAwesomeIcon icon={faSave} />  \n             {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n            </Button>    \n\n        </>\n\n\n                                      \n    );\n};\nexport default FormProspecto;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport { Row,Col,Card,CardBody,Form,Button, FormGroup, Input, Modal, ModalBody, Table } from \"reactstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ProspectoCliente = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.clientes) \n    const itt  = useSelector(state => state.prospectos.item) \n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };    \n    const asignar = (item) => {  \n        let niok={\n            clienteId: item.id,\n            prospectoId: itt.id,\n            nroMensajes: 0,\n            nroEmail: 0,\n            estado: true\n        }\n        dispatch(crudActions.SET_ADD_LOAD('PROSPECTOS_ITEMS_ADD','prospectosc',niok,'unit'))       \n      }\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CLIENTES_DATA','clientes',iok))              \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'CLIENTES_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={9} className=\"text-left ml-2\">                     \n                <h6>Participantes</h6>\n            </Col>\n            <Col md={2} className=\"text-right\">                     \n                <Button className=\"btn-rd btn-info\" onClick={() => toggleModalView()}>\n                    <FontAwesomeIcon icon={faSearch} />                          \n                </Button>\n            </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>                              \n                            <th width=\"50%\">Nombres</th>\n                            <th width=\"40%\">Email</th>          \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                                                          \n                                    <td>{item.nombres}</td>\n                                    <td>{item.email}</td>                                    \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}>\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default ProspectoCliente;\n","import React,{useEffect} from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport { crudActions } from '../../../../actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faEnvelope, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { api } from \"../../../../helpers\";\n\n\nconst ListaProspectos = () => {\n   const dispatch = useDispatch() \n   const {items, item, cantidadTotal, sumaTotal}= useSelector(state => state.prospectos)\n\n   useEffect(() => {    \n    return () => {\n      dispatch({type:'PROSPECTOS_RESET_ITEMS'})   \n    };\n  }, []);\n\n  const handleEliminar = (pky) => {  \n    dispatch(crudActions.GET_DELETE_LOAD('PROSPECTOS_ITEMS_ADD','prospectosc',pky,item.id)) \n  }  \n  return(\n    <>    \n    <Row className=\"mt-2 mb-3\">      \n        {items && (\n          <Col>    \n            {items.map((item, index) => (  \n                <div key={index} className=\"prospecto\" >   \n                  <FontAwesomeIcon icon={faTimesCircle} className=\"prosTi\" onClick={() => handleEliminar(item.id)}/>               \n                  <div className=\"prospectol\">\n                  <img alt=\"artículo\"   className=\"img-prospecto\" src={api + \"/static/images/clientes/md/\" + item.cliente.filename}/>   \n                  </div>\n                  <div className=\"prospector\">\n                    <h4>{item.cliente.nombres}</h4>                  \n                    <h5><FontAwesomeIcon icon={faEnvelope} className=\"prosFa\"/> {item.cliente.email}</h5>\n                    <h5><FontAwesomeIcon icon={faPhone} className=\"prosFa\"/> {item.cliente.telefono}</h5>\n                  </div>\n                </div>\n            ))}\n          </Col>\n        )}\n    </Row>        \n</>      \n  )\n\n};\nexport default ListaProspectos;\n","import React, { useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport { Table,Col,Row } from \"reactstrap\";\n\nfunction ArticuloProspecto () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.articulos)\nconst empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n useEffect(() =>{          \n     return () =>{            \n        dispatch({type:'ARTICULOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creportePro\">\n      {item.id ? \n        <div className=\"reportePro\">     \n        <div className=\"report-header\">        \n        <Row className=\"crl\">\n          <Col md={12}>\n            <h6 className=\"text-center pio\"> <b>Resumen Articulo # <b>{item.id}</b></b></h6>\n            <h5 className=\"text-center pio\"> {item.nombres}</h5>\n            <h5 className=\"text-center pio\"> CODIGO : {item.codigoBarras}</h5>             \n          </Col>            \n        </Row>\n        </div>\n        <div className=\"report-bodyPro\">        \n        <Row>\n          <Col md={12} className=\"text-center\">\n            <img alt=\"articulo\" className=\"text-center imglg\" src={api + '/static/images/articulos/lg/'+item.filename }/>               \n          </Col>          \n        </Row>    \n        <Row>\n        <Col>\n            <Table className=\"table-promocion mt-2\">\n            <tbody>\n                <tr><td className=\"txt-promocion\"><b>Nombre :</b></td></tr>  \n                <tr><td className=\"txt-promocion\">{item.nombre}</td></tr> \n                <tr><td className=\"txt-promocion\"><b>Precio Venta :</b></td></tr>\n                <tr><td className=\"txt-promocion\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(item.precioVenta)}</td></tr>                \n                <tr><td className=\"txt-promocion\"><b>Descripción :</b></td></tr>   \n                <tr><td className=\"txt-promocion\">{ item.descripcion }</td></tr> \n            </tbody>\n            </Table>  \n        </Col>\n        </Row>                       \n        </div>      \n      </div> \n      :null\n      }                 \n    </div>\n     )\n}\n\n\nexport default ArticuloProspecto","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Row,Col,FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchArticuloProspecto = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)   \n    const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');\n    \n    const changeHandler = event => {    \n      const { value } = event.target  \n      setName(value)      \n    } \n  \n    const search = () =>{\n      setOpen(true)  \n      let iok ={      \n      nombre    : name,\n      almacenId : almacenId.id      \n      }  \n      dispatch(crudActions.GET_SEARCHS_ITEMS('ARTICULOS_DATA_ITEMS','tpv',iok))\n    }      \n\n    const handleAsignar = (articulo) =>{         \n      dispatch({type:'ARTICULOS_ITEM',response:articulo}) \n      clearInput()\n    }\n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)      \n    }\n\n\n    return (   \n      <>           \n      <Row form>                      \n        <Col md={11}>\n        <FormGroup>   \n          <Label for=\"eNombre\">Producto</Label>                 \n          <Input \n            type=\"text\" \n            name=\"name\"                             \n            id=\"name\"  \n            value={name || ''}  \n            onChange={changeHandler} />\n             {\n              name ? \n                <Button className=\"volatil\" onClick={(e) => {clearInput()}}>\n                 <FontAwesomeIcon icon={faTimes}   />\n                </Button>\n                : null\n             } \n        </FormGroup>\n        </Col> \n        <Col md={1}>\n          <FormGroup>   \n            <Button className=\"btn-primary btn-search mt-3\"\n                    onClick={search}>\n                <FontAwesomeIcon icon={faSearch} />\n            </Button>  \n          </FormGroup>\n        </Col>    \n      </Row>                  \n      \n      { open ?              \n        <Card className=\"resultArt\">           \n          <CardBody>\n            {data &&\n              <ListGroup>\n                {data.map(item =>(\n                <ListGroupItem key={item.id} onClick={() => handleAsignar(item) }>\n                  <b>{item.codigo}</b> - {item.nombre})  \n                </ListGroupItem>\n                ))}\n              </ListGroup>\n            }\n          </CardBody>  \n        </Card>           \n      : null}                \n        </>                  \n    );\n};\nexport default SearchArticuloProspecto;\n","import React from \"react\";\nimport { useSelector } from 'react-redux'\nimport {  Button, Row, Col, Card, CardBody } from \"reactstrap\"\nimport FormProspecto from './FormProspecto' \nimport ProspectoCliente from '../../Clientes/components/ProspectoCliente'\nimport ListaProspectos from \"./ListaProspectos\";\nimport ArticuloProspecto from \"../../../INVENTARIOS/Articulos/components/ArticuloProspecto\"\nimport SearchArticuloProspecto from \"../../../INVENTARIOS/Articulos/components/SearchArticuloProspecto\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst EditProspecto = ({getComponent}) => {\n\n    return (              \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA PROMOCIONES\n          </Button>              \n        </Col>  \n      </Row>  \n\n      <Row>         \n        <Col md=\"3\">        \n          <Card>\n            <CardBody>\n              <FormProspecto/>                                      \n            </CardBody>   \n          </Card>     \n        </Col> \n        <Col md=\"3\">        \n          <Card>\n            <CardBody>\n              <SearchArticuloProspecto/>\n              <ArticuloProspecto/>                                     \n            </CardBody>   \n          </Card>     \n        </Col> \n        <Col md=\"6\">        \n          <Card>\n            <CardBody>\n              <ProspectoCliente/>\n              <ListaProspectos/>\n            </CardBody>   \n          </Card>     \n        </Col> \n      </Row>\n                               \n      </>  \n                                                   \n    );\n};\nexport default EditProspecto;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableProspectos from \"./components/TableProspectos\";\nimport SearchProspecto from \"./components/SearchProspecto\";\nimport EditProspecto from \"./components/EditProspecto\";\n\n\nconst Prospectos = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();   \n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchProspecto getComponent={getComponent}/><TableProspectos getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'PROSPECTOS_RESET_ITEM'})\n          setComponent(<EditProspecto getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('PROSPECTOS_ITEM','prospectos',key)) \n          setComponent(<EditProspecto getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga prospectos')\n    };\n  }, []); \n\n \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Prospectos;\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subCliente = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/crm/${item.link}/`}\n        className=\"nav-link\"> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subCliente;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE CLIENTES </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              <h5 className=\"text-center pio\"> Nº Items : { this.props.ptotal }</h5>                           \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"45%\" className=\"text-dark\">Nombres</th>\n                <th width=\"10%\" className=\"text-dark\">Nit</th>\n                <th width=\"20%\" className=\"text-dark\">Email</th>\n                <th width=\"10%\" className=\"text-dark\">Teléfono</th>\n                <th width=\"10%\" className=\"text-dark\">F.Registro</th>\n                \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>  \n                    <td>{index+1}</td>\n                    <td>{item.nombres}</td> \n                    <td>{item.nit}</td> \n                    <td>{item.email}</td> \n                    <td>{item.telefono}</td>                                                  \n                    <td><Moment format=\"DD-MM-YYYY\">{item.createdAt}</Moment></td>                                                  \n                    </tr>  \n                ))}\n                 \n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Movimientos ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { clientes,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{                   \n      dispatch({type:'INFORMES_RESET'}) \n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={clientes}   \n            ptotal={total}                                 \n            pvalue1={value1}\n            pvalue2={value2}            \n        />\n    </div>\n     )\n}\n\n\nexport default Movimientos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCliente.jsx';\nimport { InformeClientesRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { useDispatch } from 'react-redux'\nimport Clientes  from './Clientes';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst ClientesView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2             \n    dispatch(crudActions.GET_INFORMES('INFORMES_CLIENTES_RANGOS','clientrango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeClientesRouter} prop={'Clientes'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Clientes            \n            value1={value1}\n            value2={value2}                     \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default ClientesView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE COTIZACIONES </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              <h5 className=\"text-center pio\"> Nº Items : { this.props.ptotal }</h5>     \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"10%\" className=\"text-dark\">F.Cotización</th>\n                <th width=\"45%\" className=\"text-dark\">Detalle</th>\n                <th width=\"10%\" className=\"text-dark\">Nº Items</th>\n                <th width=\"10%\" className=\"text-dark\">Monto</th>\n                <th width=\"20%\" className=\"text-dark\">Cliente</th>                \n                \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>  \n                    <td>{index+1}</td>\n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaCotizacion}</Moment></td>                                                  \n                    <td>{item.observaciones}</td> \n                    <td>{item.nroItems}</td> \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                    <td>{item.clients}</td>                                                                      \n                    </tr>  \n                ))}\n          \n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Cotizaciones ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { cotizaciones ,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'INFORMES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={cotizaciones}   \n            ptotal={total}                                 \n            pvalue1={value1}\n            pvalue2={value2}            \n        />\n    </div>\n     )\n}\n\n\nexport default Cotizaciones","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCliente.jsx';\nimport { InformeClientesRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { useDispatch } from 'react-redux'\nimport Cotizaciones  from './Cotizaciones';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst CotizacionesView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2             \n    dispatch(crudActions.GET_INFORMES('INFORMES_COTIZACIONES_RANGOS','cotizacionrango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeClientesRouter} prop={'Clientes'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Cotizaciones\n            value1={value1}\n            value2={value2}                     \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default CotizacionesView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE PROSPECTOS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              <h5 className=\"text-center pio\"> Nº Items : { this.props.ptotal }</h5>     \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"10%\" className=\"text-dark\">Fecha</th>\n                <th width=\"15%\" className=\"text-dark\">Nombre</th>\n                <th width=\"35%\" className=\"text-dark\">Detalle</th>\n                <th width=\"10%\" className=\"text-dark\">Tipo</th>                \n                <th width=\"25%\" className=\"text-dark\">Producto</th>                \n                \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>  \n                    <td>{index+1}</td>\n                    <td><Moment format=\"DD-MM-YYYY\">{item.fecha}</Moment></td>                                                  \n                    <td>{item.nombre}</td> \n                    <td>{item.observaciones}</td> \n                    <td>{item.tipo}</td>\n                    <td>{item.articulo}</td>                                                                      \n                    </tr>  \n                ))}\n          \n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Cotizaciones ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { prospectos ,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'INFORMES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={prospectos}   \n            ptotal={total}                                 \n            pvalue1={value1}\n            pvalue2={value2}            \n        />\n    </div>\n     )\n}\n\n\nexport default Cotizaciones","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCliente.jsx';\nimport { InformeClientesRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { useDispatch } from 'react-redux'\nimport Prospectos  from './Prospectos';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst ProspectosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2             \n    dispatch(crudActions.GET_INFORMES('INFORMES_PROSPECTOS_RANGOS','prospectorango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeClientesRouter} prop={'Prospectos'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Prospectos\n            value1={value1}\n            value2={value2}                     \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default ProspectosView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE TICKETS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              <h5 className=\"text-center pio\"> Nº Items : { this.props.ptotal }</h5>     \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"10%\" className=\"text-dark\">F.Registro</th>\n                <th width=\"10%\" className=\"text-dark\">F.Cierre</th>                \n                <th width=\"35%\" className=\"text-dark\">Detalle</th>\n                <th width=\"10%\" className=\"text-dark\">Tipo</th>                \n                <th width=\"30%\" className=\"text-dark\">Cliente</th>                \n                \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>  \n                    <td>{index+1}</td>\n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaRegistro}</Moment></td>                                                  \n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaCierre}</Moment></td>\n                    <td>{item.detalle}</td>                     \n                    <td>{item.tipo}</td>\n                    <td>{item.clients}</td>                                                                      \n                    </tr>  \n                ))}\n\n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Tickets ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { tickets ,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'INFORMES_RESET'})\n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={tickets}   \n            ptotal={total}                                 \n            pvalue1={value1}\n            pvalue2={value2}            \n        />\n    </div>\n     )\n}\n\n\nexport default Tickets","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subCliente.jsx';\nimport { InformeClientesRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { useDispatch } from 'react-redux'\nimport Tickets  from './Tickets';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst TicketsView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2             \n    dispatch(crudActions.GET_INFORMES('INFORMES_TICKETS_RANGOS','ticketrango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeClientesRouter} prop={'Prospectos'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Tickets\n            value1={value1}\n            value2={value2}                     \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default TicketsView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope,faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport CrmInicio from \"../../pages/CRM/InicioView.jsx\"\nimport Clientes from \"../../pages/CRM/Clientes/ClientesView\"\nimport Tickets from \"../../pages/CRM/Tickets/TicketsView\"\nimport Cotizaciones from \"../../pages/CRM/Cotizaciones/Cotizaciones.jsx\"\nimport Promociones from \"../../pages/CRM/Prospectos/Prospectos.jsx\"\nimport Informes from \"../../pages/CRM/Informes/ClientesView.jsx\"\nimport ICotizaciones from \"../../pages/CRM/Informes/CotizacionesView.jsx\"\nimport IProspectos from \"../../pages/CRM/Informes/ProspectosView.jsx\"\nimport ITickets from \"../../pages/CRM/Informes/TicketsView.jsx\";\nimport Moment from \"react-moment\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst fechaHoy = new Date()\nfunction Crm(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems'))      \n    const { loading }= useSelector(state => state.usuarios)\n   \n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{            \n            if(prop.icon === \"crm\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n            }\n            return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Clientes\":\n            return Clientes;   \n          case \"Tickets\":\n            return Tickets;\n          case \"Cotizaciones\":\n            return Cotizaciones;\n          case \"Promociones\":\n            return Promociones;\n          case \"Informes\":\n            return Informes;              \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/crm'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))  \n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">        \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>\n            </div> \n            <div className=\"center-unity\">\n            <h6>CRM</h6>  \n            </div> \n            <div className=\"conta-unity\">\n            <Row className=\"barraUser\">                                                                  \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div>\n            <div className=\"right-unity\">\n            <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>\n        <Nav> \n          <div className=\"navLeft\">  \n              <NavItem>       \n                <NavLink to=\"/crm/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                  <p className=\"text-white\">  Dashboard  </p>\n                </NavLink>          \n              </NavItem>                  \n        \n        {itemr.map((prop, key) => (  \n          <NavItem key={key}>  \n            <NavLink                \n              to={prop.layout + prop.path}\n              className=\"nav-link\"\n              activeClassName=\"active\">               \n              <p> {prop.name}</p>                    \n            </NavLink>\n          </NavItem>))\n        }\n      </div>\n\n        <div className=\"navRight\">          \n          \n        </div>\n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}                       \n          <Route path=\"/crm/inicio\" component={CrmInicio} />     \n          <Route path=\"/crm/icotizaciones\" component={ICotizaciones} />     \n          <Route path=\"/crm/ipromociones\" component={IProspectos} />     \n          <Route path=\"/crm/itickets\" component={ITickets} />     \n          \n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Crm;\n\n","import React,{useState, useEffect} from 'react';\nimport { Row, Col, Button  } from \"reactstrap\";\nimport { useDispatch } from 'react-redux'\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoneyCheck, faBoxOpen, faPeopleCarry, faHeadset, faCashRegister, faChartLine, faSignOutAlt, faUser, faUsers, faCogs } from \"@fortawesome/free-solid-svg-icons\";  \nimport { usuarioActions} from \"../../actions\"\n\nexport default function InicioView({setToken}) {\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const [component, setComponent] = useState();  \n  const dispatch = useDispatch()   \n  const logoutt = () => {    \n    dispatch(usuarioActions.logout())      \n  };\n\n  const getComponent = () =>{    \n    \n    switch(usuario.rolId){\n      case 1:\n        setComponent(\n          <>\n           <Row className=\"btnMenus\"> \n              <Col>\n              <FontAwesomeIcon icon={faHeadset} className=\"btnIa\"/>\n              <Link to=\"/crm/inicio\" className=\"btnMenu\">CRM</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faPeopleCarry} className=\"btnIa\"/>\n              <Link to=\"/compras/inicio\" className=\"btnMenu\">COMPRAS</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faMoneyCheck} className=\"btnIa\"/>\n              <Link to=\"/ventas/inicio\" className=\"btnMenu\">VENTAS</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faBoxOpen} className=\"btnIa\"/>\n              <Link to=\"/inventarios/inicio\" className=\"btnMenu\">INVENTARIOS</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faChartLine} className=\"btnIa\"/>\n              <Link to=\"/finanzas/inicio\" className=\"btnMenu\">CONTABILIDAD</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faCashRegister} className=\"btnIa\"/>\n              <Link to=\"/tpdv/tpdv\" className=\"btnMenu\">TPDV</Link></Col>\n            </Row>            \n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faCogs} className=\"btnIa\"/>\n              <Link to=\"/tools/empresa\" className=\"btnMenu\">CONFIGURACION</Link></Col>\n            </Row> \n          </>\n        )\n        break;    \n      case 2:\n        setComponent(\n          <>\n           <Row className=\"btnMenus\"> \n              <Col>\n              <FontAwesomeIcon icon={faHeadset} className=\"btnIa\"/>\n              <Link to=\"/crm/inicio\" className=\"btnMenu\">CRM</Link></Col>\n            </Row>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faPeopleCarry} className=\"btnIa\"/>\n              <Link to=\"/erp/inicio\" className=\"btnMenu\">ERP</Link></Col>\n            </Row>                         \n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faUsers} className=\"btnIa\"/>\n              <Link to=\"/rrhh/inicio\" className=\"btnMenu\">RRHH</Link></Col>\n            </Row>             \n          </>\n        )\n        break;\n      case 3:\n        setComponent(\n          <>           \n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faCashRegister} className=\"btnIa\"/>\n              <Link to=\"/tpdv/tpdv\" className=\"btnMenu\">TPDV</Link></Col>\n            </Row>              \n          </>\n        )\n        break;\n      case 4:\n        setComponent(\n        <>\n            <Row className=\"btnMenus\">\n              <Col>\n              <FontAwesomeIcon icon={faChartLine} className=\"btnIa\"/>\n              <Link to=\"/finanzas/inicio\" className=\"btnMenu\">CONTABILIDAD</Link></Col>\n            </Row>          \n          </>)\n        break;\n      case 5:\n        setComponent(\n          <>\n           <Row className=\"btnMenus\"> \n              <Col>\n              <FontAwesomeIcon icon={faHeadset} className=\"btnIa\"/>\n              <Link to=\"/crm/inicio\" className=\"btnMenu\">CRM</Link></Col>\n            </Row>           \n          </>\n        )\n        break;        \n      default:\n        break;\n    }\n}\n\nuseEffect(() => {\n  getComponent()\n  return () => {\n    console.log('descarga proveedores')\n  };\n}, []);\n\n  \n   \n  return(\n    <div className=\"pos\">\n      <div className=\"contenedor\">\n        <div className=\"contenidoLeft\">\n          <div className=\"imas\">\n            <img src={require(\"../../assets/img/login.png\")}/>\n          </div>  \n        </div>   \n        <div className=\"contenidoRight\">  \n            <Row className=\"btnMenus\">              \n                <Col md={2}> \n                  <div className=\"circulu\">\n                      <FontAwesomeIcon icon={faUser} />  \n                  </div></Col>\n                <Col md={7} className=\"mt-1 text-white\">                    \n                  <p>Usuario: {usuario.nombres}</p>\n                </Col>                                         \n                <Col md={2} className=\"text-right\"> \n                  <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"text-white\"  />\n                </Button>                            \n                </Col>   \n            </Row>         \n            <h6>SISTEMAS HABILITADOS</h6>\n            {component}           \n        </div>      \n      </div>\n    </div>    \n  )\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport InicioView from \"../../pages/HOME/InicioView\"\nfunction Post(){\nreturn(\n    <Switch>\n        <Route path=\"/inicio/\" component={InicioView}/>                \n    </Switch>\n)    \n}\nexport default Post;\n","import React from \"react\";\nimport { Row,Col,Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandHoldingUsd, faDollarSign, faReceipt, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\nconst Contabilidad = () => {  \n  let d = new Date()\n  let gestion = d.getFullYear()\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  const proveedores = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n  },\n  title: {\n      text: 'Flujo Efectivo : ' + gestion\n  },\n  credits: {\n    enabled: false\n},\n  tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  accessibility: {\n      point: {\n          valueSuffix: '%'\n      }\n  },\n  plotOptions: {\n      pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n      }\n  },\n  series: [{\n      name: 'Brands',\n      colorByPoint: true,\n      data: [{\n          name: 'Acumulado',\n          y: 61.41,\n          sliced: true,\n          selected: true\n      }, {\n          name: 'Ingresos',\n          y: 11.84\n      }, {\n          name: 'Gastos',\n          y: 10.85\n      }]\n  }]\n  }\n  const capital = {\n    chart: {\n      type: 'column'\n  },\n  title: {\n      text: 'Evolución de Capital'\n  },\n  subtitle: {\n      text: 'Gestión ' + gestion\n  },\n  credits: {\n    enabled: false\n},\n  xAxis: {\n      type: 'category',\n      labels: {\n          rotation: -45,\n          style: {\n              fontSize: '13px',\n              fontFamily: 'Verdana, sans-serif'\n          }\n      }\n  },\n  yAxis: {\n      min: 0,\n      title: {\n          text: 'Cantidades'\n      }\n  },\n  legend: {\n      enabled: false\n  },\n\n  series: [{\n      name: 'Cantidades',\n      data: [\n          ['Ene', 4.2],\n          ['Feb', 7.8],\n          ['Mar', 11.9],\n          ['Abr', 3.7],\n          ['May', 0],\n          ['Jun', 0],   \n          ['Jul', 0],   \n          ['Ago', 0],   \n          ['Sep', 0],   \n          ['Oct', 0],   \n          ['Nov', 0],   \n          ['Dic', 0]   \n      ],\n      dataLabels: {\n          enabled: true,\n          rotation: -90,\n          color: '#FFFFFF',\n          align: 'right',\n          format: '{point.y:.1f}', // one decimal\n          y: 10, // 10 pixels down from the top\n          style: {\n              fontSize: '13px',\n              fontFamily: 'Verdana, sans-serif'\n          }\n      }\n  }]\n  }\n  const gastos = {\n    chart: {\n      type: 'line'\n  },\n  title: {\n      text: 'Ganancias vs Perdidas'\n  },\n  subtitle: {\n      text: 'Gestion :' + gestion\n  },\n  credits: {\n    enabled: false\n},\n  xAxis: {\n      categories: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\n  },\n  yAxis: {\n      title: {\n          text: 'Unidades '\n      }\n  },\n  plotOptions: {\n      line: {\n          dataLabels: {\n              enabled: true\n          },\n          enableMouseTracking: false\n      }\n  },\n  series: [{\n      name: 'Ganancias',\n      data: [7.0, 6.9, 10,15,0,0,0,0,0,0,0,0]\n  }, {\n      name: 'Perdidas',\n      data: [3.9, 4.2, 3,7,0,0,0,0,0,0,0,0]\n  }]\n  }\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">               \n      <Row className=\"mt-1\">           \n          <Col md={4}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\"><FontAwesomeIcon icon={faShoppingCart} /></div>\n              <CardTitle className=\"text-dark\"> INGRESOS TOTALES</CardTitle>\n              <p>123</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={4}>\n          <Card>\n          <CardHeader>\n              <div className=\"card-icono\"><FontAwesomeIcon icon={faReceipt} /></div>\n              <CardTitle className=\"text-dark\"> GASTOS TOTALES</CardTitle>\n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(123456)}</p>                                    \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={4}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-rojo\"><FontAwesomeIcon icon={faDollarSign} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b></b> - BALANCE</CardTitle>              \n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(4455)}</p>                                                                              </CardHeader>\n          </Card>    \n          </Col> \n        </Row>  \n\n        <Row className=\"mt-1\">\n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={proveedores}\n                />\n            </Card>    \n          </Col>  \n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={capital}\n                />\n            </Card>    \n          </Col>            \n        </Row> \n        <Row className=\"mt-1\">\n          <Col md={12}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={gastos}\n                />\n            </Card>                       \n          </Col>            \n        </Row> \n      </div>\n    </div>    \n  )\n\n};\nexport default Contabilidad;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col,  Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableComprobantes = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas,indicador }= useSelector(state => state.comprobantes)\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('COMPROBANTES_DATA','comprobantes',page, num,'id','desc'))      \n  }\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      dispatch(crudActions.GET_ITEM('EMPRESAS_ITEM','empresas',1)) \n      return () => {\n        dispatch({type:'COMPROBANTES_RESET_DATA'})\n      };\n  }, []);\n\n  const setIndicador = (pky,est,monto) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'COMPROBANTES_INDICADOR',value:iok,estado:est,indicadorTotal:monto}) \n  };\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n\n                  <th width=\"5%\"></th>\n                  <th width=\"5%\">Nro.</th>                  \n                  <th width=\"10%\">Tipo</th>\n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"10%\">Sujeto</th>\n                  <th width=\"40%\">Glosa</th>                                                      \n                  <th width=\"10%\">Total</th>                  \n                  <th width=\"10%\">Estado</th>                  \n                  \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item, index) => (\n                      <tr key={index}>                    \n                        <td >                       \n                        <Input type=\"checkbox\" \n                        onChange={() => { setIndicador(item.id, item.estado, item.total) }} \n                        checked={ item.id === indicador ? true : false}\n                        /></td>\n                        <td>{item.numComprobante}</td>\n                        <td>{item.tipoComprobante}</td>\n                        <td><Moment format=\"DD-MM-YYYY\">{item.fechaComprobante}</Moment></td>                        \n                        <td>{item.label}</td>\n                        <td>{item.glosaComprobante}</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoTotal)}</td>\n                        <td>{item.estado}</td>                        \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n      </CardBody>    \n      <CardFooter>     \n    <Row>  \n    <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>  \n    </Row>  \n    </CardFooter> \n        </Card>  \n      </Col>\n    </Row>    \n</>      \n  )\n\n};\nexport default TableComprobantes;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {     \n  Table,\n  Col,\n  Row,    \n  Button } from \"reactstrap\";\n\nimport ReactToPrint from \"react-to-print\";\nimport writtenNumber from 'written-number'\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n      <div className=\"reporte\">     \n        <div className=\"report-header\">   \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-left pio\"> <b>{this.props.empresa.nombre}</b></h6>                            \n              </Col>            \n            </Row>     \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Comprobante de {this.props.dato.tipoComprobante}</b></h6>                            \n              </Col>            \n            </Row>\n            <Row className=\"crl\">\n              <Col md={8}>Fecha Comprobante :      \n              <Moment format=\"DD/MM/YYYY\">{this.props.dato.fechaComprobante}</Moment>                                   \n              </Col>\n              <Col md={4}>                           \n              <b>N º {this.props.dato.numComprobante}</b>\n              </Col>            \n            </Row>\n            <Row className=\"crl\">\n              <Col md={8}>                           \n              </Col>\n              <Col md={4}>                        \n               <h5>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.montoTotal)} </h5>\n              </Col>            \n            </Row>\n\n                      \n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>           \n            <Table className=\"table-reporteh mt-2\">     \n            { this.props.dato.tipoComprobante === 'Ingreso' || this.props.dato.tipoComprobante === 'Egreso' ?                     \n              <tbody>                  \n                <tr>                      \n                  <td><b>{ this.props.dato.tipoComprobante === 'Ingreso' ? 'Recibimos de :' : 'Pagamos a :'}</b></td>                  \n                  <td colSpan=\"3\">{ this.props.dato.label} </td>    \n\n                </tr>                \n                <tr>                      \n                  <td><b>La suma de :</b></td>\n                  <td colSpan=\"3\">                    \n                    {writtenNumber(this.props.dato.montoTotal, {lang: 'es'})}   \n                    { this.props.dato.montoTotal.toString().split('.')[1]} / 100 {' '}\n                    {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(0)}\n                  </td>                  \n                </tr>                \n                <tr>                      \n                  <td><b>Por concepto :</b></td>\n                  <td colSpan=\"3\">{this.props.dato.glosaComprobante}</td>                  \n                </tr>\n                <tr>                      \n                  <td><b>Cheque Nº :</b></td>\n                  <td>{this.props.dato.nCheque}</td>                  \n                  <td><b>Banco :</b></td>\n                  <td >{this.props.dato.nBanco}</td>                  \n                </tr>   \n              </tbody>  \n              :\n              <tbody>                  \n              <tr>                      \n                <td><b>Son :</b></td>\n                <td colSpan=\"3\">                    \n                  {writtenNumber(this.props.dato.montoTotal, {lang: 'es'})}   { this.props.dato.montoTotal.toString().split('.')[1]} / 100 \n                  {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(0)}\n                </td>                  \n              </tr>                \n                 \n            </tbody> \n            }        \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"20%\">Código</th>\n                <th width=\"50%\">Cuentas Afectadas</th>                                \n                <th width=\"15%\" className=\"text-center\">Debe</th>\n                <th width=\"15%\" className=\"text-center\">Haber</th>                                \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n                  {this.props.data.map((item, index) => (\n                      <tr key={item.id}>                      \n                        <td>{item.codigo}</td>\n                        <td className={(item.debe === '0' || item.debe === 0) ? \"santxt\": \"text-left\"}>{item.descripcion}</td>                                                                                                                                      \n                        <td className=\"text-center\">                          \n                          {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.debe)}\n                        </td>                                             \n                        <td className=\"text-center\">                          \n                          {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.haber)}\n                        </td>\n                      </tr>  \n                  ))}\n                  <tr>\n                  <td colSpan=\"2\"></td>  \n                  <td className=\"text-center\">\n                    <b>{new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.dato.tDebe)}</b>\n                    \n                  </td>\n                  <td className=\"text-center\">\n                  <b>{new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.dato.tHaber)}</b>                  \n                  </td>\n                  </tr>\n              </tbody>\n          )}\n\n            </Table>            \n            <Table className=\"table-simple\">\n            <thead>\n              <tr>  \n                <th width=\"30%\" className=\"text-center\">Confeccionó</th>\n                <th width=\"20%\" className=\"text-center\">Contador</th>                                \n                <th width=\"20%\" className=\"text-center\">GERENTE</th>\n                <th width=\"30%\" className=\"text-center\">BENEFICIARIO</th>                                \n              </tr>\n            </thead>          \n            <tbody>\n                <tr>\n                  <td >.</td>\n                  <td >.</td>\n                  <td >.</td>\n                  <td >.</td>\n                </tr>\n            </tbody>\n            </Table>\n            </Col>      \n        </Row>   \n        </div>   \n\n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Impresión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n      \n    </> \n    );\n  }\n}\n\n\nfunction ArticuloResumen () {    \nconst dispatch = useDispatch()\nconst { item, items } = useSelector(state => state.comprobantes)\nconst iteme = useSelector(state => state.empresa.item)  \nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{       \n  \n     return () =>{            \n        dispatch({type:'COMPROBANTES_RESET_ITEMS'}) \n        dispatch({type:'COMPROBANTES_RESET_ITEM'}) \n    };\n  }, []);\n\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}           \n            user={usuario}\n            empresa={iteme}\n        />\n    </div>\n     )\n}\n\n\nexport default ArticuloResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ButtonGroup, Row,Col,Button, Form, Modal, ModalBody, FormGroup, Input, Card  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faEdit, faSearch, faPlus, faTimes, faFilePdf, faChartArea } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport ComprobanteResumen from './ComprobanteResumen'\nimport { custom } from '../../../../helpers/customStyles'\n\n\nconst page =[{\"value\":'glosaComprobante',\"label\":'glosa'},\n             {\"value\":'label',\"label\":'sujeto'}\n            ];\n\nconst tipos =[\n            {\"value\":'Diario',\"label\":'Diario'},\n            {\"value\":'Ingreso',\"label\":'Ingreso'},\n            {\"value\":'Egreso',\"label\":'Egreso'}                        \n           ];            \n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchComprobantes = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, estado}= useSelector(state => state.comprobantes)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [prop, setProp] = useState('glosaComprobante');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n    const [viewx, setviewx] = useState(false);\n    const [viewz, setviewz] = useState(false);    \n    const [tipo, setTipo] = useState('Diario');\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n       \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('COMPROBANTES_DATA','comprobantes',iok))              \n   }  \n  \n    const createHandle = () => { \n      let eItem = {                                               \n          usuarioId : usuario.id,                    \n          tipoComprobante: tipo\n      }\n      dispatch(crudActions.SET_ADD('COMPROBANTES_DATA','comprobantes',eItem,'lista'))      \n      dispatch({type:'COMPROBANTES_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})     \n      setview(false)                                 \n   }\n\n\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n  const toggleModalViewx = () => {        \n    setviewx(!viewx)      \n             \n  };\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)      \n             \n  };\n\n  const viewArticulo = () => {                    \n    dispatch(crudActions.GET_ITEM('COMPROBANTES_ITEM','comprobantes',indicador))\n    setviewz(!viewz)\n  }; \n\n\n\n  const aprobarComprobante = () => {    \n    let itt={\n      id:indicador\n    }\n    let iok ={\n      item : itt\n    }   \n    \n    dispatch(crudActions.SET_APROBAR('COMPROBANTES_DATA','comprobantes/aprobar',iok,'lista'))     \n    dispatch({type:'COMPROBANTES_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setviewx(false)\n  };\n\n\n    return (                                      \n      <>             \n       <Card>    \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faChartArea} />  \n          </div>        \n        </Col>    \n        <Col md={4} className=\"cards\">\n          <ButtonGroup>\n              <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  onClick={()=> toggleModalView()}>\n                  <FontAwesomeIcon icon={faPlus}/> </Button>                 \n              <Button className={indicador === 0  || estado === 'aprobado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                  <FontAwesomeIcon icon={faEdit} /></Button>                                                         \n              <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n                  <FontAwesomeIcon icon={faFilePdf} /> </Button>                              \n              <Button className={indicador === 0  || estado === 'aprobado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewx()} >\n                  <FontAwesomeIcon icon={faCheck} /></Button>     \n          </ButtonGroup>\n        </Col>\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col>\n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } COMPROBANTES</p>          \n        </Col>\n\n      </Row>   \n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">selecciona tipo de comprobante</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"12\" className=\"text-center\">\n                  <Select                                                               \n                      defaultValue={tipos[0]}\n                      styles={custom} \n                      name=\"tipo\"    \n                      id=\"tipo\"  \n                      value={defaultVal(tipos,tipo)}              \n                      options={tipos}                            \n                      onChange={ (e) => setTipo(e.value)}                                                 \n                  />\n              </Col>            \n            </Row>\n            <Row>\n              <Col>\n                <Button className=\"btn-success btn-md\"  onClick={() => createHandle()} >\n                  <FontAwesomeIcon icon={faCheck} />\n                </Button>\n              </Col>\n            </Row>  \n          </ModalBody>\n      </Modal>   \n\n        <Modal isOpen={viewx} toggle={toggleModalViewx} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea aprobar el comprobante ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalViewx()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => aprobarComprobante()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ComprobanteResumen/>\n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchComprobantes;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  \n    Row,\n    Col,\n    Button, FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem\n  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst SearchsPuc = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.pucs)  \n    const { items, item  } = useSelector(state => state.comprobantes)  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');    \n    const [auxiliar, setAuxiliar] = useState('');    \n    const [puc, setPuc] = useState({});\n        \n\n    \n    const [debe, setDebe] = useState(0);\n    const [haber, setHaber] = useState(0);\n  \n\n    \n    const changeHandler = event => {    \n      const { value } = event.target        \n      let prop = isNaN(value) ? 'descripcion':'codigo'      \n\n      const name = value.toLowerCase().trim();\n      if (!value) {      \n        clearInput();\n        return;\n      }  \n      setName(value)\n      setOpen(true)\n  \n      if (name) {\n        search(prop,name);\n      }       \n    } \n    const search = (prop,searchTerm) =>{      \n  \n      dispatch(crudActions.GET_LIST('PUCS_LISTA','pucs',prop,searchTerm)) \n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)      \n      setDebe(0)\n      setHaber(0)\n    } \n    \n    \n    const add = () =>{  \n      console.log(items)\n      let ites = [...items]      \n      let sDebe  = parseFloat(item.tDebe)\n      let sHaber = parseFloat(item.tHaber)        \n      \n      let itemAsiento = {};        \n        itemAsiento.pucId          = puc.id;\n        itemAsiento.comprobanteId  = item.id;\n        itemAsiento.codigo      = puc.codigo; \n        itemAsiento.descripcion = puc.descripcion;                        \n        itemAsiento.auxiliar    = auxiliar;    \n        itemAsiento.debe        = parseFloat(debe)\n        itemAsiento.haber       = parseFloat(haber)        \n        ites.push(itemAsiento);           \n        sDebe = parseFloat(sDebe) +parseFloat(debe)        \n        sHaber = parseFloat(sHaber) +parseFloat(haber)        \n        dispatch({type:'COMPROBANTES_SET_ITEMS',values:ites})  \n        dispatch(crudActions.SET_CHANGE('COMPROBANTES_CHANGE','tDebe',sDebe))\n        dispatch(crudActions.SET_CHANGE('COMPROBANTES_CHANGE','tHaber',sHaber))    \n        clearInput()\n    }\n\n    const handleAsignar = (puc) =>{            \n      setPuc(puc)  \n      setName('('+puc.codigo+') - '+puc.descripcion+' ('+puc.tipo+')')    \n      setOpen(false)\n    }\n\n \n    return (       \n        <>                              \n          <Row form className=\"mt-2 ml-2 mr-2 mb-2\">                      \n            <Col md={5}>\n              <FormGroup>   \n                <Label for=\"eNombre\">Nombres o código</Label>                 \n                <Input type=\"text\" name=\"name\" id=\"name\" value={name || ''} onChange={changeHandler} />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>   \n                <Label for=\"eAuxiliar\">Auxiliar</Label>                 \n                <Input type=\"text\" name=\"auxiliar\" id=\"auxiliar\" value={auxiliar || ''} onChange={(e) => {setAuxiliar(e.target.value)}} />\n              </FormGroup>\n            </Col>                 \n            <Col md={2}>\n              <FormGroup>   \n                <Label for=\"eValor\">Debe</Label>                 \n                <Input type=\"number\" name=\"debe\" id=\"debe\" value={debe} onChange={(e) => setDebe(e.target.value)} />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>   \n                <Label for=\"eValor\">Haber</Label>                 \n                <Input \n                            type=\"number\" \n                            name=\"haber\"                             \n                            id=\"haber\"    \n                            value={haber}                          \n                            onChange={(e) => setHaber(e.target.value)} />\n                        </FormGroup>\n                      </Col>\n                                      \n                      <Col md={1}>\n                        <Button className={ (debe === 0 || haber === 0)  ? \"btn-rd btn-disabled mt-3\":\"btn-rd btn-danger mt-3\"}\n                          onClick={() => add() }\n                        >\n                         <FontAwesomeIcon icon={faArrowDown} />                          \n                        </Button>\n                      </Col>\n                    </Row>                  \n      \n          \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.descripcion} - ({item.tipo})  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n          </>                                     \n    );\n};\nexport default SearchsPuc;\n","import React,{useEffect} from \"react\";\nimport { Table, Row, Col, Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ListaComprobantes = () => {\n   const dispatch = useDispatch() \n   const {items, item }= useSelector(state => state.comprobantes)\n   const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n   const removeItem = (index) => {     \n    var array = [...items];          \n    let sDebe  = parseFloat(item.tDebe)  \n    sDebe = sDebe - parseFloat(array[index].debe);\n    let sHaber = parseFloat(item.tHaber) \n    sHaber = sHaber - parseFloat(array[index].haber);\n    array.splice(index, 1);    \n    dispatch({type:'COMPROBANTES_SET_ITEMS',values:array}) \n    dispatch(crudActions.SET_CHANGE('COMPROBANTES_CHANGE','tDebe',sDebe))\n    dispatch(crudActions.SET_CHANGE('COMPROBANTES_CHANGE','tHaber',sHaber))    \n    }\n\n    const submitHandle = () => { \n      let eItem = item                     \n      eItem.usuarioId = usuario.id\n      eItem.tDebe     = item.tDebe\n      eItem.tHaber    = item.tHaber\n     \n      let xcode ={\n        item : eItem,\n        items: items\n      }\n      dispatch(crudActions.SET_UPDATES('COMPROBANTES_ADD','comprobantes',xcode,'unit'))         \n   }\n\n   \n   useEffect(() => {    \n    return () => {\n      dispatch({type:'COMPROBANTES_RESET_ITEMS'})   \n    };\n}, []);\n  return(\n    <>    \n    <Row>\n      <Col className=\"mt-2 ml-2 mb-2 mr-2\">\n        <Table className=\"table-simple\">\n          <thead>\n              <tr>                  \n                <th width=\"20%\">Código</th>\n                <th width=\"35\">Cuentas Afectadas</th>\n                <th width=\"10\">Auxiliar</th>                \n                <th width=\"15%\" className=\"text-center\">Debe</th>            \n                <th width=\"15%\" className=\"text-center\">Haber</th>                \n                <th width=\"5%\"></th>                   \n              </tr>\n          </thead>\n          {items && (\n              <tbody>\n                  {items.map((item, index) => (\n                      <tr key={index}>                                           \n                        <td>{item.codigo || ''}</td>                        \n                        <td className={(item.debe === '0' || item.debe === 0) ? \"text-center\": \"text-left\"}>{item.descripcion || ''}</td>  \n                        <td >{ item.auxiliar }</td>                                                                                                                  \n                        <td className=\"text-center\">{new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.debe)}</td>                     \n                        <td className=\"text-center\">{new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.haber)}</td>\n                        <td>\n                          <Button className=\"btn btn-danger\" \n                            onClick={() => { removeItem(index)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>                                           \n                        </td>\n                      </tr>  \n                      ))}\n                      <tr>\n                        <td colSpan=\"3\" className=\"text-center\"><b>TOTAL</b> </td>\n                        <td className=\"text-center\">\n                        <b>{new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.tDebe)}</b>\n                        </td>\n                        <td className=\"text-center\">\n                          <b>{new Intl.NumberFormat({style: \"currency\",minimumFractionDigits: 2}).format(item.tHaber)}</b>                          \n                        </td>\n                      </tr>\n              </tbody>\n          )}\n        </Table>  \n      </Col>        \n    </Row>  \n    \n    <Row form>\n      <Col md={2} >\n          <Button\n              className={(item.tDebe > 0 && item.tHaber > 0) && (item.tDebe === item.tHaber) ? \"btn-md btn-warning\" : \"btn-md btn-warning disabled\" }\n              onClick={() => submitHandle()}>\n              <FontAwesomeIcon icon={faSave} />  \n                Actualizar                        \n          </Button> \n      </Col>         \n    </Row>       \n</>      \n  )\n\n};\nexport default ListaComprobantes;\n","import React  from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Label, FormGroup, Input, Row, Col, Card, CardBody, Button } from \"reactstrap\"\n\nimport SearchsPuc from '../../Pucs/components/SearchsPuc'\nimport ListaComprobantes from \"./ListaComprobantes\";\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport writtenNumber from 'written-number'\n\n\nconst EditComprobante = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const { item } = useSelector(state => state.comprobantes)  \n  const { titem } = useSelector(state => state.tdcs)  \n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n  const changeHandler = event => {        \n    const { name, value } = event.target  \n    dispatch(crudActions.SET_CHANGE('COMPROBANTES_CHANGE',name,value))  \n}\n\n  var d = new Date();\n    return (      \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA COMPROBANTES\n          </Button>              \n        </Col>  \n      </Row>      \n\n      <Row>\n        <Col className=\"mt-3 ml-2\">\n        <h6>Comprobante de {item.tipoComprobante} Nº {item.numComprobante}</h6>\n        </Col>\n      </Row>\n\n      <Row>        \n        <Col md=\"3\">\n          <Card className=\"card-cmd\">       \n          <FormGroup>\n            <Row form>    \n                <Col md={4}>                  \n                  <Label for=\"fecha\">Fecha : </Label>\n                </Col>\n                <Col md={8}>                  \n                <Moment format=\"DD/MM/YYYY\">{d}</Moment>  \n                </Col>                \n            </Row>\n          </FormGroup>     \n            \n            <FormGroup>\n              <Row form>    \n                <Col md={4}>                  \n                  <Label for=\"mTotal\">Tipo de Cambio</Label>\n                </Col>\n                <Col md={8}>                  \n                  <Input type=\"number\" name=\"titem\" id=\"titem\" \n                      value={titem}                          \n                      onChange={ (e) => changeHandler(e)}                                                 \n                      readOnly={true}\n                  />\n                </Col>\n              </Row>\n            </FormGroup> \n            <FormGroup>\n              <Row form>    \n                <Col md={4}>                  \n                  <Label for=\"mTotal\">Total</Label>\n                </Col>\n                <Col md={8}>                  \n                  <Input type=\"number\" name=\"montoTotal\" id=\"montoTotal\" \n                          value={item.montoTotal}                          \n                          onChange={ (e) => changeHandler(e)} \n                          min=\"0.00\"\n                          step=\"0.001\"\n                          max=\"1.00\"\n                          presicion={2}                          \n                          />\n                  </Col>\n              </Row>\n            </FormGroup> \n            { item.tipoComprobante === 'Ingreso' || item.tipoComprobante === 'Egreso' ?    \n              <> \n                <FormGroup>\n                  <Row form>    \n                    <Col md={4}>                  \n                      <Label for=\"mTotal\">{ item.tipo === 'Ingreso' ? 'Recibimos de': 'Pagamos a'} :</Label>\n                    </Col>\n                    <Col md={8}>                  \n                      <Input type=\"text\" name=\"label\" id=\"label\" \n                          value={item.label || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                    </Col>\n                  </Row>\n                </FormGroup>  \n                <FormGroup>\n                  <Row form>    \n                    <Col md={4}>                  \n                      <Label for=\"mTotal\">La suma de :</Label>\n                    </Col>\n                    <Col md={8}>                                                                    \n                      <p className=\"letter\">{writtenNumber(item.montoTotal, {lang: 'es'})}   { item.montoTotal.toString().split('.')[1]} / 100 \n                      {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(0)}\n                      </p>                                                 \n                    </Col>\n                  </Row>\n                </FormGroup> \n                \n                <FormGroup>\n                    <Row form>    \n                      <Col md={4}>                  \n                        <Label for=\"mGlosa\">Por concepto de :</Label>\n                      </Col>\n                      <Col md={8}>                  \n                        <Input type=\"textarea\" name=\"glosaComprobante\" id=\"glosaComprobante\" \n                          value={item.glosaComprobante || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                      </Col>\n                    </Row>\n                  </FormGroup>   \n                  <FormGroup>\n                    <Row form>    \n                      <Col md={4}>                  \n                        <Label for=\"mCheque\">N º de Cheque :</Label>\n                      </Col>\n                      <Col md={8}>                  \n                        <Input type=\"text\" name=\"nCheque\" id=\"nCheque\" \n                          value={item.nCheque || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                      </Col>\n                    </Row>\n                  </FormGroup>  \n                  <FormGroup>\n                    <Row form>    \n                      <Col md={4} >                  \n                        <Label for=\"mBanco\">Banco :</Label>\n                      </Col>\n                      <Col md={8}>                  \n                        <Input type=\"text\" name=\"nBanco\" id=\"nBanco\" \n                          value={item.nBanco || ''}                          \n                          onChange={ (e) => changeHandler(e)} />\n                      </Col>\n                    </Row>\n                  </FormGroup> \n              </>:\n               <FormGroup>\n               <Row form>    \n                 <Col md={2}>                  \n                   <Label for=\"mTotal\">Son :</Label>\n                 </Col>\n                 <Col md={9}>                                                                    \n                   <p className=\"letter\">{writtenNumber(item.montoTotal, {lang: 'es'})}   { item.montoTotal.toString().split('.')[1]} / 100 \n                   {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda}).format(0)}</p>                          \n                 </Col>\n               </Row>\n             </FormGroup> \n            }  \n            \n          </Card>\n        </Col>\n        <Col md=\"9\">\n          <Card> \n            <SearchsPuc/>\n            <ListaComprobantes/>\n          </Card>\n        </Col>                  \n      </Row>\n      </>\n    );\n};\nexport default EditComprobante;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableComprobantes from \"./components/TableComprobantes\";\nimport SearchComprobante from \"./components/SearchComprobante\";\nimport EditComprobante from \"./components/EditComprobante\";\n\n\nconst Comprobantes = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView } = useSelector(state => state.comprobantes)  \n  \n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchComprobante getComponent={getComponent}/><TableComprobantes getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'COMPROBANTES_RESET_ITEM'})\n          setComponent(<EditComprobante getComponent={getComponent}/>)\n          break;\n        case 'edit':\n         \n          dispatch(crudActions.GET_ITEM_LOAD('COMPROBANTES_ITEM','comprobantes',key))           \n          setComponent(<EditComprobante getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga comprobantes')\n    };\n  }, []); \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">     \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Comprobantes;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTags, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\nconst tipo =[{\"value\":'codigo',\"label\":'codigo'},\n             {\"value\":'descripcion',\"label\":'descripcion'}];\n\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n           item.value === valor\n  )}\n\nconst SearchPuc = () => {\n    const dispatch = useDispatch()    \n    const { total }= useSelector(state => state.pucs)\n    const [prop, setProp] = useState('codigo');\n    const [value, setValue] = useState();\n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n    \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      console.log(iok)\n      dispatch(crudActions.GET_SEARCH('PUCS_DATA','pucs',iok))      \n\n     }   \n    return (                                        \n      <Card>          \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faTags} />  \n          </div>        \n        </Col>        \n\n        <Col md={7} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={2}>\n                 <Select                 \n                      styles={customs}                                              \n                      defaultValue={tipo[0]}\n                      name=\"prop\"    \n                      id=\"prop\"                    \n                      options={tipo}      \n                      isClearable={false}                          \n                      value={defaultVal(tipo,prop)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n              </Col> \n              <Col md={9}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } CUENTAS</p>          \n        </Col>   \n      </Row>\n      </Card>                  \n    );\n};\nexport default SearchPuc;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst niveles =[{\"value\":0,\"label\":\"Nivel\"},\n              {\"value\":1,\"label\":\"1\"},\n              {\"value\":2,\"label\":\"2\"},\n              {\"value\":3,\"label\":\"3\"},\n              {\"value\":4,\"label\":\"4\"},\n              {\"value\":5,\"label\":\"5\"},\n              {\"value\":6,\"label\":\"6\"},\n              {\"value\":7,\"label\":\"7\"}\n            ];\n\nconst TablePucs = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.pucs)\n   const [nivel, setnivel] = useState(0);\n  \n\n   const makeHttpRequestWithPage = useCallback((page, num) =>{\n    dispatch(crudActions.GET_DATA('PUCS_DATA','pucs',page, num,0,0))      \n    console.log('segui1')\n  },[]) \n\n  const changeNivel = (pky) => {  \n    const {value} = pky  \n    dispatch(crudActions.GET_DATA('PUCS_DATA','pucs',1, 15,value,value))      \n  };\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('PUCS_ADD','pucs',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('PUCS_ITEM','pucs',pky))\n  };\n\n  useEffect(() => {\n    makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'PUCS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"12%\">Código</th>\n                  <th width=\"48%\">Descripción</th>\n                  <th width=\"15%\" className=\"text-center\">Tipo</th>                             \n                  <th width=\"5%\">\n                  <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={niveles[0]}\n                        name=\"nivel\"    \n                        id=\"nivel\"                    \n                        options={niveles}      \n                        isClearable={false}                          \n                        value={defaultVal(niveles,nivel)}    \n                        onChange={ (e) => changeNivel(e)}                                             \n                      />\n                  </th>                             \n                  <th width=\"15%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.descripcion}</td>\n                        <td>{item.tipo}</td>\n                        <td className=\"text-center\">{item.nivel}</td>\n                        <td className=\"text-center\">\n                          <Button className=\"btn-tb btn-primary\" \n                            onClick={() => { getItem(item.id)}}>\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>  \n                          <Button className=\"btn-tb btn-danger\" \n                            onClick={() => { deleteItem(item.id)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button> \n\n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={8} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={2}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TablePucs;\n","import React,{useState, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select' \nimport { customStyles } from '../../../../helpers/customStyles'\n\nconst tipos =[              \n              {\"label\":\"Activo\",\"value\":\"Activo\"},\n              {\"label\":\"Pasivo\",\"value\":\"Pasivo\"},\n              {\"label\":\"Capital\",\"value\":\"Capital\"},\n              {\"label\":\"Ingresos\",\"value\":\"Ingresos\"},\n              {\"label\":\"Costos\",\"value\":\"Costos\"},\n              {\"label\":\"Gastos\",\"value\":\"Gastos\"},              \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }   \n\nconst EditPuc = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.pucs.item)  \n    \n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('PUCS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()            \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('PUCS_ADD','pucs',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('PUCS_ADD','pucs',item,'lista'))           \n        }   \n        \n        \n        console.log(item) \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'PUCS_RESET_ITEM'})        \n      };\n    }, []); \n\n    const changeHandlers = event => {    \n      const { name, value } = event      \n      dispatch(crudActions.SET_CHANGE('PUCS_CHANGE','tipo',value))  \n  }\n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"ecodigo\">Código</Label>\n                        <Input type=\"text\" name=\"codigo\" id=\"ecodigo\" \n                          value={item.codigo || ''}\n                          required={true}\n                          onChange={ (e) => changeHandler(e)} />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"edescripcion\">Descripción</Label>\n                      <Input type=\"text\" name=\"descripcion\" id=\"descripcion\"  \n                        value={item.descripcion || ''} \n                        required={true}\n                        onChange={ (e) => changeHandler(e)}  />\n                    </FormGroup>   \n                  </Col>\n                </Row> \n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enivel\">Tipo</Label>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={tipos[0]}\n                        name=\"tipo\"    \n                        id=\"tipo\"                    \n                        options={tipos}      \n                        isClearable={false}                          \n                        value={defaultVal(tipos,item.tipo)}    \n                        onChange={ (e) => changeHandlers(e)}  \n                      />\n                    </FormGroup>   \n                  </Col>\n                </Row>\n                \n                <Row form>                  \n                  <Col md={5}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditPuc;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport SearchPuc from './components/SearchPuc'\nimport TablePucs from \"./components/TablePucs\";\nimport EditPuc from \"./components/EditPuc\"\n\nconst PucsView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">       \n         <Row>\n            <Col md={12}>\n            <SearchPuc/>\n            </Col>            \n         </Row>\n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditPuc/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TablePucs/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default PucsView;\n","import React from \"react\";\nimport { Row, Col, Form, Label, Button, Input, FormGroup } from 'reactstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { registerLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nimport { getMes } from '../../../../helpers/funciones'\nregisterLocale('es', es)\n\n\nfunction FormTarea({fecha,toogleModalView}){\n  const dispatch = useDispatch()    \n  const { item }  = useSelector(state => state.tdcs)   \n  const ff = new Date()\n  \n  const changeHandler = event => {          \n    const { name, value } = event.target  \n    dispatch(crudActions.SET_CHANGE('TDCS_CHANGE',name,value))   \n  }\n  const submitHandle = event => {       \n    event.preventDefault()   \n    const {desde, hasta} = getMes() \n    let iok = item    \n    iok.end       = fecha ? fecha :item.end  \n    iok.start     = fecha ? fecha :item.start \n    iok.inicio    = desde\n    iok.fin       = hasta   \n    iok.monto     = parseFloat(item.title) \n    iok.backgroundColor = \"#fd5d93\"\n    iok.gestion   = ff.getFullYear()\n    console.log(iok)\n    if(item.id)\n    {\n      dispatch(crudActions.SET_UPDATE('TDCS_ADD','tdcs',iok,'unit'))            \n    }else{\n      dispatch(crudActions.SET_ADD_SINGLE('TDCS_ADD','tdcs',iok)) \n    }\n    \n    toogleModalView()\n  }\n\n\n \nreturn(\n    <div className=\"registroCalendarios\">\n    <h6 className=\"ml-1 mt-2\" >Registro de Tipo de Cambio</h6>  \n    <Form onSubmit={ submitHandle }>                \n      <Row form>\n        <Col md={5}>   \n          <FormGroup>\n            <Label for=\"titulo\">Monto</Label>\n              <Input\n                  id=\"title\"\n                  name=\"title\"                    \n                  type=\"number\"\n                  value={item.title || ''}\n                  onChange={ (e) => changeHandler(e)}                                 \n                  onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                  onInput={(e) => e.target.setCustomValidity('')}\n                  required />\n          </FormGroup>\n        </Col>\n      </Row>       \n      <Row form>        \n        <Col md={3}>\n          <Button \n            type=\"submit\"\n            className=\"btn-md btn-info mt-2\">\n            <FontAwesomeIcon icon={faSave} /></Button>\n        </Col>\n      </Row> \n    </Form>  \n    </div>       \n  )\n}\n\n\nexport default FormTarea","import React, { useEffect, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react'\nimport { Modal } from 'reactstrap'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport esLocale from '@fullcalendar/core/locales/es'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport FormTdc from \"./FormTdc\"\nimport { getMes } from \"../../../../helpers/funciones\";\n\n\n\nconst Calendar = () => {  \n  const dispatch = useDispatch()\n  const {data, item}  = useSelector(state => state.tdcs)   \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const [modalView, setModalView] = useState(false)\n  const [fecha, setfecha] = useState('');\n\n  const makeHttpRequestWithPage = (xredux) =>{\n    const {desde, hasta } = getMes()        \n    let dato = {}\n    dato.usuarioId = user.id\n    dato.start = desde\n    dato.end = hasta\n    dato.inicio = desde\n    dato.fin = hasta    \n    dispatch(crudActions.SET_ADD_LOAD(xredux,'tdcs',dato,'lista'))  \n  }\n  \n\nuseEffect(() =>{            \n  makeHttpRequestWithPage('TDCS_DATA','tdcs');          \n  return () =>{            \n    dispatch({type:'TDCS_RESET'})\n};\n}, []);\nconst toogleModalView = () => {                                               \n  setModalView(false)\n}\n\nconst register = (arg) =>{  \n  setfecha(arg.dateStr)\n  setModalView(true)\n}\n\nconst registers = it =>{  \n  \n  let kko = {    \n    id      : it.event.id,    \n    title   : it.event.title,    \n    start   : it.event.start,\n    end     : it.event.start,\n    detalle   : it.event.extendedProps.detalle,\n    usuarioId : it.event.extendedProps.usuarioId,\n    backgroundColor : it.event.backgroundColor    \n  }     \n  dispatch({type:'TDCS_ITEM',response:kko})  \n  setModalView(true)\n}\n\n\nreturn(\n  <>\n  <div className=\"registroCalendario\">\n  <h6 className=\"ml-1 mt-2\" >Tipos de Cambio</h6>  \n  <FullCalendar      \n     \t\tlocales={[ esLocale]}  \n     \t\tlocale= {'es'}\n        timeZone={'America/La_Paz'}\n        navLinks={true}\n        height={540}\n     \t\tplugins={[  dayGridPlugin, timeGridPlugin, interactionPlugin ]}\n        defaultView=\"dayGridMonth\"                        \n        header={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth'\n            }}\n     \t\tevents= { data }                                           \n        dateClick={ register }\n        eventClick={ registers }                   \n  />\n  </div>\n   <Modal \n   modalClassName=\"modal-task\"\n   isOpen={modalView}\n   toggle={ toogleModalView } \n   > \n   <FormTdc\n    fecha={fecha}\n    toogleModalView={toogleModalView}\n   />          \n   </Modal>\n   </>\n)\n}\n\n\nexport default Calendar","import React from \"react\";\nimport { Col, Row, Card } from 'reactstrap'\nimport Calendar from './components/Calendar'\nimport FormTdc from './components/FormTdc'\n\nconst TareasView = () => (\n  <div className=\"content\">        \n    <div className=\"main-contenido\"> \n      <Row>        \n        <Col md=\"12\">\n          <Card>\n            <Calendar />\n          </Card>\n        </Col>               \n      </Row>\n    </div>\n  </div>  \n );\n\nexport default TareasView\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subConta = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/finanzas/${item.link}/`}\n        className=\"nav-link\"> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subConta;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { Table, Row, Col, Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactToPrint from \"react-to-print\";\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE DIARIOS  </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"10%\" className=\"text-dark\">Nº</th>\n                <th width=\"15%\" className=\"text-dark\">Código</th>\n                <th width=\"45%\" className=\"text-dark\">Detalle</th>                                                                                               \n                <th width=\"15%\" className=\"text-dark text-center\">Debe</th>                    \n                <th width=\"15%\" className=\"text-dark text-center\">Haber</th>                 \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>  \n                    <td>{index+1}</td>\n                    <td>{item.codigo}</td>\n                    <td>{item.detalle}</td>                    \n            \n\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.debe)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.haber)}</td>\n\n                  </tr>  \n                ))}\n                <tr>  \n                    <td colSpan=\"3\"></td>                   \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pdebito)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcredito)}</td>\n                  </tr>\n            </tbody>\n        )}\n            </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Movimientos ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { diarios, sumaDebito, sumaCredito } = useSelector(state => state.contables)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'CONTABLES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            pdata={diarios}                                    \n            pvalue1={value1}\n            pvalue2={value2}\n            puser={user}\n            pdebito={sumaDebito}\n            pcredito={sumaCredito}\n            \n        />\n    </div>\n     )\n}\n\n\nexport default Movimientos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subConta.jsx';\nimport { ContabilidadRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\n\nimport { useDispatch } from 'react-redux'\nimport Diarios  from './components/Diarios';\n\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\n\nconst DiariosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date()); \n  \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2      \n    dispatch(crudActions.GET_CONTABLES('CONTABLES_DIARIOS','diarios',item))                     \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n       <SubMenu items={ContabilidadRouter} prop='Contabilidad'/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col>FILTRO DE BUSQUEDA</Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Diarios            \n            value1={value1}\n            value2={value2}            \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default DiariosView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE DIARIOS  </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>    \n            <Table className=\"table-reporteh mt-2\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>{this.props.pcuenta.codigo}</b></td>\n                  <td><b>CUENTA</b></td>\n                  <td><b>{this.props.pcuenta.descripcion}</b></td>\n                </tr>                                               \n              </tbody>          \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>                                  \n                <th width=\"15%\" className=\"text-dark\">Fecha</th>\n                <th width=\"30%\" className=\"text-dark\">Detalle</th>\n                <th width=\"10%\" className=\"text-dark\">Asiento Nº</th>\n                <th width=\"15%\" className=\"text-dark text-center\">Debe</th>                    \n                <th width=\"15%\" className=\"text-dark text-center\">Haber</th>                 \n                <th width=\"15%\" className=\"text-dark text-center\">Saldo</th>  \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item,index) => (\n                  <tr key={item.id}>                      \n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaAsiento}</Moment></td>                    \n                    <td>{item.detalle}</td>                    \n                    <td>{item.id}</td>     \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.debito)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.credito)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.saldo)}</td>\n                  </tr>  \n                ))}\n                <tr>  \n                    <td colSpan=\"3\"></td>                   \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pdebito)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcredito)}</td>\n                    \n                </tr>\n                <tr>  \n                    <td colSpan=\"2\"></td>                   \n                    <td >Cierre de gestión</td>                   \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.cdebito)}</td>\n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.ccredito)}</td>                    \n                </tr>\n            </tbody>\n        )}\n            </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Mayores ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { mayores, cuenta, debitoCierre, creditoCierre, sumaDebito, sumaCredito } = useSelector(state => state.contables)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'CONTABLES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            pdata={mayores}                                    \n            pvalue1={value1}\n            pvalue2={value2}\n            puser={user}\n            pdebito={sumaDebito}\n            pcredito={sumaCredito}\n            cdebito={debitoCierre}\n            ccredito={creditoCierre}\n            pcuenta={cuenta}\n            \n        />\n    </div>\n     )\n}\n\n\nexport default Mayores","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Input, Card,CardBody,ListGroup, ListGroupItem } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\n\n\nconst Pucs = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.pucs)  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');    \n\n    \n    const changeHandler = event => {    \n      const { value } = event.target        \n      let prop = isNaN(value) ? 'descripcion':'codigo'      \n\n      const name = value.toLowerCase().trim();\n      if (!value) {      \n        clearInput();\n        return;\n      }  \n      setName(value)\n      setOpen(true)\n  \n      if (name) {\n        search(prop,name);\n      }       \n    } \n    const search = (prop,searchTerm) =>{      \n      let iok ={}      \n      dispatch(crudActions.GET_LIST('PUCS_LISTA','pucs',prop,searchTerm)) \n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)      \n      \n    } \n    \n  \n    const handleAsignar = (puc) => {      \n        dispatch({type:'PUCS_ITEM',response:puc}) \n        setName('('+puc.codigo+') - '+puc.descripcion+' ('+puc.tipo+')')  \n        setOpen(false)\n    }\n\n \n    return (       \n      <>\n      <Input \n          type=\"text\" \n          name=\"name\"                             \n          id=\"name\"  \n          value={name || ''}  \n          onChange={changeHandler} />\n               \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.descripcion} - ({item.tipo})  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n          </>                                     \n    );\n};\nexport default Pucs;\n","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subConta.jsx';\nimport { ContabilidadRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport Mayores  from './components/Mayores';\nimport SearchsPuc from '../Pucs/components/Pucs'\n\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\n\nconst MayoresView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date()); \n  const itpuc  = useSelector(state => state.pucs.item)  \n  \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2      \n    item.pucId = itpuc.id    \n    dispatch(crudActions.GET_CONTABLES('CONTABLES_MAYORES','mayores',item))                     \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n       <SubMenu items={ContabilidadRouter} prop='Contabilidad'/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col>FILTRO DE BUSQUEDA</Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eCuenta\">Cuenta : </Label>\n                    <SearchsPuc/>\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Mayores            \n            value1={value1}\n            value2={value2}            \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default MayoresView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { Table, Row, Col, Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>BALANCE DE SUMAS Y SALDOS  </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                           \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>\n            <Table className=\"table-reportesh mt-2\">            \n          {this.props.pdata && (\n            <tbody>\n              <tr>\n                <td rowSpan=\"2\">Código</td>\n                <td rowSpan=\"2\">Código</td>\n                <td rowSpan=\"2\">Cuentas</td>\n                <td colSpan=\"2\">SUMAS</td>\n                <td colSpan=\"2\">SALDOS</td>\n              </tr>\n              <tr>\n                <td>Debitos</td>\n                <td>Créditos</td>\n\n                <td>Deudor</td>\n                <td>Acreedor</td>\n              </tr>\n  \n                {this.props.pdata.map((item,index) => (\n                  <tr key={index}>  \n                    <td>{index+1}</td>\n                    <td>{item.codigo}</td>\n                    <td>{item.descripcion}</td>                    \n               \n                    \n                    <td className=\"text-center\">\n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.sumaDebito)}\n                    </td>\n                    <td className=\"text-center\">\n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.sumaCredito)}\n                    </td>\n                    <td className=\"text-center\">\n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.deudor)}\n                    </td>\n                    <td className=\"text-center\">\n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(item.acreedor)}\n                    </td>\n\n                  </tr>  \n                ))}\n                <tr>  \n                    <td colSpan=\"3\"></td>                   \n                    <td className=\"text-center\"><b>                      \n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.pdebito)}\n                    </b>\n                    </td>\n                    \n                    <td className=\"text-center\"><b>                      \n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.pcredito)}\n                      </b>\n                    </td>\n                    \n                    <td className=\"text-center\"><b>                      \n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.pdeudor)}\n                    </b></td>\n                    \n                    <td className=\"text-center\"><b>                      \n                      {new Intl.NumberFormat({style: \"decimal\",minimumFractionDigits: 2}).format(this.props.pacreedor)}\n                      </b></td>\n                  </tr>\n            </tbody>\n        )}\n            </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Saldos ({value1, value2}) {    \n  const componentRef = useRef();   \n  const { saldos, totalAcreedor, totalCreditos, totalDebitos, totalDeudor } = useSelector(state => state.contables)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'CONTABLES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            pdata={saldos}                                    \n            pvalue1={value1}\n            pvalue2={value2}\n            puser={user}\n            pdebito={totalDebitos}\n            pcredito={totalCreditos}\n            pacreedor={totalAcreedor}\n            pdeudor={totalDeudor}\n            \n        />\n    </div>\n     )\n}\n\n\nexport default Saldos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subConta.jsx';\nimport { ContabilidadRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { useDispatch } from 'react-redux'\nimport Saldos  from './components/Saldos';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\n\nconst SaldosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date()); \n  \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2      \n    dispatch(crudActions.GET_CONTABLES('CONTABLES_SALDOS','saldos',item))                     \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n       <SubMenu items={ContabilidadRouter} prop='Contabilidad'/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col>FILTRO DE BUSQUEDA</Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Saldos\n            value1={value1}\n            value2={value2}            \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default SaldosView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope, faHome,  faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Contabilidad from \"../../pages/CONTABILIDAD/Contabilidad.jsx\"\nimport Comprobantes from \"../../pages/CONTABILIDAD/Comprobantes/Comprobantes.jsx\"\nimport Puc from \"../../pages/CONTABILIDAD/Pucs/PucsView.jsx\"\nimport Tdc from \"../../pages/CONTABILIDAD/Tdc/TdcView.jsx\"\nimport Libros from \"../../pages/CONTABILIDAD/Diarios/DiariosView.jsx\"\nimport Mayores from \"../../pages/CONTABILIDAD/Mayores/MayoresView.jsx\"\nimport Saldos from \"../../pages/CONTABILIDAD/Saldos/SaldosView.jsx\"\nimport Moment from \"react-moment\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst fechaHoy = new Date()\n\nfunction Finanzas(){\n  const dispatch = useDispatch()     \n    const [itemr,setItemr] = useState([])    \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const modulos = JSON.parse(localStorage.getItem('@userItems')) \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))   \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{            \n            if(prop.icon === \"finanzas\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n            }\n            return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Comprobantes\":\n            return Comprobantes;   \n          case \"Puc\":\n            return Puc;\n          case \"Tdc\":\n            return Tdc;\n          case \"Libros\":\n            return Libros;            \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/finanzas'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))  \n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">        \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>\n            </div> \n            <div className=\"center-unity\">\n              <h6>CONTABILIDAD</h6>  \n            </div> \n            <div className=\"conta-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div> \n            <div className=\"right-unity\">\n                  <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>\n        <Nav> \n          <div className=\"navLeft\">  \n              <NavItem>       \n                <NavLink to=\"/finanzas/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                  <p className=\"text-white\">  Dashboard  </p>\n                </NavLink>          \n              </NavItem>                  \n        \n        {itemr.map((prop, key) => (  \n          <NavItem key={key}>  \n            <NavLink                \n              to={prop.layout + prop.path}\n              className=\"nav-link\"\n              activeClassName=\"active\">               \n              <p> {prop.name}</p>                    \n            </NavLink>\n          </NavItem>))\n        }\n      </div>\n\n        <div className=\"navRight\">          \n          \n        </div>\n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}                       \n          <Route path=\"/finanzas/inicio\" component={Contabilidad} />          \n          <Route path=\"/finanzas/libros\" component={Libros} />\n          <Route path=\"/finanzas/mayores\" component={Mayores} />\n          <Route path=\"/finanzas/saldos\" component={Saldos} />\n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Finanzas;\n\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { ListGroup, ListGroupItem, Badge  } from \"reactstrap\";\n\n\nconst ListaCategoria = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.categorias)   \n    const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n\n    const makeHttpRequestWithPage = () =>{\n        dispatch(crudActions.GET_LIST('CATEGORIAS_LISTA','categorias','nombre','asc'))          \n      }\n    \n    const changeHandler = (io) => {           \n      let iok ={\n        \"almacenId\": almacenId.id,\n        \"pagina\":1,\n        \"num\":20,\n        \"name\":\"\",\n        \"codigo\":\"\",\n        \"categoriaId\":io,\n        \"stock\":3\n      } \n      dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','almacenes',iok))  \n    }     \n    \n    useEffect(() => {\n        makeHttpRequestWithPage()\n        return () => {            \n        };\n    }, []);\n    \n    return (   \n      <>\n      <h6>Categorías</h6>           \n      <ListGroup className=\"categoriasLst justify-content-between\">\n         <ListGroupItem \n         onClick={() => changeHandler(0)}\n         className=\"categoriasItem justify-content-between\">\n            TODAS\n          </ListGroupItem>\n        {data.map((item, index) => (\n          <ListGroupItem key={index} \n          onClick={() => changeHandler(item.value)}\n          className=\"categoriasItem justify-content-between\">\n            {item.label}            \n          </ListGroupItem>    \n        ))}    \n    </ListGroup>\n    </>\n    );\n};\nexport default ListaCategoria;\n","import React,{useEffect, useCallback, useState  } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { Card } from \"reactstrap\";\nimport {toastr} from 'react-redux-toastr'\nimport { api } from \"../../../../helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { parse } from \"@fortawesome/fontawesome-svg-core\";\n\nconst ListaArticulos = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.articulos)  \n    const { items, item } = useSelector(state => state.ventas)  \n    const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n    const handleAsignar = (articulo) => {         \n      if(articulo.stock > 0)\n      {\n        let ites = [...items]\n        let cTotal     = item.nroItems\n        let gTotal     = item.totalGeneral\n        let sTotal     = item.subTotal\n        let gImp       = item.impuesto\n        let tDescuento = item.totalGeneral\n\n        let repeat = false\n        ites.map((itt, index) =>{                              \n          if(itt.articuloId === articulo.articuloId && itt.stock < articulo.stock)\n            { \n              ites[index].cantidad = parseInt(ites[index].cantidad) + 1 \n              ites[index].subTotal = ites[index].subTotal + parseFloat(articulo.valor)        \n              ites[index].stock = ites[index].stock + 1\n              \n              cTotal = parseInt(cTotal) +parseInt(1);                                          \n              \n              gTotal = parseFloat(gTotal) + parseFloat(articulo.valor)              \n              gImp   = parseFloat(gTotal) * parseFloat(item.iva / 100) \n              sTotal = parseFloat(gTotal) - parseFloat(gImp)  \n              repeat = true;              \n            }\n            if(itt.articuloId === articulo.articuloId)\n            {                        \n              repeat = true;\n            }\n          return null\n        })\n\n        if(!repeat)\n          {\n          let itemVenta = {\n            cantidad   : 1,          \n            articuloId : articulo.articuloId,        \n            valor      : articulo.valor,\n            unidad     : articulo.unidad,\n            stock      : 1,\n            subTotal   : parseInt(1) * parseFloat(articulo.valor),        \n            nombre     : articulo.nombreCorto,  \n            sumStock   : articulo.stock  \n          }  \n          ites.push(itemVenta);   \n          \n          cTotal = parseInt(cTotal) +parseInt(1);    \n          gTotal = parseFloat(gTotal) + parseFloat(itemVenta.subTotal)\n          gImp   = parseFloat(gTotal) * parseFloat(item.iva / 100) \n          sTotal = parseFloat(gTotal) - parseFloat(gImp)\n          }        \n\n          dispatch({type:'VENTAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp,totalDescuento: tDescuento})  \n          }else{\n            toastr.error(articulo.nombreCorto, 'Sin Stock') \n          }\n    }  \n\n\n    const makeHttpRequestWithPage = useCallback((page,num) =>{          \n      let iok ={\n        \"almacenId\": almacenId.id,\n        \"pagina\":page,\n        \"num\":num,\n        \"name\":\"\",\n        \"codigo\":\"\",\n        \"categoriaId\":0,\n        \"stock\":3\n      } \n      dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','almacenes',iok)) \n     },[]) \n   \n    \n    useEffect(() => {\n        makeHttpRequestWithPage(1,12)\n        return () => {   \n            dispatch({type:'ARTICULOS_RESET_DATA'})          \n        };\n    }, []);\n\n \n    return (              \n        <>             \n        {data.map((item,index) => (\n        <Card key={index} className=\"articulo\" onClick={() => handleAsignar(item)}>          \n          <div className=\"qprecio\">\n          <div className={item.oferta ? \"qoferta\":\"qaferta\"}><FontAwesomeIcon icon={faStar} /> </div>   \n          <div className=\"qvalor\">          \n          {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}        \n          </div>\n          </div>            \n            <img\n            alt=\"artículo\"\n            className=\"img-articulo\"\n            src={api + \"/static/images/articulos/md/\" + item.filename}\n            />          \n          <div className=\"nombre\">{item.nombreCorto}</div>         \n          <div className={item.stock > 0 ?\"stocki\" :\"stock\"}>{item.stock}</div>            \n        </Card>\n        ))}        \n        </>                  \n                \n    );\n};\nexport default ListaArticulos;\n","import React,{useEffect, useState} from \"react\";\nimport { Table, Row, Col, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ListaItems = () => {\n   const dispatch = useDispatch() \n   const { items, item, artId }= useSelector(state => state.ventas)   \n   const [cnt, setCnt] = useState(-1);\n   const [cantidad, setCantidad] = useState(0);\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n   \n   \n   const handleAsignar = (articuloId) => {      \n    setCnt(articuloId)\n    console.log(articuloId)    \n   } \n\n   const changeHandler = (event,stock) =>{\n    const { name, value } = event.target      \n    if(stock >= value){\n      setCantidad(value)    \n    }\n   }\n\n  const submitHandle = () => {   \n    if(cantidad != 0)\n      {            \n      let ites = [...items]\n      let cTotal = item.nroItems\n      let gTotal = item.totalGeneral\n      let sTotal = item.subTotal\n      let gImp   = item.impuesto\n      let tDescuento = item.totalGeneral\n\n        if (cnt !== -1 ) {\n            let idBlock    = ites[cnt].cantidad\n            let idSubTotal = ites[cnt].subTotal\n            ites[cnt].cantidad = parseInt(cantidad) \n            ites[cnt].subTotal = parseInt(cantidad) * parseFloat(ites[cnt].valor)\n            \n            cTotal = (parseInt(cTotal) - parseInt(idBlock)) + parseInt(cantidad)\n            gTotal = (parseFloat(gTotal) - parseFloat(idSubTotal)) + ites[cnt].subTotal  \n            gImp   = gTotal * parseFloat(item.iva / 100)    \n            sTotal = gTotal - parseFloat(gImp)        \n            tDescuento = tDescuento - parseFloat((ites[cnt].cantidad * ites[cnt].valor));\n\n            dispatch({type:'VENTAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp,totalDescuento:tDescuento})  \n            setCantidad(0)    \n\n        } \n      }\n      setCnt(-1)   \n    \n  }\n  useEffect(() => {\n      /*makeHttpRequestWithPage(1,12)*/\n      return () => {\n      /*    cleanup*/\n      console.log('clean table inventario')\n      };\n  }, []);\n\n  return(\n    <>    \n    <Row>\n    {item.nroItems > 0 && (\n      <Col>            \n        <Table className=\"table-post\">                    \n              <tbody>\n                  {items.map((item, index) => (\n                      <tr key={item.articuloId} onClick={() => handleAsignar(index)} className={artId === index ? \"check\":\"checki\" } >                                              \n                        <td width=\"60%\">                          \n                            <table>\n                              <tbody>\n                                <tr><td colSpan=\"2\"><b>{item.nombre}</b></td></tr>  \n                                <tr>\n                                  { cnt === index ?\n                                   <td>\n                                     <Input \n                                      type=\"text\" \n                                      name=\"cantidad\"                             \n                                      id=\"cantidad\"  \n                                      value={cantidad}  \n                                      onChange={(e) => changeHandler(e,item.sumStock)}\n                                      onDoubleClick={submitHandle}                                       \n                                      /> \n                                   </td>   \n                                  :\n                                  <td className=\"detalles\">{item.cantidad} {item.unidad} / \n                                  ({new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)})</td>\n                                  }\n                                                                    \n                                </tr>  \n                              </tbody>\n                            </table>                          \n                        </td>                                   \n                        <td width=\"40%\" className=\"text-center\">\n                        {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}\n                        </td>                                                      \n                      </tr>  \n                      ))}\n              </tbody>          \n        </Table>\n        <Table className=\"table-posts\">                    \n          <tbody>                              \n            <tr>                                              \n              <td colSpan=\"2\"><b>Sub-Total :</b></td>                                              \n              <td className=\"text-center\">\n                {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}\n              </td>\n            </tr>\n            <tr>                                              \n              <td colSpan=\"2\"><b>Impuesto :</b></td>                                              \n              <td className=\"text-center\">\n                {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.impuesto)}\n              </td>\n            </tr>\n            <tr>                                              \n              <td colSpan=\"2\"><b>Total :</b></td>                                              \n              <td className=\"text-center\">\n                {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}\n              </td>\n            </tr>                        \n          </tbody>          \n        </Table>        \n      </Col>\n      )}\n    </Row>       \n</>      \n  )\n\n};\nexport default ListaItems;\n","import React,{useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faMoneyCheck, faUsers  } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ListaArticulos = () => {\n    const dispatch = useDispatch()        \n    const { items, item } = useSelector(state => state.ventas)      \n\n    const viewForm = () => {                \n        dispatch({type:'VENTAS_VIEW',view:true})         \n    };\n   \n     \n    \n    const handleCancelar = () => {  \n        let ites = []\n        let cTotal = 0\n        let sTotal = 0\n        let gTotal = 0\n        let gImp   = 0\n        let tDescuento = 0\n        dispatch({type:'VENTAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp, totalDescuento : tDescuento})  \n        dispatch({type:'VENTAS_SET_ART',id:-1}) \n\n    }\n    \n    useEffect(() => {        \n        return () => {   \n            /*dispatch({type:'ARTICULOS_RESET'})          */\n        };\n    }, []);\n\n     \n    return (              \n        <div className=\"btnTpv\"> \n          <Row>\n          \n                                        \n            <Col md={12}>\n                <Button className=\"btn btn-md btn-danger btn-tpv\" onClick={() => handleCancelar()}>\n                    <FontAwesomeIcon icon={faTrash} />\n                </Button>\n            </Col>            \n          </Row> \n          <Row>            \n            <Col md={6}>\n                <Button className=\"btn btn-md btn-warning btn-tpv\">\n                    <FontAwesomeIcon icon={faUsers} />\n                </Button>\n            </Col>                \n            <Col md={6}>\n                <Button \n                  className={item.totalGeneral <= 0 ? \"btn btn-md disabled btn-tpv\" : \"btn btn-md btn-success btn-tpv\" }\n                  onClick={() => { viewForm()}}>\n                    <FontAwesomeIcon icon={faMoneyCheck} />\n                </Button>\n            </Col>                                                \n          </Row>                         \n        </div>                                             \n    );\n};\nexport default ListaArticulos;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport {  \n    Row,\n    Col,\n    Card,\n    CardBody,\n    Form,\n    Button, FormGroup, Input, Label, Modal, ModalBody, Table\n  } from \"reactstrap\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst SingleCliente = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.clientes) \n    const itt  = useSelector(state => state.ventas.item) \n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };\n\n    const asignar = (item) => {    \n        let est = modalView === true ? false : true;                     \n        dispatch({type: 'VENTAS_CHANGE', props: 'clienteId', value: item.id})\n        dispatch({type: 'VENTAS_CHANGE', props: 'clients', value: item.nombres})\n        dispatch({type: 'VENTAS_CHANGE', props: 'nits', value: item.nit})\n        setmodalView(est)  \n        dispatch({type:'CLIENTES_RESET_DATA'})             \n    };\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CLIENTES_DATA','clientes',iok))              \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'CLIENTES_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={5}>        \n             <FormGroup>\n              <Label for=\"clients\">Cliente</Label>\n              <Input type=\"text\" name=\"clients\" id=\"clients\" \n                    value={itt.clients}\n                    onChange={ (e) => console.log('nn')}\n                    readOnly={true}/>              \n             </FormGroup>       \n            </Col>\n            <Col md={5}>        \n             <FormGroup>\n              <Label for=\"nit\">Nit</Label>\n              <Input type=\"text\" name=\"nits\" id=\"nits\" \n                    value={itt.nits}\n                    onChange={ (e) => console.log('nn')}\n                    readOnly={true}/>              \n             </FormGroup>       \n            </Col>\n            <Col md={2}>        \n            <Button className=\"btn-rd btn-info mt-3\" onClick={() => toggleModalView()}>\n                <FontAwesomeIcon icon={faSearch} />                          \n            </Button>\n          </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"10%\">Id</th>\n                            <th width=\"60%\">Nombres</th>                            \n                            <th width=\"20%\">Nit</th>            \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                      \n                                    <td>{item.id}</td>\n                                    <td>{item.nombres}</td>                                    \n                                    <td>{item.nit}</td>                                                       \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}                           >\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default SingleCliente;\n","import React from 'react'\nimport Moment from 'react-moment';\nimport { Table } from \"reactstrap\";\nimport writtenNumber from 'written-number'\nexport class Recibotpv extends React.PureComponent {\n  render() {    \n    const fechaHoy = new Date()\n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <div className=\"invoice-recibo\">\n\n      <div className=\"dempresa\">           \n        <p><b>{this.props.empresa.nombre}</b></p>        \n        <p>Calle: {this.props.empresa.direccion}</p>\n        <p>Teléfono: {this.props.empresa.telefono}</p>  \n      </div>  \n      <h6 className=\"dfac\">FACTURA ORIGINAL</h6>\n      <div className=\"dfactura\">                           \n        <p>NIT: {this.props.empresa.nit}</p>\n        <p>Factura Nº: {this.props.empresa.telefono}</p>  \n        <p>Autorización: {this.props.empresa.telefono}</p>  \n      </div>  \n\n      <div className=\"dcliente\">\n        <p>FECHA: <Moment format=\"YYYY/MM/DD\" >{ fechaHoy }</Moment></p>          \n        <p>NIT/CI: {this.props.item.nits}</p>        \n        <p>SR(A): {this.props.item.clients}</p>\n      </div>    \n\n      <div className=\"dconcepto\">\n        <Table className=\"table-recibo\">                    \n          <tbody>\n            <tr>                                              \n              <th width=\"5%\">CANT.</th>\n              <th width=\"55%\">DESCRIPCION</th>\n              <th width=\"20%\">PRECIO</th>\n              <th width=\"20%\">TOTAL</th>                                                           \n            </tr>  \n              {this.props.items.map((item, index) => (\n                  <tr key={item.articuloId}>                                              \n                    <td>{item.cantidad}</td>\n                    <td>{item.nombre}</td>                        \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                  </tr>  \n                ))}\n          </tbody>          \n        </Table>\n        <Table className=\"table-recibo\">                    \n          <tbody>                              \n            <tr>                                              \n              <td width=\"75%\">Sub-Total :</td>                                                  \n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.item.subTotal)}</td>\n            </tr>\n            <tr>                                              \n              <td width=\"75%\">Impuesto :</td>                                                  \n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.item.impuesto)}</td>\n            </tr>\n            <tr>                                              \n              <td width=\"75%\">Total :</td>                                                  \n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.item.totalGeneral)}</td>\n            </tr> \n            \n         \n          </tbody>          \n        </Table>\n      </div> \n    </div>\n    );\n  }\n}\n\nexport default Recibotpv;\n","import React,{useEffect, useState, useRef} from \"react\";\nimport { Row, Col, Button, Form, FormGroup, Label, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SingleCliente from '../../../CRM/Clientes/components/SingleCliente'\nimport Recibotpv from './Recibotpv'\nimport { useReactToPrint } from 'react-to-print';\n\nconst FormVenta = () => {\n   const dispatch = useDispatch() \n   const { items, item }= useSelector(state => state.ventas)   \n   const iteme = useSelector(state => state.empresa.item)   \n   const [ recibido, setRecibido] = useState()    \n   const [ cambio, setCambio] = useState()    \n   const fechaHoy = new Date()\n   const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n   const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n\n    \n   const changeHandler = (event) =>{\n    const { name, value } = event.target  \n    setRecibido(value)\n    setCambio(value - item.totalGeneral)  \n   }\n\n  const submitHandle = event => {       \n    event.preventDefault()         \n      let it = {              \n          \"fechaVenta\": fechaHoy,\n          \"tipo\":'contado',\n          \"nroItems\":item.nroItem,\n          \"totalGeneral\": item.totalGeneral,\n          \"observaciones\":'terminal punto de venta',\n          \"estado\": true,\n          \"usuarioId\": usuario.id,\n          \"clienteId\": item.clienteId ? item.clienteId : 1, \n          \"forma\": \"cajero\"                    \n          }\n      let dato = {\n        item :it,\n        items: items,\n        almacenId: almacenId.id\n      }    \n     dispatch(crudActions.VENTA_DIRECTA('ARTICULOS_DATA','tpv',dato,'lista'))           \n     handlePrint()\n  } \n\n  useEffect(() => {\n      /*makeHttpRequestWithPage(1,12)*/\n      return () => {\n      /*    cleanup*/\n      console.log('clean table inventario')\n      };\n  }, []);\n  const componentRef = useRef();  \n  const handlePrint = useReactToPrint({    \n    content: () => componentRef.current,    \n  });\n\n \n  return(\n    <div className=\"card-contenidos\">    \n    <Row>    \n      <Col md={7} className=\"card-contenido\">       \n      <Recibotpv\n        ref={componentRef} \n        user= {usuario}   \n        empresa={iteme}     \n        items={items}\n        item={item}        \n      />\n      </Col>  \n      <Col md={5} className=\"card-contenido\">\n        <SingleCliente/> \n        <Form onSubmit={ submitHandle}>     \n                    <Row form>\n                      <Col md={12}>\n                        <FormGroup>   \n                        <Label for=\"total\">Total</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"total\"                             \n                            id=\"total\"  \n                            value={item.totalGeneral.toFixed(2)}  \n                            onChange={changeHandler}                             \n                            readOnly={true}/>\n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    \n                    <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"recibido\">Recibido</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"recibido\"                             \n                            id=\"recibido\"  \n                            value={recibido || ''}  \n                            onChange={changeHandler} />\n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"cambio\">Cambio</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"cambio\"                             \n                            id=\"cambio\"  \n                            value={ cambio || ''}  \n                            onChange={changeHandler} \n                            readOnly={true}/>\n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    <Row>\n                      <Col md={12}>\n                        <Button className={(cambio > 0 ) ? \"btn-md btn-info mt-3\": \"btn-md disabled mt-3\"}>\n                         <FontAwesomeIcon icon={faSave} />                          \n                        </Button>\n                      </Col>\n                    </Row>\n        </Form>                   \n      </Col>      \n    </Row>       \n</div>      \n  )\n\n};\nexport default FormVenta;\n","import React,{useEffect, useState} from \"react\";\nimport { Row, Col, Button, Form, Input  } from \"reactstrap\";\nimport {  useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faBarcode } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FormCodigo = () => {\n   const dispatch = useDispatch()    \n   const [codigo, setCodigo] = useState('');\n   const [name, setName] = useState('');   \n   const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))       \n  \n  const submitHandle = event => {       \n    event.preventDefault()         \n    let itt = {\n      \"almacenId\": almacenId.id,\n      \"pagina\":1,\n      \"num\":21,\n      \"name\":name,\n      \"codigo\":\"\",\n      \"categoriaId\":0,\n      \"stock\":3\n    }  \n    dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','almacenes',itt))     \n    setName('')\n  }\n\n  const submitCodigo = event => {       \n    event.preventDefault()         \n    let itt = {\n      \"almacenId\": almacenId.id,\n      \"pagina\":1,\n      \"num\":21,\n      \"name\":\"\",\n      \"codigo\":codigo,\n      \"categoriaId\":0,\n      \"stock\":3\n    }    \n    dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','almacenes',itt)) \n    setCodigo('')\n\n  }\n\n  const changeHandler = (event) =>{\n    const { value } = event.target  \n    setCodigo(value)       \n  }\n\n  const changesHandler = (event) =>{\n    const { value } = event.target  \n    setName(value)       \n  }\n\n  useEffect(() => {      \n      return () => {\n      /*    cleanup*/\n      console.log('clean table inventario')\n      };\n  }, []);\n\n  return(\n     <Row>\n       <Col md=\"5\">\n       <Form onSubmit={ submitCodigo}>     \n          <Row form>\n            <Col md={10}>                                                             \n              <Input \n                type=\"text\" \n                name=\"codigtotal\"                             \n                id=\"total\"  \n                value={codigo}  \n                placeholder=\"...código\"\n                onChange={changeHandler} \n              />                        \n            </Col>\n            <Col md={2}>\n              <Button className=\"btn-md btn-warning\">\n                <FontAwesomeIcon icon={faBarcode} />                          \n              </Button>    \n            </Col>         \n          </Row>                      \n        </Form>\n       </Col>     \n       <Col md=\"1\">\n\n       </Col>\n       <Col md=\"5\">\n       <Form onSubmit={ submitHandle}>     \n          <Row form>\n            <Col md={10}>                                                             \n              <Input \n                type=\"text\" \n                name=\"name\"                             \n                id=\"name\"  \n                placeholder=\"...nombre\"\n                value={name}  \n                onChange={changesHandler} \n              />                        \n            </Col>\n            <Col md={2}>\n              <Button className=\"btn-md btn-success\">\n                <FontAwesomeIcon icon={faSearch} />                          \n              </Button>    \n            </Col>         \n          </Row>                      \n        </Form>\n       </Col>\n     </Row> \n                         \n        \n  )\n\n};\nexport default FormCodigo;\n","import React,{useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport { Row, Col, Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ListaCategoria from \"../../INVENTARIOS/Categorias/components/ListaCategoria\"\nimport ListaArticulos from \"../../INVENTARIOS/Articulos/components/ListaArticulos\";\nimport ListaItems from \"./components/ListaItems\";\nimport ButtonTpv from \"./components/ButtonTpv\"\nimport FormVenta from \"./components/FormVenta\"\nimport FormCodigo from \"./components/FormCodigo\"\n\nconst Tpv = () => {\n  const dispatch = useDispatch()   \n  const { modalView } = useSelector(state => state.ventas)   \n  \n  const makeHttpRequestWithPage = useCallback(() =>{              \n    dispatch(crudActions.GET_ITEM('EMPRESA_ITEM','empresas',1))    \n },[]) \n\n \n\n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'VENTAS_VIEW',view:est})                \n  };\n\n\n  useEffect(() => {\n    makeHttpRequestWithPage()\n    return () => {\n      dispatch({type:'VENTAS_RESET_ITEMS'})  \n      dispatch({type:'VENTAS_RESET_ITEM'})  \n    };\n  }, []); \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">        \n        <Row>\n            <Col md=\"3\" className=\"card-contenido\">\n              <Row> \n                <Col className=\"card-contenido-items\">\n                    <ListaItems/>\n                </Col>\n              </Row>  \n              <Row> \n                  <Col md=\"12\" className=\"card-contenido-botones\">\n                    <ButtonTpv/>\n                  </Col>\n              </Row>  \n            </Col>\n\n            <Col md=\"7\" className=\"card-contenido\">\n              <FormCodigo/>                            \n              <Row> \n                <Col md=\"12\" className=\"card-contenido-productos\">\n                  <ListaArticulos/>\n                </Col>\n              </Row>  \n            </Col>\n\n            <Col md=\"2\" className=\"card-contenido\">              \n              <ListaCategoria/>                \n            </Col>\n        </Row>\n        \n\n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <FormVenta/>\n          </ModalBody>\n        </Modal>\n\n    \n\n      </div>\n    </div>    \n  )\n\n};\nexport default Tpv;\n","import React,{useEffect, useState} from \"react\";\nimport { Table, Row, Col, Button, Card, CardBody, CardFooter, FormGroup, Label, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport Pagination from '../../../../components/Pagination'\nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n            \n\n\nconst TableCajas = () => {\n   const dispatch = useDispatch() \n   const {data,pagina,paginas, indicador }= useSelector(state => state.cajas)\n   const [pag, setpag] = useState(15);  \n   const usuario = JSON.parse(localStorage.getItem('@userUnity'))   \n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n   \n  const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('CAJAS_DATA','cajas',1,12, usuario.id,usuario.rolId))    \n  }\n\n\n const changeSelect = (pky) => {        \n  const {value} = pky\n  setpag(value)\n  makeHttpRequestWithPage(1,value)\n};\n\nconst setIndicador = (pky,est) => {            \n  let iok = pky === indicador  ? 0 : pky\n  dispatch({type:'CAJAS_INDICADOR',value:iok,estado:est}) \n};\n\n  \n  useEffect(() => {\n      makeHttpRequestWithPage(1,12)\n      return () => {\n        dispatch({type:'CAJAS_RESET_DATA'})   \n      };\n  }, []);\n\n\n\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr> \n              <th width=\"5%\"></th>\n                <th width=\"10%\">Fecha</th>\n                <th width=\"20%\">Usuario</th>\n                <th width=\"10%\">$ Inicial</th>\n                <th width=\"10%\">$ Ingreso</th>\n                <th width=\"10%\">$ Egreso</th>\n                <th width=\"15%\">$ Final</th>\n                <th width=\"10%\">Estado</th>   \n                <th width=\"10%\">F.Cierre</th>                                       \n              </tr>\n          </thead>\n          {data && (\n            <tbody>\n            {data.map((item) => (\n             <tr key={item.id}>  \n                <td >                       \n                <Input type=\"checkbox\" \n                onChange={() => { setIndicador(item.id, item.estado) }} \n                checked={ item.id === indicador ? true : false}\n                /></td>                      \n               <td><Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment></td>     \n               <td>{item.usuario.nombres}</td>     \n<td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoInicial)}</td>\n<td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoIngreso)}</td>\n<td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoEgreso)}</td>\n<td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoFinal)}</td>\n               \n               <td className=\"text-center\">{item.estado ? \n                 <Button className={\"btn-tb btn-danger\"}>\n                   <FontAwesomeIcon icon={faLock} />\n                 </Button>  \n                 : \n                 <Button className={\"btn-tb btn-success\"}>\n                   <FontAwesomeIcon icon={faLockOpen} />\n                 </Button>  \n               }</td>\n               <td>\n               {item.fechaCierre ? \n                 <Moment format=\"DD/MM/YYYY\">{item.fechaCierre}</Moment>\n                 :\n                 <span>abierto</span>\n               }                      \n               </td>  \n                  \n             </tr>  \n             ))}\n       </tbody>\n          )}\n        </Table>\n        </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>         \n</>      \n  )\n\n};\nexport default TableCajas;\n","import React, { useRef, useEffect }  from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Moment from 'react-moment';\nimport { Table, Button, Col, Row } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n    <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Resumen de Caja # {this.props.pcaja.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha Caja: <Moment format=\"DD/MM/YYYY\">{ this.props.pcaja.fechaCaja }</Moment></h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">      \n            <Table className=\"table-reporteh mt-2\">                      \n              <tbody>                  \n              <tr>        \n                <td width=\"20%\" ><b>Total Inicial</b></td>     \n                <td width=\"30%\" >\n                {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoInicial)}\n                </td>                \n                <td width=\"20%\" ><b>Total Ingresos</b></td>     \n                <td width=\"30%\" >                  \n                  {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoIngreso)}\n                </td>                \n                </tr>                     \n                <tr>        \n                    <td width=\"20%\" ><b>Total Egreso</b></td>     \n                    <td width=\"30%\" >                      \n                      {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoEgreso)}\n                    </td>                \n                    <td width=\"20%\" ><b>Monto Final</b></td>     \n                    <td width=\"30%\" >                      \n                      {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoFinal)}\n                    </td>                \n                </tr>  \n                <tr>        \n                <td width=\"20%\" ><b>Usuario :</b></td>     \n                <td width=\"30%\" >{this.props.pcaja.usuario.nombres || ''}</td>  \n                <td width=\"20%\" ><b>Feha Cierre :</b></td>     \n                <td width=\"30%\" ><Moment format=\"DD/MM/YYYY\">{ this.props.pcaja.fechaCierre }</Moment></td>                              \n                </tr>                                     \n              </tbody>          \n            </Table>\n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"10%\" className=\"text-dark\">#</th>\n                <th width=\"10%\" className=\"text-dark\">Fecha</th>\n                <th width=\"50%\" className=\"text-dark\">Detalle</th>\n                <th width=\"10%\" className=\"text-dark\">Tipo</th>\n                <th width=\"20%\" className=\"text-dark text-center\">Monto</th>                                          \n              </tr>\n          </thead>\n          {this.props.pdata && (\n              <tbody>\n                  {this.props.pdata.map((item) => (\n                    <tr key={item.id}>\n                        <td>{item.id}</td>                      \n                        <td><Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment></td>                           \n                        <td>{item.label}</td>\n                        <td>{item.tipo}</td>    \n                        <td className=\"text-center\">                          \n                          {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}\n                        </td>\n                    </tr>  \n                ))}\n              </tbody>\n          )}\n            </Table>\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres || ''}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n\n    \n    </> \n    );\n  }}\n\n\nfunction CajasItemsDetalle () {    \nconst dispatch = useDispatch()\nconst {item} = useSelector(state => state.cajas)\nconst { data } = useSelector(state => state.cajasitems)\nconst componentRef = useRef();   \nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\n\nuseEffect(() =>{        \n     return () =>{                    \n        dispatch({type:'CAJAS_RESET_ITEM'})  \n        /*dispatch({type:'CAJAS_ITEMS_RESET'})  */\n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}          \n            puser={usuario}\n            pcaja={item}\n            pdata={data}\n        />\n    </div>\n     )\n}\n\n\nexport default CajasItemsDetalle","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {     \n  Table,    \n  Button } from \"reactstrap\";\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date();      \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))   \n    return (\n      <>\n    <div className=\"invoice-consolidado\">                    \n    <h5 className=\"text-center\"><b>Resumen de Caja</b></h5>    \n    <p className=\"text-center\"><b> Fecha Caja: <Moment format=\"DD/MM/YYYY\">{ this.props.pcaja.createdAt }</Moment></b></p>\n    \n    \n    <div className=\"soli\">     \n     <Table className=\"table-reporte\">\n            <tbody>\n            <tr>  \n                <td>Nro:</td><td>{this.props.pcaja.id}</td>                                                        \n            </tr>            \n            \n            <tr>  \n                <td>Usuario:</td><td>{this.props.pcaja.usuario.nombres}</td>                                                        \n            </tr>\n            <tr>  \n                <td>$ Inicial:</td>                                \n                <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoInicial)}</td>              \n            </tr>  \n            <tr>               \n                <td>$ Ingresos:</td>                \n                <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoIngreso)}</td>\n            </tr>           \n            <tr>\n                <td>$ Egresos:</td>                \n                <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoEgreso)}</td>\n            </tr>            \n            <tr>                \n                <td>$ Total:</td>              \n                <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pcaja.montoFinal)}</td>\n            </tr>\n            <tr>\n                <td>Feha Cierre :</td>                                                 \n                <td><Moment format=\"DD/MM/YYYY\">{ this.props.pcaja.fechaCierre }</Moment></td>\n            </tr>  \n            <tr>\n                <td>Hora Cierre :</td>                                                 \n                <td><Moment format=\"HH:mm:ss\">{ this.props.pcaja.updatedAt }</Moment></td>\n            </tr>          \n            </tbody>\n          </Table>  \n     </div>\n     <p className=\"mt-2\">____________________________________</p>\n     <p className=\"text-center\">Firma</p>\n     <p className=\"mt-2\">Fecha Emisión : <Moment format=\"DD/MM/YYYY\">{ fechaHoy }</Moment></p>\n    </div>   \n    </> \n    );\n  }}\n\n\nfunction CajasConsolidado () {    \nconst dispatch = useDispatch()\nconst componentRef = useRef();   \nconst {item} = useSelector(state => state.cajas)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\n useEffect(() =>{        \n     return () =>{                    \n        dispatch({type:'CAJAS_RESET_ITEM'})  \n        dispatch({type:'CAJAS_ITEMS_RESET'})  \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}          \n            puser={usuario}\n            pcaja={item}            \n        />\n    </div>\n     )\n}\n\n\nexport default CajasConsolidado","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Row,Col,Form, ButtonGroup, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { cajaActions, crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoneyBill, faCheck, faLock, faEdit, faPlus, faTicketAlt, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport CajasItemsDetalle from './CajasItemsDetalle'\nimport CajasConsolidado from \"./CajasConsolidado\";\nimport { Link } from \"react-router-dom\";\n\nconst EditCaja = () => {\n    const dispatch = useDispatch()  \n    const {total, indicador, estado }= useSelector(state => state.cajas)     \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [view, setview] = useState(false);\n    const [views, setviews] = useState(false);\n    const [viewx, setviewx] = useState(false);\n    const [value, setValue] = useState();\n\n    const changeHandler = event => {    \n      const { value } = event.target               \n      setValue(value)\n  }\n      \n    const submitHandle = event => {       \n      event.preventDefault()    \n      let dat = {}\n      dat.monto = parseInt(value)\n      dat.usuarioId = usuario.id\n      dispatch(crudActions.SET_ADD('CAJAS_DATA','cajas',dat,'lista'))  \n      dispatch({ type: 'RESET_CAJA' });        \n      setValue('')      \n   }\n  const viewCaja = (pky) => {     \n    if(pky === 'resumen'){\n      let est = view === true ? false : true;             \n      setview(est)\n    } else{\n      let est = views === true ? false : true;             \n      setviews(est)\n    }      \n    dispatch(cajaActions.getItem('CAJAS_ITEM','cajas',indicador))\n  };  \n   \n  const toggleModalViews = () => {        \n    setviews(!views)                  \n  };\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n  const toggleModalViewx = () => {        \n    setviewx(!viewx)                  \n  };\n\n  const onAprobar = () => {                \n    let dato = {}\n        dato.id = indicador\n        dato.usuarioId = usuario.id             \n        dispatch(crudActions.SET_UPDATE('CAJAS_DATA','cajas',dato))     \n        setviewx(false)       \n        dispatch({type:'CAJAS_INDICADOR',value:0,estado:'pendiente'})\n  };\n    useEffect(() => {      \n      return () => {\n        dispatch({type:'CAJAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <>             \n       <Card>    \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faMoneyBill} />  \n          </div>        \n        </Col>    \n        <Col md={4} className=\"cards\">\n          <ButtonGroup>\n          <Link to={`/tpdv/cajasitems/${indicador}`} className={(indicador === 0 || estado === true) ? \"btn bg-success text-white disabled\":\"btn bg-success text-white\"}  >\n                  <FontAwesomeIcon icon={faEdit}  />\n                  </Link> \n                 <Button className={(indicador !== 0 && estado === true) ? \"bts bg-defautl text-white\" :\"bts bg-defautl text-white disabled\" } onClick={()=> viewCaja('resumen')}>\n                   <FontAwesomeIcon icon={faFilePdf} /> </Button>                                \n                 <Button className={(indicador !== 0 && estado === true) ? \"bts bg-defautl  text-white\" : \"bts bg-defautl text-white disabled\" } onClick={()=> viewCaja('consolidado')}>\n                   <FontAwesomeIcon icon={faTicketAlt} />  </Button>               \n                 <Button className={(indicador !== 0 && estado === false) ? \"btr bg-danger text-white\": \"btr bg-danger text-white disabled\"} onClick={()=> toggleModalViewx()} >\n                   <FontAwesomeIcon icon={faLock} /></Button>                  \n          </ButtonGroup>\n        </Col>\n        <Col md={1} className=\"cards text-right\">\n         \n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={changeHandler} />\n                    </Col>    \n                    <Button className=\"text-white btn-sm bg-success\" sm={1}>\n                    <FontAwesomeIcon icon={faPlus}/>\n                    </Button>\n                    </FormGroup>       \n                  </Form>             \n        </Col>\n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } CAJAS  </p>          \n        </Col>\n\n      </Row>   \n      </Card> \n      <Modal isOpen={view} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <CajasItemsDetalle/>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={views} toggle={toggleModalViews} className=\"resumenBody\">\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViews()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody className=\"resumenConte\">\n            <CajasConsolidado/>\n          </ModalBody>\n        </Modal>\n\n        <Modal isOpen={viewx} toggle={toggleModalViewx} className=\"deleteBody\"> \n        <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea cerrar la caja ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalViewx()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onAprobar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n        </Modal>\n    </>                                             \n    );\n};\nexport default EditCaja;\n","import React,{useEffect} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport TableCajas from \"./components/TableCajas\";\nimport EditCaja from \"./components/EditCaja\"\nconst CajasView = () => { \n  const dispatch = useDispatch()       \n  useEffect(() =>{                       \n      return () =>{            \n        dispatch({type:'CAJAS_RESET'})  \n      };\n    }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">           \n        <EditCaja/>\n        <TableCajas/>         \n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default CajasView;\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subCaja = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/tpdv/${item.link}/`}\n        className=\"nav-link\"> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subCaja;\n","import React, { useState,useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Moment from 'react-moment'\nimport { Table, Row, Col, Card, CardBody, CardFooter, FormGroup, Label} from \"reactstrap\";\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\nfunction CajasItemsTable () {                \n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15); \n  const { data, pagina, paginas } = useSelector(state => state.cajasitems)\n  const cajai = useSelector(state => state.cajas.item)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa')) \n    \n  const makeHttpRequestWithPage = (page, num) =>{        \n    dispatch(crudActions.GET_DATA('CAJAS_ITEMS_DATA','cajasitems',page, num, cajai.id,cajai.id))     \n  }\n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  useEffect(() =>{          \n     return () =>{            \n        /*dispatch(crudActions.setReset('CAJAS_ITEMS_RESET'))\n        dispatch(crudActions.setReset('CAJAS_RESET_ITEM'))        */\n    };\n  }, []);\n\n  \n\n  return (    \n    <>\n      <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n              <thead>\n                  <tr>                        \n                  <th width=\"10%\">#</th>\n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"50%\">Label</th>\n                  <th width=\"20%\">Tipo</th>\n                  <th width=\"20%\">Monto</th>                  \n                  </tr>\n              </thead>\n              {data && (\n              <tbody>\n                {data.map((item) => (\n                    <tr key={item.id}>\n                        <td>{item.id}</td>                      \n                        <td><Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment></td>                           \n                        <td>{item.label}</td>\n                        <td>{item.tipo}</td>                        \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>\n                    </tr>  \n                    ))}\n              </tbody>\n          )}\n            </Table>  \n          </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n    </>\n  );\n}\n\nexport default CajasItemsTable","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport Moment from 'react-moment'\nimport { Table,Row,Col,Card,CardBody } from \"reactstrap\";\n\nfunction CajaDetalle() {              \n  const item  = useSelector(state => state.cajas.item)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))  \n\n  return (    \n    <Row>\n    <Col>\n      <Card>     \n        <CardBody>\n          <p>Resumen Caja</p>\n          <Table className=\"table-simple\">\n          <tbody>\n          <tr>  \n              <th>Num:</th>\n              <td>{item.id}</td>\n              <th>Fecha:</th>                \n              <td><Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment></td>                                     \n          </tr>\n          <tr>  \n              <th>$ Inicial:</th>                              \n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoInicial)}</td>\n              <th>$ Ingresos:</th>\n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoIngreso)}</td>              \n          </tr>            \n          <tr>\n              <th>$ Egresos:</th>\n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoEgreso)}</td>            \n              <th>$ Total:</th>\n              <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.montoFinal)}</td>\n            \n          </tr>            \n          </tbody>\n          </Table>  \n        </CardBody>    \n        \n      </Card>  \n    </Col>\n  </Row> \n  );\n}\n\nexport default CajaDetalle","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions, cajaActions} from '../../../../actions'\nimport { Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport { custom } from '../../../../helpers/customStyles'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'\nimport { defaultVal } from \"../../../../helpers/funciones\";\n\nconst tipos =  [                                \n                {\"value\":\"ingreso\",\"label\":\"ingreso\"},\n                {\"value\":\"egreso\",\"label\":\"egreso\"},                                              \n                ];\n\n\n\nfunction CajasItemsForm () {     \n  const dispatch = useDispatch()  \n  const caja = useSelector(state => state.cajas.item)   \n  const item = useSelector(state => state.cajasitems.item)\n \n\n\n  const changeHandler = event => {    \n  const { name, value } = event.target  \n   dispatch(crudActions.SET_CHANGE('CAJAS_ITEMS_CHANGE',name,value))  \n }\n\n const changesHandler = prop => event => {                     \n    const { value } = event ? event : '' \n    dispatch(crudActions.SET_CHANGE('CAJAS_ITEMS_CHANGE',prop,value))  \n    \n }\n\nconst submitHandle = event => {       \n    event.preventDefault()           \n    \n    let dat = {}\n    dat.monto = parseInt(item.monto)\n    dat.tipo = item.tipo\n    dat.label = item.label\n    dat.cajaId = caja.id    \n    dispatch(cajaActions.setAdd('cajasitems',dat))      \n       \n }\n        \n  return (    \n    <Row>\n    <Col>\n      <Card>\n          <CardBody>\n          <p>Registro de Caja</p>\n          <Form onSubmit={ submitHandle}> \n          <Row form>\n            <Col md={2}>\n              <FormGroup>\n                <Label>Monto :</Label>\n                <Input\n                  id=\"monto\"\n                  type=\"number\"\n                  name=\"monto\"                                                        \n                  value={item.monto}\n                  onChange={changeHandler}                                                   \n                />\n              </FormGroup>  \n            </Col>  \n            <Col md={2}>\n              <FormGroup>\n              <Label for=\"web\">Tipo:</Label>\n              <Select                                                               \n               defaultValue={tipos[0]}\n               name=\"tipo\"    \n               id=\"tipo\"                    \n               options={tipos}                                       \n               value={defaultVal(tipos,item.tipo)}                                                                                                                                \n               onChange={ changesHandler('tipo')}       \n               styles={custom}                     \n               />\n              </FormGroup>  \n            </Col>  \n            <Col md={6}>\n              <FormGroup>\n              <Label for=\"web\">Glosa:</Label>\n              <Input\n                 id=\"label\"\n                 type=\"text\"\n                 name=\"label\"                                                        \n                 value={item.label}\n                 onChange={changeHandler}                                                   \n               />\n              </FormGroup>  \n            </Col>\n            <Col md={2}>\n              <FormGroup>\n              <Button type=\"submit\" className={item.monto > 0 ? \"btn-md btn-info mt-3\" : \"btn-md btn-danger disabled mt-3\"}>\n             <FontAwesomeIcon icon={faSave} />  \n               {' '} Registrar \n           </Button>\n              </FormGroup>  \n            </Col>  \n          </Row>  \n          </Form>          \n          </CardBody>   \n      </Card>       \n    </Col>  \n    </Row>                           \n  );\n}\n\nexport default CajasItemsForm","import React, { useState,useEffect } from 'react';\n\nimport {  useDispatch } from 'react-redux'\nimport {  Row, Col } from \"reactstrap\"\nimport SubMenu from '../../../components/subCaja.jsx';\nimport { CajaRouter } from '../../../routes'\nimport { cajaActions } from '../../../actions'\nimport CajasItemsTable from './components/CajasItemsTable'\nimport CajaDetalle from '../Cajas/components/CajaDetalle'\nimport CajasItemsForm from './components/CajasItemsForm'\n\nfunction CajasItemsView({...props}) {     \n  const dispatch = useDispatch()\n    \n  useEffect(() =>{        \n    const {  match: { params }} = props;            \n    dispatch(cajaActions.getItem('CAJAS_ITEMS_DATA','cajas',params.cajaId))              \n     return () =>{            \n        /*dispatch(crudActions.getReset('CLIENTES_RESET'))*/\n    };\n  }, []);\n\n  return (\n        <div className=\"content\">     \n          <div className=\"main-contenido\">    \n          <SubMenu items={CajaRouter} prop='Items'/> \n            <Row>\n              <Col md=\"4\">\n                <CajaDetalle/>                                \n              </Col>\n              <Col md=\"8\">\n                <CajasItemsForm/> \n                <CajasItemsTable/>    \n              </Col>\n            </Row>            \n          </div>\n        </div> \n  );\n}\n\nexport default CajasItemsView","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope,faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Tpdv from \"../../pages/TPVD/Tpv/Tpv.jsx\"\nimport Cajas from \"../../pages/TPVD/Cajas/CajasView.jsx\"\nimport CajasItems from \"../../pages/TPVD/CajasItems/CajasItemsView.jsx\";\nimport Moment from \"react-moment\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst fechaHoy = new Date()\n\nfunction Crm(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems'))  \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))  \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{            \n            if(prop.icon === \"tpdv\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n            }\n            return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Tpdv\":\n            return Tpdv;   \n          case \"Cajas\":\n            return Cajas;          \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/tpdv'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">        \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>\n            </div> \n            <div className=\"center-unity\">\n            <h6>P.DE VENTA</h6>  \n            </div> \n            <div className=\"conta-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div>\n            <div className=\"right-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                </Col>   \n              </Row>   \n            </div>  \n        </div>\n        <Nav> \n          <div className=\"navLeft\">    \n        {itemr.map((prop, key) => (  \n          <NavItem key={key}>  \n            <NavLink                \n              to={prop.layout + prop.path}\n              className=\"nav-link\"\n              activeClassName=\"active\">               \n              <p> {prop.name}</p>                    \n            </NavLink>\n          </NavItem>))\n        }\n      </div>\n\n        <div className=\"navRight\">          \n          \n        </div>\n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}    \n          <Route path=\"/tpdv/cajasitems/:cajaId\" component={CajasItems}/>\n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Crm;\n\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../actions'\nimport { api } from \"../../../helpers\";\n\n\nconst EmpresaImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.empresa) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"empresa\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n  <>      \n      <div className=\"sub-form\">  \n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/empresa/md/\" + item.filename}\n        />}\n        </Col>\n      </Row>\n      { item.id ?\n        <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n     </Row>\n      : null\n      }\n        \n     </div>   \n    </>  \n    )\n}     \n  \nexport default EmpresaImagen;\n","import React,{ useEffect, useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { custom } from '../../../helpers/customStyles'\nimport EmpresaImagen from \"./EmpresaImagen\"\nimport { paises, monedas } from \"../../../helpers/locations\";\nimport Select from 'react-select'  \nimport { defaultVal } from \"../../../helpers/funciones\";\nconst EditEmpresa = () => {\n    const dispatch = useDispatch()  \n    const {item } = useSelector(state => state.empresa)  \n    const [tipo, settipo] = useState('password');\n    const [iok1, setiok1] = useState(true);\n    const [iok2, setiok2] = useState(false);\n    const [iok3, setiok3] = useState(false);\n\n  \n    const [tab, settab] = useState('1');\n    \n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('EMPRESA_CHANGE',name,value))  \n    }\n        \n    const changesPaises = event => {                  \n      const {value, indice} = event ? event : ''                  \n      dispatch(crudActions.SET_CHANGE('EMPRESA_CHANGE','pais',value))   \n      let datc = monedas.filter(d => (d.indice === indice) )   \n      let iok  = datc[0].label + ' ('+datc[0].value+')'     \n      dispatch(crudActions.SET_CHANGE('EMPRESA_CHANGE','moneda',datc[0].value)) \n      dispatch(crudActions.SET_CHANGE('EMPRESA_CHANGE','labelMoneda',iok))\n  }\n    \n    const submitHandle = event => {       \n        event.preventDefault()    \n        let iok  ={\n          id:         item.id,\n          labelMoneda: item.labelMoneda,\n          moneda: item.moneda,\n          nombre: item.razonSocial,\n          pais:   item.pais\n        }\n        localStorage.setItem(\"@userEmpresa\", JSON.stringify(iok));\n        dispatch(crudActions.SET_UPDATE('EMPRESA_ITEM','empresas',item,'dato'))            \n     }\n\n    useEffect(() => {      \n        dispatch(crudActions.GET_ITEM('EMPRESA_ITEM','empresas',1)) \n      return () => {          \n        dispatch({type:'EMPRESA_RESET_ITEM'})        \n      };\n    }, []); \n    const setChange = (kit) =>{ \n      switch(kit){\n        case '1':\n          setiok1(true)\n          setiok2(false)\n          setiok3(false)          \n          settab('1') \n          break;\n        case '2':\n          setiok1(false)\n          setiok2(true)          \n          setiok3(false)\n          settab('2') \n          break;\n        case '2':\n          setiok1(false)\n          setiok2(false) \n          setiok3(true)         \n          settab('3') \n          break;              \n        default:\n          break;  \n      }      \n    }\n     \n    return (    \n      <div className=\"content\">        \n        <div className=\"main-contenido\">               \n        <Row>      \n        <Col>\n        <div className=\"nav-sunitys\" expand=\"lg\">            \n               <Nav tabs>\n                <NavItem>\n                  <NavLink className={iok1 ? 'active':''}  onClick={ () => {setChange('1')}} >\n                   Datos Generales\n                  </NavLink>\n                </NavItem>                \n                <NavItem>\n                  <NavLink className={iok2 ? 'active':''}  onClick={ () => {setChange('2')}} >\n                   Configuraciones\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok3 ? 'active':''}  onClick={ () => {setChange('3')}} >\n                  Licencia\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              </div>\n        </Col>          \n      </Row>   \n      <Row>      \n       <Col>\n        <Card>\n          <CardBody>\n          <TabContent activeTab={tab}>\n            <TabPane tabId=\"1\">\n            <Row>\n            <Col md=\"9\">\n            <Form onSubmit={ submitHandle}>  \n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Razon Social</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"nombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Dirección</Label>\n                        <Input type=\"text\" name=\"direccion\" id=\"direccion\" \n                          value={item.direccion || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo direccion es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>    \n                <Row form>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Web</Label>\n                        <Input type=\"text\" name=\"web\" id=\"web\" \n                          value={item.web || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo web es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>  \n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" \n                          value={item.email || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo email es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"etelefono\">Teléfono</Label>\n                        <Input type=\"text\" name=\"telefono\" id=\"telefono\" \n                          value={item.telefono || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo teléfono es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                  \n                </Row>\n                <Row form>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nit</Label>\n                        <Input type=\"text\" name=\"nit\" id=\"nit\" \n                          value={item.nit || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nit es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                    \n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"fpais\">Pais</Label>\n                      <Select                                                               \n                        defaultValue={paises[0]}\n                        styles={custom} \n                        name=\"pais\"    \n                        id=\"pais\"                    \n                        options={paises}                                               \n                        value={defaultVal(paises,item.pais)}   \n                        onChange={ (e) => changesPaises(e)}/>\n                    </FormGroup>\n                  </Col>  \n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"emoneda\">Moneda</Label>\n                        <Input type=\"text\" name=\"moneda\" id=\"moneda\" \n                          value={item.labelMoneda || ''}                          \n                          onChange={ (e) => changeHandler(e)}                           \n                          readOnly={true}\n                          />    \n                    </FormGroup>    \n                  </Col>                                               \n                </Row>  \n               \n                <Row form>                  \n                  <Col md={2}>\n                    <Button     \n                    type=\"submit\"\n                    className=\"btn-md btn-warning mt-2\">\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} Actualizar\n                    </Button> \n                  </Col>\n                </Row> \n            </Form>\n            </Col>\n            <Col md=\"3\">\n              <EmpresaImagen/>\n            </Col>\n            </Row> \n\n            </TabPane>  \n            <TabPane tabId=\"2\">\n              <Row>\n                <Col md=\"12\">\n                <Form onSubmit={ submitHandle}>                 \n                \n                <Row form>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"enombre\">SmtpHost</Label>\n                        <Input type=\"text\" name=\"smtpHost\" id=\"smtpHost\" \n                          value={item.smtpHost || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo smtpHost es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>  \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"enombre\">SmtpHost</Label>\n                        <Input type=\"text\" name=\"smtpHost\" id=\"smtpHost\" \n                          value={item.smtpHost || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo smtpHost es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>  \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"smtpUser\">SmtpUser</Label>\n                        <Input type=\"text\" name=\"smtpUser\" id=\"smtpUser\" \n                          value={item.smtpUser || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo smtpUser es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>  \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"smtpPassword\">SmtpPassword</Label>\n                        <Input type={tipo} name=\"smtpPassword\" id=\"smtpPassword\" \n                          value={item.smtpPassword || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo smtpPassword es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          onClick={(e) => settipo(tipo === 'password' ? 'text' : 'password')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col> \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"smtpPort\">SmtpPort</Label>\n                        <Input type=\"text\" name=\"smtpPort\" id=\"smtpPort\" \n                          value={item.smtpPort || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo smtpPort es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                         \n                </Row>\n                <Row form>                  \n                  <Col md={2}>\n                    <Button     \n                    type=\"submit\"\n                    className=\"btn-md btn-warning mt-2\">\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} Actualizar\n                    </Button> \n                  </Col>\n                </Row> \n            </Form>\n                </Col>          \n              </Row>\n            </TabPane> \n            <TabPane tabId=\"3\">\n              <Row>\n                <Col md=\"4\">\n                  \n                </Col>          \n              </Row>\n            </TabPane>     \n          </TabContent> \n          </CardBody>\n        </Card>  \n       </Col>\n      </Row> \n        </div>\n    </div>                              \n    );\n};\nexport default EditEmpresa;\n","import React,{useState, useEffect } from \"react\";\nimport { ButtonGroup, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\n\nconst TableUsuarios = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.users)\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('USUARIOS_DATA','usuarios',page, num,'nombres','asc'))          \n   } \n\n\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('USUARIOS_ITEM','usuarios',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,12)\n      return () => {\n        dispatch({type:'USUARIOS_RESET_DATA'})   \n      };\n  }, []);\n\n\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"60%\">Nombres</th>\n                  <th width=\"10%\">Estado</th>                  \n                  <th width=\"25%\">Rol</th>                             \n                  <th width=\"5%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                                              \n                        <td>{item.nombres}</td>\n                        <td>{item.estado ? \"habilitado\": \"no habilitado\"}</td>\n                        <td>{item.rol.nombre || ''}</td>                        \n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { getItem(item.id)}}>\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>                          \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        \n        <CardFooter>\n          <Row>                                            \n            <Col md={10} >\n              <Pagination\n                makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                paginas={paginas}\n                current= {pagina} \n                pagina= {pag}\n              />\n            </Col>                           \n          </Row>\n        </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableUsuarios;\n","import React,{ useEffect, useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { custom } from '../../../../helpers/customStyles'\n\n\n\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\n\nconst roles  = [{\"value\":1,\"label\":\"administrador\"},\n                {\"value\":2,\"label\":\"encargado\"},\n                {\"value\":3,\"label\":\"vendedor\"},\n                {\"value\":4,\"label\":\"cajero\"},\n                {\"value\":5,\"label\":\"usuario\"}\n              ];\n\nconst EditUsuario = () => {\n    const dispatch = useDispatch()  \n    const {item, modulos } = useSelector(state => state.users)   \n    const [pass1, setpass1] = useState();\n    const [pass2, setpass2] = useState();\n    \n   \n\n    const changesHandler = event => {            \n      console.log(event)       \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('USUARIOS_CHANGE','rolId',value))          \n  }\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('USUARIOS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {          \n          dispatch(crudActions.SET_UPDATE('USUARIOS_ADD','usuarios',item,'dato'))            \n        }else{\n          dispatch(crudActions.SET_ADD('USUARIOS_ADD','usuarios/crear',item,'lista'))           \n        }   \n       \n     }  \n     const submitHandlec = event => {       \n      event.preventDefault()        \n      let iok = item\n      iok.password = pass1\n      dispatch(crudActions.SET_UPDATE('USUARIOS_ADD','usuarios',iok,'lista'))            \n   }  \n     \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'USUARIOS_RESET_ITEM'})        \n      };\n    }, []); \n     \n\n    return (       \n      <>       \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n              <Row>\n                <Col md={7} >\n                <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombres</Label>\n                        <Input type=\"text\" name=\"nombres\" id=\"nombres\" \n                          value={item.nombres || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Username</Label>\n                        <Input type=\"text\" name=\"username\" id=\"username\" \n                          value={item.username || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombreCorto\">Rol</Label>\n                      <Select                                                               \n                              defaultValue={roles[0]}\n                              styles={custom} \n                              name=\"rolId\"    \n                              id=\"rolId\"                    \n                              options={roles}      \n                              isClearable={true}                          \n                              value={defaultVal(roles,item.rolId)}   \n                              onChange={ (e) => changesHandler(e)}                                               \n                            /> \n                    </FormGroup>   \n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={7}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n                </Col>\n                \n            <Col md={5}>\n                <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"100%\">Módulos</th>                                        \n                        </tr>\n                    </thead>\n                    {modulos && (\n                        <tbody>\n                            {modulos.map((item,index) => (\n                                <tr key={index}>                                              \n                                  <td>{item.name}</td>                                                                   \n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                </Table>\n                </Col>\n            </Row> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>       \n    <Row>\n    <Col>\n      <Card>        \n          <CardBody>\n            <Row>\n              <Col md={12} >\n              <h5>Actualización de contraseña</h5>\n                  <Form onSubmit={ submitHandlec}>\n                      <Row form>\n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"enombre\">Contraseña</Label>\n                              <Input type=\"text\" name=\"pass1\" id=\"pass1\" \n                                value={pass1 || ''}\n                                onChange={ (e) => {setpass1(e.target.value)}} \n                                onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                                onInput={(e) => e.target.setCustomValidity('')}\n                                required\n                                readOnly={item.id ? false : true }\n                                />    \n                          </FormGroup>    \n                        </Col>                                    \n                        <Col md={6}>\n                          <FormGroup>\n                            <Label for=\"enombre\">Re-contraseña</Label>\n                            <Input type=\"text\" name=\"pass2\" id=\"pass2\" \n                                value={pass2 || ''}                          \n                                onChange={ (e) => {setpass2(e.target.value)}} \n                                onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                                onInput={(e) => e.target.setCustomValidity('')}\n                                required\n                                readOnly={item.id ? false : true }\n                                />    \n                          </FormGroup>    \n                        </Col>                                    \n                      </Row>\n                    \n                      \n                      <Row form>                                         \n                        <Col md={4}>\n                          <Button \n                          type=\"submit\"\n                          className={((pass1 === undefined || pass1 === \"\") && (pass2 === undefined || pass2 === \"\")) ? \"btn-md disabled btn-warning mt-2\" : pass1 === pass2 ? \"btn-md btn-warning mt-2\":\"btn-md disabled btn-warning mt-2\" }>\n                          <FontAwesomeIcon icon={faSave} />  \n                          {' '} Actualizar\n                          </Button> \n                        </Col>\n                        <Col md={6}>\n                          <p className=\"mt-2\">{ ((pass1 === undefined || pass1 === \"\") && (pass2 === undefined || pass2 === \"\")) ? null : pass1 === pass2 ? 'iguales':'deben ser iguales'  }</p> \n                        </Col>\n                      </Row>                 \n                  </Form> \n              </Col>\n          </Row> \n          </CardBody>                      \n        </Card> \n    </Col>    \n  </Row>  \n  </>                                      \n    );\n};\nexport default EditUsuario;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport TableUsuarios from \"./components/TableUsuarios\";\nimport EditUsuario from \"./components/EditUsuario\"\n\nconst UsuariosView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">    \n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={5} className=\"marco\">\n            <EditUsuario/>\n            </Col>\n            <Col md={7} className=\"marco\">\n            <TableUsuarios/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default UsuariosView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope, faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Empresa from \"../../pages/SECURITY/Empresa/EditEmpresa.jsx\"\nimport Usuarios from \"../../pages/SECURITY/Usuarios/UsuariosView.jsx\"\nimport Moment from \"react-moment\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst fechaHoy = new Date()\nfunction Tool(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems')) \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))   \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{            \n            if(prop.icon === \"tools\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n            }\n            return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Empresa\":\n            return Empresa;   \n          case \"Usuarios\":\n            return Usuarios;     \n          /*case \"Tickets\":\n            return Tickets;\n          case \"Cotizaciones\":\n            return Cotizaciones;          \n          default:\n            return null;*/\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/tools'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))\n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">        \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>\n            </div> \n            <div className=\"center-unity\">\n            <h6>Configuraciones</h6>  \n            </div> \n            <div className=\"conta-unity\">\n            <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div> \n            <div className=\"right-unity\">\n            <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>\n        <Nav> \n            <div className=\"navLeft\">        \n              {itemr.map((prop, key) => (  \n                <NavItem key={key}>  \n                  <NavLink                \n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\">               \n                    <p> {prop.name}</p>                    \n                  </NavLink>\n                </NavItem>))}\n            </div>\n            <div className=\"navRight\"></div>\n        </Nav>        \n        </div>  \n        <Switch>   \n          {getRoutes(itemr)}                       \n               \n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Tool;\n\n","import React from \"react\";\nimport { Card, Row, Col  } from \"reactstrap\";\n\n\nconst InicioView = () => {\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">             \n      <Row>\n        <Col md=\"3\">\n          <Card>\n           \n          </Card>\n        </Col>\n        <Col md=\"6\">\n          <Card>\n         \n          </Card>\n        </Col>\n        <Col md=\"3\">\n         <Row>\n           <Col>\n            <Card>\n              Total Tickets\n            </Card>           \n           </Col>\n         </Row>\n         <Row>\n           <Col>\n            <Card>\n            Total Clientes\n            </Card>   \n           </Col>\n         </Row>\n        </Col>        \n      </Row>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default InicioView;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\n\nconst TableSalarios = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.salarios)\n\n   const makeHttpRequestWithPage = useCallback((page, num) =>{\n    dispatch(crudActions.GET_DATA('SALARIOS_DATA','salarios',page, num,'nombre','asc'))      \n    console.log('segui1')\n  },[]) \n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('SALARIOS_ADD','salarios',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('SALARIOS_ITEM','salarios',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,12)\n      return () => {\n        dispatch({type:'SALARIOS_RESET_DATA'})   \n      };\n  }, []);\n\n\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Código</th>\n                  <th width=\"55%\">Nombre</th>\n                  <th width=\"20%\">Monto</th>                             \n                  <th width=\"15%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>\n                        <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(item.monto)}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}>\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n                \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableSalarios;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditSalario = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.salarios.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('SALARIOS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('SALARIOS_ADD','salarios',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('SALARIOS_ADD','salarios',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'SALARIOS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"emonto\">Monto </Label>\n                      <Input type=\"number\" name=\"monto\" id=\"monto\"  \n                        value={item.monto || ''}                         \n                        onChange={ (e) => changeHandler(e)}  \n                        onInvalid={(e) => e.target.setCustomValidity('El campo monto es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                        />\n                    </FormGroup>   \n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={6}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditSalario;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\n\nimport TableSalarios from \"./components/TableSalarios\";\nimport EditSalario from \"./components/EditSalario\"\n\nconst SalariosView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">          \n    \n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditSalario/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableSalarios/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default SalariosView;\n","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport Moment from 'react-moment'\n\nconst fechaHoy = new Date()\n export class ComponentToPrint extends React.PureComponent {\n   \n  render() {    \n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Kardex Persona # <b>{this.props.data.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.data.nombres}</h5>\n                     \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={8} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                   \n                  <tr><td><b>Dirección :</b></td>\n                      <td>{this.props.data.direccion}</td></tr>          \n\n                  <tr><td><b>Pais :</b></td>\n                      <td >{this.props.data.pais}</td>\n                  </tr>          \n\n                  <tr><td><b>Ciudad :</b></td>\n                      <td >{this.props.data.ciudad}</td>\n                  </tr>          \n\n                  <tr><td><b>Contacto :</b></td>\n                      <td >{this.props.data.contacto}</td>\n                  </tr>\n\n                  <tr><td><b>Email :</b></td>\n                      <td >{this.props.data.email}</td>\n                  </tr>\n\n                  <tr><td><b>Web :</b></td>\n                      <td >{this.props.data.web}</td>\n                  </tr>\n\n                  <tr><td><b>Teléfono :</b></td>\n                      <td >{this.props.data.telefono}</td>\n                  </tr>          \n                  <tr><td colSpan=\"2\"><b>Observaciones :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.data.observaciones }</td></tr>                    \n                 \n        </tbody>\n        </Table>\n          </Col>\n          <Col md={4} className=\"report-card text-center\">            \n            <img alt=\"persona\" className=\"text-center imgmd\" src={api + '/static/images/personas/lg/'+this.props.data.filename }/>                 \n          </Col>\n        </Row>\n        <h6 className=\"mt-2\">Información Académica</h6>\n        <Row>\n          <Col>\n          <Table className=\"table-reportesh mt-2\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"30%\">Profesión</th>\n                  <th width=\"20%\">Nivel</th>                             \n                  <th width=\"10%\">Estado</th>\n                  <th width=\"40%\">Institución</th>                  \n              </tr>\n          </thead>\n          {this.props.destudios && (\n              <tbody>\n                  {this.props.destudios.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.fecha}</td>\n                        <td>{item.carrera}</td>\n                        <td>{item.nivel}</td>\n                        <td>{item.estado}</td>\n                        <td>{item.institucion}</td>                     \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n          </Table>\n          </Col>\n        </Row>  \n        <h6>Experiencia Laboral</h6>\n        <Row>\n          <Col>\n          <Table className=\"table-reportesh mt-2\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Desde</th>\n                  <th width=\"10%\">Hasta</th>\n                  <th width=\"25%\">Empresa</th>\n                  <th width=\"25%\">Cargo</th>\n                  <th width=\"15%\">Pais</th>                             \n                  <th width=\"15%\">Ciudad</th>                                                      \n              </tr>\n          </thead>\n          {this.props.dexperiencias && (\n              <tbody>\n                  {this.props.dexperiencias.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.desde}</td>\n                        <td>{item.hasta}</td>\n                        <td>{item.empresa}</td>\n                        <td>{item.motivo}</td>\n                        <td>{item.pais}</td>\n                        <td>{item.ciudad}</td>                                                                 \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n          </Table>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction PersonaResumen () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.personas)\nconst estudios = useSelector(state => state.estudios.data)\nconst experiencias = useSelector(state => state.experiencias.data)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'PERSONAS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            data={item}\n            dexperiencias={experiencias}\n            destudios={estudios}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default PersonaResumen","import React,{useEffect, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customStyles } from '../../../../helpers/customStyles'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\n\nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }            \n\nconst TablePersonas = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas, indicador}= useSelector(state => state.personas)\n   \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('PERSONAS_DATA','personas',page, num,'nombres','ASC'))      \n  }\n\n \n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'PERSONAS_INDICADOR',value:iok}) \n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'PERSONAS_RESET_DATA'})\n      };\n  }, []);\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n              <thead>\n                  <tr>  \n                      <th width=\"5%\"></th>\n                      <th width=\"25%\">Nombres</th>\n                      <th width=\"25%\">A.Paterno</th>\n                      <th width=\"25%\">A.Materno</th>\n                      <th width=\"10%\">Teléfono</th>\n                      <th width=\"10%\">Celular</th>\n                  </tr>\n              </thead>\n              {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                           \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          />                       \n                        </td>                \n                        <td>{item.nombres}</td>\n                        <td>{item.paterno}</td>\n                        <td>{item.materno}</td>\n                        <td>{item.telefono}</td>\n                        <td>{item.celular}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>  \n          </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n</>      \n  )\n\n};\nexport default TablePersonas;\n","import React,{useState} from \"react\";\nimport { ButtonGroup, Modal, ModalBody, Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faSearch, faPlus, faFileExport, faUsers, faCopy, faTrash, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\nconst page =[\n             {\"value\":'nombres',\"label\":'nombres'},\n             {\"value\":'direccion',\"label\":'direccion'},\n             {\"value\":'nit',\"label\":'nit'}\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\nconst SearchPersonas = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView }= useSelector(state => state.personas)\n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n\n    \n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n\n    \n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('PERSONAS_DATA','personas',iok))              \n     }  \n    \n    const onCopiar = () => {                  \n      dispatch(crudActions.SET_COPIAR('PERSONAS_DATA','personas',indicador)) \n      dispatch({type:'PERSONAS_INDICADOR',value:0})\n    };\n  \n    const onBorrar = () => {            \n      dispatch(crudActions.GET_DELETE('PERSONAS_DATA','personas',indicador,'lista'))      \n      dispatch({type:'PERSONAS_INDICADOR',value:0})\n      setview(false)\n\n    };\n\n    const viewArticulo = () => {        \n      let est = modalView === true ? false : true;             \n      dispatch({type:'PERSONAS_VIEW',view:est}) \n      /*dispatch(crudActions.GET_ITEM_COMPUESTO('PERSONAS_ITEM','personas',indicador))*/\n      dispatch(crudActions.GET_ITEM_COMPUESTO('PERSONAS_ITEM','personas',indicador)) \n    };   \n\n    const toggleModalView = () => {        \n      setview(!view)                  \n    };\n    \n    return ( \n      <>             \n      <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faUsers} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n            <FontAwesomeIcon icon={faFileExport} /></Button>\n          <Button className={indicador === 0 ? \"bts bg-default disabled text-white\": \"bts bg-default text-white\"} onClick={()=> onCopiar()}>\n            <FontAwesomeIcon icon={faCopy} /> </Button>\n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n            <FontAwesomeIcon icon={faTrash} /> </Button>                                \n          <Button className={indicador === 0 ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> viewArticulo()}>\n            <FontAwesomeIcon icon={faFilePdf} /> </Button>               \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } PERSONAS</p>          \n        </Col>\n      </Row>  \n\n\n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>    \n     \n                         \n    );\n};\nexport default SearchPersonas;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\n\n\nconst PersonaImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.personas) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"persona\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n  <>      \n      <div className=\"sub-form\">  \n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/personas/md/\" + item.filename}\n        />}\n        </Col>\n      </Row>\n      { item.id ?\n        <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n     </Row>\n      : null\n      }\n        \n     </div>   \n    </>  \n    )\n}     \n  \nexport default PersonaImagen;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }      \n\n\nconst TableEstudios = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.estudios)\n   const { item } = useSelector(state => state.personas)\n\n   const makeHttpRequestWithPage = (page, num) => {\n      dispatch(crudActions.GET_DATA('ESTUDIOS_DATA','estudios',page, num,item.id,'asc'))         \n  }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('ESTUDIOS_ADD','estudios',pky,item.id))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('ESTUDIOS_ITEM','estudios',pky))\n  };\n\n  useEffect(() => {      \n      return () => {\n        dispatch({type:'ESTUDIOS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Fecha</th>\n                  <th width=\"30%\">Profesión</th>\n                  <th width=\"10%\">Nivel</th>                             \n                  <th width=\"10%\">Estado</th>\n                  <th width=\"30%\">Institución</th>\n                  <th width=\"10%\"></th>\n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.fecha}</td>\n                        <td>{item.carrera}</td>\n                        <td>{item.nivel}</td>\n                        <td>{item.estado}</td>\n                        <td>{item.institucion}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableEstudios;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { custom } from '../../../../helpers/customStyles'\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\nconst carreras     = [\n          {\"value\":\"Administración\",\"label\":\"Administración\"},\n          {\"value\":\"Ingenieria\",\"label\":\"Ingenieria\"},\n          {\"value\":\"Informática\",\"label\":\"Informática\"},\n          {\"value\":\"Derecho\",\"label\":\"Derecho\"},\n        ];\n        \n        const niveles     = [\n          {\"value\":\"Técnico Medio\",\"label\":\"Técnico Medio\"},\n          {\"value\":\"Técnico Superio\",\"label\":\"Técnico Superio\"},\n          {\"value\":\"Licenciatura\",\"label\":\"Licenciatura\"},\n          {\"value\":\"Postgrado\",\"label\":\"Postgrado\"},\n        ]; \n\n        const estados     = [\n          {\"value\":\"Proceso\",\"label\":\"Proceso\"},\n          {\"value\":\"Egreso\",\"label\":\"Egreso\"},\n          {\"value\":\"Titulado\",\"label\":\"Titulado\"},          \n        ]; \n        const instituciones     = [\n          {\"value\":\"Univerisad San Andres\",\"label\":\"Univerisad San Andres\"},\n          {\"value\":\"Universidad de la Plata\",\"label\":\"Universidad de la Plata\"},\n          {\"value\":\"Universidad de Cordova\",\"label\":\"Universidad de Cordova\"},          \n        ]; \n        \n\nconst EditEstudio = () => {\n    const dispatch = useDispatch()  \n    const {item} = useSelector(state => state.estudios)   \n    const itt = useSelector(state => state.personas.item)\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('ESTUDIOS_CHANGE',name,value))  \n    }\n    const changesHandler = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('ESTUDIOS_CHANGE','carrera',value))          \n    }\n    const changesHandlern = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('ESTUDIOS_CHANGE','nivel',value))          \n    }\n    const changesHandlere = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('ESTUDIOS_CHANGE','estado',value))          \n    }\n    const changesHandleri = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('ESTUDIOS_CHANGE','institucion',value))          \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        let iok = item\n        iok.personaId = itt.id\n        iok.universidadId = 1\n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('ESTUDIOS_ADD','estudios',item,itt.id))            \n        }else{\n          dispatch(crudActions.SET_ADD('ESTUDIOS_ADD','estudios',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'ESTUDIOS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                  <Row form>                  \n                    <Col md={11}>\n                      <FormGroup>\n                        <Label for=\"efecha\">Fecha</Label>\n                        <Input type=\"date\" name=\"fecha\" id=\"fecha\"  \n                          value={item.fecha || ''}                         \n                          onChange={ (e) => changeHandler(e)}  \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />\n                      </FormGroup>   \n                    </Col>\n                  </Row>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                        <Label for=\"carrera\">Carrera</Label>\n                        <Select                                                               \n                              defaultValue={carreras[0]}\n                              styles={custom} \n                              name=\"carrera\"    \n                              id=\"carrera\"                    \n                              options={carreras}                                                         \n                              value={defaultVal(carreras,item.carrera)}   \n                              onChange={ (e) => changesHandler(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                        <Label for=\"institucion\">Institución</Label>\n                        <Select                                                               \n                              defaultValue={instituciones[0]}\n                              styles={custom} \n                              name=\"institucion\"    \n                              id=\"institucion\"                    \n                              options={instituciones}                                                         \n                              value={defaultVal(instituciones,item.institucion  )}   \n                              onChange={ (e) => changesHandleri(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                       <Label for=\"nivel\">Nivel</Label>\n                        <Select                                                               \n                              defaultValue={niveles[0]}\n                              styles={custom} \n                              name=\"nivel\"    \n                              id=\"nivel\"                    \n                              options={niveles}                                                        \n                              value={defaultVal(niveles,item.nivel)}   \n                              onChange={ (e) => changesHandlern(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                        <Label for=\"estado\">Estado</Label>\n                        <Select                                                               \n                              defaultValue={estados[0]}\n                              styles={custom} \n                              name=\"estado\"    \n                              id=\"estado\"                    \n                              options={estados}                                                       \n                              value={defaultVal(estados,item.estado)}   \n                              onChange={ (e) => changesHandlere(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={6}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditEstudio;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport TableEstudios from \"./components/TableEstudios\";\nimport EditEstudio from \"./components/EditEstudio\"\n\nconst EstudiosView = () => {      \n\n\n  return(          \n      <div className=\"card-contenidos\"> \n        <Row>\n            <Col md={3} className=\"marco\">\n            <EditEstudio/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableEstudios/>\n            </Col>            \n         </Row>\n      </div>    \n  )\n\n};\nexport default EstudiosView;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }      \n\n\nconst TableExperiencias = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.experiencias)\n   const { item } = useSelector(state => state.personas)\n\n   const makeHttpRequestWithPage = (page, num) => {\n      dispatch(crudActions.GET_DATA('EXPERIENCIAS_DATA','experiencias',page, num,item.id,'asc'))         \n  }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('EXPERIENCIAS_ADD','experiencias',pky,item.id))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('EXPERIENCIAS_ITEM','experiencias',pky))\n  };\n\n  useEffect(() => {      \n      return () => {\n        dispatch({type:'EXPERIENCIAS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Desde</th>\n                  <th width=\"10%\">Hasta</th>\n                  <th width=\"10%\">Pais</th>                             \n                  <th width=\"10%\">Ciudad</th>\n                  <th width=\"20%\">Motívo</th>\n                  <th width=\"20%\">Contacto</th>\n                  <th width=\"10%\">Teléfono</th>\n                  <th width=\"10%\"></th>\n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.desde}</td>\n                        <td>{item.hasta}</td>\n                        <td>{item.pais}</td>\n                        <td>{item.ciudad}</td>\n                        <td>{item.motivo}</td>\n                        <td>{item.contacto}</td>\n                        <td>{item.telefono}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableExperiencias;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { custom } from '../../../../helpers/customStyles'\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\nconst paises  = [\n          {\"value\":\"Argentina\",\"label\":\"Argentina\"},\n          {\"value\":\"Bolivia\",\"label\":\"Bolivia\"},\n          {\"value\":\"Colombia\",\"label\":\"Colombia\"}\n        ];\n        \nconst motivos = [\n          {\"value\":\"Fin Contrato\",\"label\":\"Fin Contrato\"},\n          {\"value\":\"Retiro Voluntario\",\"label\":\"Retiro Voluntario\"},\n          {\"value\":\"Otro\",\"label\":\"Otro\"}          \n        ]; \n\n\nconst EditExperiencia = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const {item} = useSelector(state => state.experiencias)   \n    const itt = useSelector(state => state.personas.item)\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('EXPERIENCIAS_CHANGE',name,value))  \n    }\n    const changesHandlern = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('EXPERIENCIAS_CHANGE','motivo',value))          \n    }\n    const changesHandlers = event => {                  \n      const {value} = event ? event : ''        \n      dispatch(crudActions.SET_CHANGE('EXPERIENCIAS_CHANGE','pais',value))          \n    }\n  \n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        let iok = item\n        iok.personaId = itt.id        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('EXPERIENCIAS_ADD','experiencias',item,itt.id))            \n        }else{\n          dispatch(crudActions.SET_ADD('EXPERIENCIAS_ADD','experiencias',item,'lista'))           \n        }   \n        console.log(iok)\n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'EXPERIENCIAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (  \n \n                \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                  <Row form>                  \n                    <Col md={6}>\n                      <FormGroup>\n                        <Label for=\"edesde\">Desde</Label>\n                        <Input type=\"date\" name=\"desde\" id=\"desde\"  \n                          value={item.desde || ''}                         \n                          onChange={ (e) => changeHandler(e)}  \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required  \n                          />\n                      </FormGroup>   \n                    </Col>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label for=\"ehasta\">Hasta</Label>\n                        <Input type=\"date\" name=\"hasta\" id=\"hasta\"  \n                          value={item.hasta || ''}                         \n                          onChange={ (e) => changeHandler(e)}  \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />\n                      </FormGroup>   \n                    </Col>\n                  </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                        <Label for=\"paises\">Paises</Label>\n                        <Select                                                               \n                              defaultValue={paises[0]}\n                              styles={custom} \n                              name=\"paises\"    \n                              id=\"paises\"                    \n                              options={paises}                                                         \n                              value={defaultVal(paises,item.pais)}   \n                              onChange={ (e) => changesHandlers(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                        <Label for=\"ciiudad\">Ciudad</Label>\n                        <Input type=\"text\" name=\"ciudad\" id=\"ciudad\" \n                          value={item.ciudad || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                       <Label for=\"motivo\">Motivo</Label>\n                        <Select                                                               \n                              defaultValue={motivos[0]}\n                              styles={custom} \n                              name=\"motivo\"    \n                              id=\"motivo\"                    \n                              options={motivos}                                                        \n                              value={defaultVal(motivos,item.motivo)}   \n                              onChange={ (e) => changesHandlern(e)}                                               \n                        />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                        <Label for=\"contacto\">Contacto</Label>\n                        <Input type=\"text\" name=\"contacto\" id=\"contacto\" \n                          value={item.contacto || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                        <Label for=\"contacto\">Teléfono</Label>\n                        <Input type=\"text\" name=\"telefono\" id=\"telefono\" \n                          value={item.telefono || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />  \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={6}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>   \n                                          \n    );\n};\nexport default EditExperiencia;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport TableExperiencias from \"./components/TableExperiencias\";\nimport EditExperiencia from \"./components/EditExperiencia\"\n\nconst ExperienciasView = () => {      \n\n\n  return(          \n      <div className=\"card-contenidos\"> \n        <Row>\n            <Col md={3} className=\"marco\">\n            <EditExperiencia/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableExperiencias/>\n            </Col>            \n         </Row>\n      </div>    \n  )\n\n};\nexport default ExperienciasView;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TabContent, TabPane, Nav, NavLink, NavItem, Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport Select from 'react-select'  \nimport { crudActions } from '../../../../actions'\n\nimport PersonaImagen from './PersonaImagen'\nimport { locations, ciudades } from \"../../../../helpers/locations\";\nimport { custom } from '../../../../helpers/customStyles'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft   } from \"@fortawesome/free-solid-svg-icons\";\nimport EstudiosView from \"../../Estudios/EstudiosView\"\nimport ExperienciasView from \"../../Experiencias/ExperienciasView\"\n\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\n\nconst tipos     = [{\"value\":\"personal\",\"label\":\"personal\"},\n                   {\"value\":\"empresa\",\"label\":\"empresa\"},];\n                     \nconst EditPersonas = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.personas)   \n    const [citys, setcitys] = useState([]);\n    const [iok1, setiok1] = useState(true);\n    const [iok2, setiok2] = useState(false);\n    const [iok3, setiok3] = useState(false);\n    const [tab, settab] = useState('1');\n    \n    const changeHandler = event => {          \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('PERSONAS_CHANGE',name,value))  \n    }\n      \n    const changesPaises = event => {                  \n      const {value, indice} = event ? event : ''   \n      console.log(value)           \n      console.log(indice)           \n      dispatch(crudActions.SET_CHANGE('PERSONAS_CHANGE','pais',value))   \n      let datc = ciudades.filter(d => (d.indice === indice) )  \n      setcitys(datc)\n  }\n    const changesCiudades = event => {                  \n      const {value} = event ? event : ''               \n      dispatch(crudActions.SET_CHANGE('PERSONAS_CHANGE','ciudad',value))   \n      \n    }\n\n    const changesHandler = event => {            \n        console.log(event)       \n        const {value} = event ? event : ''        \n        dispatch(crudActions.SET_CHANGE('PERSONAS_CHANGE','tipo',value))          \n    }\n  \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('PERSONAS_ADD','personas',item,'unit'))            \n        }else{\n          dispatch(crudActions.SET_ADD('PERSONAS_ADD','personas',item,'unit'))           \n        }            \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'PERSONAS_RESET_ITEM'})        \n      };\n    }, []); \n\n    const setChange = (kit) =>{ \n      switch(kit){\n        case '1':\n          setiok1(true)\n          setiok2(false)\n          setiok3(false)\n          settab('1') \n          break;\n        case '2':\n          setiok1(false)\n          setiok2(true)\n          setiok3(false)\n          settab('2') \n          break;\n        case '3':\n          setiok1(false)\n          setiok2(false)\n          setiok3(true)\n          settab('3') \n          break;        \n        default:\n          break;  \n      }      \n    }\n    console.log('repeticiones')\n    return (              \n      <>\n       <Row>              \n        <Col md=\"3\" className=\"btnBack\">\n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA CLIENTES\n          </Button>\n        </Col>                 \n      </Row> \n      <Row>        \n      <Col>\n        <Card>\n            <CardBody>\n             <Row>               \n             <Col md=\"12\">\n               <div className=\"nav-sunitys\" expand=\"lg\">            \n               <Nav tabs>\n                <NavItem>\n                  <NavLink className={iok1 ? 'active':''}  onClick={ () => {setChange('1')}} >\n                   Datos Generales\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok2 ? 'active':''}  onClick={ () => {setChange('2')}} >\n                    Información Académica\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok3 ? 'active':''}  onClick={ () => {setChange('3')}} >\n                    Esperiencia Laboral\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              </div>\n               </Col>               \n              </Row>  \n              <Row>      \n              <Col>\n              <TabContent activeTab={tab}>\n                <TabPane tabId=\"1\">\n                <Row>\n                 <Col md=\"8\" className=\"cardCo\">\n                    <Form onSubmit={ submitHandle}>   \n                      <Row form>\n                        <Col md={8}>\n                          <FormGroup>\n                            <Label for=\"codigo\">\n                              Código\n                            </Label>\n                            <Input\n                              id=\"codigo\"\n                              name=\"codigo\"                    \n                              type=\"text\"\n                              value={item.codigo || ''}\n                              onChange={ (e) => changeHandler(e)}                                 \n                              onInvalid={(e) => e.target.setCustomValidity('El campo código es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required \n                              \n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"tipo\">\n                              Tipo\n                            </Label>\n                              <Select                                                               \n                                defaultValue={tipos[0]}\n                                styles={custom} \n                                name=\"tipo\"    \n                                id=\"tipo\"                    \n                                options={tipos}      \n                                isClearable={false}                          \n                                value={defaultVal(tipos,item.tipo)}\n                                onChange={ (e) => changesHandler(e)}      \n                                \n                              />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row form>\n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"nombres\">\n                              Nombres\n                            </Label>\n                            <Input\n                              id=\"nombres\"\n                              name=\"nombres\"                    \n                              type=\"text\"\n                              value={item.nombres || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo nombres es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                           \n                            />\n                          </FormGroup>\n                        </Col>   \n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"paterno\">\n                              Apellido Paterno\n                            </Label>\n                            <Input\n                              id=\"paterno\"\n                              name=\"paterno\"                    \n                              type=\"text\"\n                              value={item.paterno || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo paterno es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                           \n                            />\n                          </FormGroup>\n                        </Col> \n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"materno\">\n                              Apellido Materno\n                            </Label>\n                            <Input\n                              id=\"materno\"\n                              name=\"materno\"                    \n                              type=\"text\"\n                              value={item.materno || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo materno es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                           \n                            />\n                          </FormGroup>\n                        </Col>         \n                      </Row>\n                      <Row form>\n                      <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"web\">\n                              WEB\n                            </Label>\n                            <Input\n                              id=\"web\"\n                              name=\"web\"                    \n                              type=\"text\"\n                              value={item.web || ''}\n                              onChange={ (e) => changeHandler(e)}\n                            />\n                        </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                        <FormGroup>\n                            <Label for=\"telefono\">\n                              Teléfono\n                            </Label>\n                            <Input\n                              id=\"telefono\"\n                              name=\"telefono\"                    \n                              type=\"text\"\n                              value={item.telefono || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo teléfono es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                              placeholder=\"(591)-000000\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"celular\">\n                              Celular\n                            </Label>\n                            <Input\n                              id=\"celular\"\n                              name=\"celular\"                    \n                              type=\"text\"\n                              value={item.celular || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo celular es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                              placeholder=\"(591)-000000\"\n                            />\n                          </FormGroup>\n                        </Col>            \n                      </Row>\n                      <FormGroup>\n                        <Label for=\"direccion\">\n                          Dirección\n                        </Label>\n                        <Input\n                          id=\"direccion\"\n                          name=\"direccion\"\n                          type=\"text\"\n                          value={item.direccion || ''}\n                          onChange={ (e) => changeHandler(e)}      \n                          onInvalid={(e) => e.target.setCustomValidity('El campo dirección es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                          required  \n                                \n                        />\n                      </FormGroup>            \n                    <Row form>\n                      <Col md={4}>\n                        <FormGroup>\n                          <Label for=\"Pais\">\n                            Pais\n                          </Label>   \n                            <Select                                                               \n                              defaultValue={locations[0]}\n                              styles={custom} \n                              name=\"pais\"    \n                              id=\"pais\"                    \n                              options={locations}      \n                              isClearable={true}                          \n                              value={defaultVal(locations,item.pais)}   \n                              onChange={ (e) => changesPaises(e)}                                               \n                            />                \n                        </FormGroup>\n                      </Col>\n                      <Col md={4}>\n                        <FormGroup>\n                          <Label for=\"ciudad\">\n                            Ciudad\n                          </Label>\n                          <Select                                                               \n                            defaultValue={citys[0]}\n                            styles={custom} \n                            name=\"ciudad\"    \n                            id=\"ciudad\"                    \n                            options={citys}      \n                            isClearable={true}                          \n                            value={defaultVal(ciudades,item.ciudad)}     \n                            onChange={ (e) => changesCiudades(e)}                                             \n                          />                   \n                        </FormGroup>\n                      </Col>\n                      <Col md={4}>\n                        <FormGroup>\n                          <Label for=\"Cod/Postal\">\n                            Código postal\n                          </Label>\n                          <Input\n                            id=\"codpostal\"\n                            name=\"codpostal\"\n                            type=\"text\"\n                            value={item.codpostal || ''}\n                            onChange={ (e) => changeHandler(e)}                \n                          />                  \n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <FormGroup>\n                      <Label for=\"observaciones\">\n                        Observaciones\n                      </Label>\n                      <Input\n                        id=\"observaciones\"\n                        name=\"observaciones\"\n                        type=\"text\"\n                        value={item.observaciones || ''}\n                        onChange={ (e) => changeHandler(e)}                \n                      />\n                    </FormGroup> \n\n                    <Row form>\n                      <Col md={4}>            \n                          <Button \n                            type=\"submit\"\n                            className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                            <FontAwesomeIcon icon={faSave} />  \n                            {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                          </Button>\n                      </Col>\n                    </Row>              \n            </Form>\n            </Col>\n            <Col md=\"4\" className=\"cardCo\">\n              <h6 className=\"text-center\">Imagen NIT</h6>\n              <PersonaImagen/>\n            </Col>\n          </Row>\n          </TabPane>\n          \n                 <TabPane tabId=\"2\">\n                   <EstudiosView/>\n                 </TabPane>\n                 <TabPane tabId=\"3\">\n                   <ExperienciasView/>\n                 </TabPane>\n               </TabContent>  \n             </Col>          \n            </Row>\n          </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      \n    </>\n    );\n};\nexport default EditPersonas;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../actions'\nimport PersonaResumen from \"./components/PersonaResumen\";\nimport TablePersonas from \"./components/TablePersonas\";\nimport SearchPersona from \"./components/SearchPersona\";\nimport EditPersona from \"./components/EditPersona\";\n\nconst PersonaView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView } = useSelector(state => state.personas)  \n \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'PERSONAS_VIEW',view:est})  \n                 \n  };\n\n  const getComponent = useCallback((io, key) =>{        \n      switch(io){\n        case 'data':\n          setComponent(<><SearchPersona getComponent={getComponent}/><TablePersonas getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'PERSONAS_RESET_ITEM'}) \n          setComponent(<EditPersona getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_COMPUESTO('PERSONAS_ITEM','personas',key)) \n          setComponent(<EditPersona getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n    return () => {\n     /* console.log('exit clients view')*/\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">               \n          {component}          \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <PersonaResumen/>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default PersonaView;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \n\nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }      \n\n\nconst TableHorarios = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.horarios)\n\n   const makeHttpRequestWithPage = useCallback((page, num) =>{\n    dispatch(crudActions.GET_DATA('HORARIOS_DATA','horarios',page, num,'nombre','asc'))      \n    console.log('segui1')\n  },[]) \n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('HORARIOS_ADD','horarios',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('HORARIOS_ITEM','horarios',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,12)\n      return () => {\n        dispatch({type:'HORARIOS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"5%\">Código</th>\n                  <th width=\"25%\">Nombre</th>\n                  <th width=\"15%\">Ingreso-I</th>\n                  <th width=\"15%\">Salida-I</th>\n                  <th width=\"15%\">Ingreso-T</th>\n                  <th width=\"15%\">Salida-T</th>                  \n                  <th width=\"10%\"></th>\n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>\n                        <td>{item.d1}</td>\n                        <td>{item.d2}</td>\n                        <td>{item.d3}</td>\n                        <td>{item.d4}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}>\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableHorarios;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { registerLocale } from  \"react-datepicker\";\nimport TimeField from 'react-simple-timefield';\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst EditHorario = () => {\n    const dispatch = useDispatch()   \n    const item = useSelector(state => state.horarios.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('HORARIOS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('HORARIOS_ADD','horarios',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('HORARIOS_ADD','horarios',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'HORARIOS_RESET_ITEM'})        \n      };\n    }, []); \n    const onTimeChange1 = (value) =>{      \n      dispatch(crudActions.SET_CHANGE('HORARIOS_CHANGE','d1',value)) \n    }\n    const onTimeChange2 = (value) =>{      \n      dispatch(crudActions.SET_CHANGE('HORARIOS_CHANGE','d2',value)) \n    }\n    const onTimeChange3 = (value) =>{      \n      dispatch(crudActions.SET_CHANGE('HORARIOS_CHANGE','d3',value)) \n    }\n    const onTimeChange4 = (value) =>{      \n      dispatch(crudActions.SET_CHANGE('HORARIOS_CHANGE','d4',value)) \n    }\n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"ingresoI\">Ingreso I</Label>   \n                      <TimeField\n                        value={item.d1}                       \n                        onChange={(event, value) => {onTimeChange1(value)}}                                         \n                        colon=\":\"\n                        className=\"lsTimes\"\n                        showSeconds\n                      />                   \n                    </FormGroup>   \n                  </Col>\n                </Row> \n                <Row form>                  \n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"ingresoI\">Salida I</Label>   \n                      <TimeField\n                        value={item.d2}                       \n                        onChange={(event, value) => {onTimeChange2(value)}}                                         \n                        colon=\":\"                          \n                        className=\"lsTimes\" \n                        showSeconds               \n                      />                   \n                    </FormGroup>\n                  </Col>\n                </Row> \n                <Row form>                  \n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"ingresoI\">Ingreso T</Label>   \n                      <TimeField\n                        value={item.d3}                       \n                        onChange={(event, value) => {onTimeChange3(value)}}                                         \n                        colon=\":\"                          \n                        className=\"lsTimes\" \n                        showSeconds                  \n                      />                   \n                    </FormGroup>\n                  </Col>\n                </Row> \n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"ingresoI\">Salida T</Label>   \n                      <TimeField\n                        value={item.d4}                       \n                        onChange={(event, value) => {onTimeChange4(value)}}                                         \n                        colon=\":\"                          \n                        className=\"lsTimes\" \n                        showSeconds                    \n                      />                   \n                    </FormGroup>\n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={6}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditHorario;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\n\nimport TableHorarios from \"./components/TableHorarios\";\nimport EditHorario from \"./components/EditHorario\"\n\nconst HorariosView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">        \n      \n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditHorario/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableHorarios/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default HorariosView;\n","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport Moment from 'react-moment'\n\n\nconst fechaHoy = new Date()\n export class ComponentToPrint extends React.PureComponent {\n   \n  render() {    \n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>ID Contrato # <b>{this.props.data.id}</b></b></h6>                         \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={7} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                  <tr><td width=\"30%\"><b>Nombres :</b></td>\n                      <td >{this.props.data.persona.nombres || ''}</td></tr>          \n                  \n                  <tr><td><b>Apellido Paterno :</b></td>\n                  <td>{this.props.data.persona.paterno || ''}</td></tr>          \n\n                  <tr><td><b>Apellido Materno :</b></td>\n                  <td>{this.props.data.persona.materno || ''}</td></tr>  \n\n                  <tr><td><b>CI :</b></td>\n                  <td>{this.props.data.persona.ci || ''}</td></tr>         \n\n                  <tr><td><b>Cargo :</b></td>\n                  <td>{this.props.data.cargo.nombre || ''}</td></tr>\n\n                  <tr><td><b>Fecha Inicio :</b></td>\n                  <td><Moment format=\"DD/MM/YYYY\">{this.props.data.fechaInicio}</Moment></td></tr>\n\n                  <tr><td><b>Fecha Fin :</b></td>\n                  <td><Moment format=\"DD/MM/YYYY\">{this.props.data.fechaFin}</Moment></td></tr>\n\n                  <tr><td><b>Horario :</b></td>\n                  <td>{this.props.data.horario.nombre || ''}</td></tr>\n                                    \n                  <tr><td><b>Salario :</b></td>\n                  <td>{this.props.data.salario.nombre || ''}</td></tr>\n\n                  <tr><td><b>Salario Monto:</b></td>\n                  <td>{new Intl.NumberFormat('de-DE',{style: \"currency\",currency:\"BOB\"}).format(this.props.data.salario.monto)}</td></tr>\n\n                  <tr><td><b>Plazo :</b></td>\n                  <td>{this.props.data.plazo || ''}</td></tr>\n\n                  <tr><td><b>Estado :</b></td>\n                  <td>{this.props.data.contratado ? 'activo': 'desactivado'}</td></tr>\n                  \n                  <tr><td colSpan=\"2\"><b>Observaciones :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.data.observaciones }</td></tr>                                      \n        </tbody>\n        </Table>\n          </Col>\n          <Col md={5} className=\"report-card\">\n            <Row>\n              <Col>\n                <img alt=\"contrato\" className=\"text-center imglg\" src={api + '/static/images/personas/lg/'+this.props.data.persona.filename }/> \n              </Col>\n            </Row>                    \n          </Col>\n        </Row>\n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction ContratoResumen () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.contratos)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'CONTRATOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            data={item}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default ContratoResumen","import React,{useEffect, useState} from \"react\";\nimport { FormGroup, Label, Table, Row, Col, Card, CardBody, CardFooter, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customStyles } from '../../../../helpers/customStyles'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\n\nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }            \n\nconst TableContratos = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas, indicador}= useSelector(state => state.contratos)\n   \n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('CONTRATOS_DATA','contratos',page, num,'id','desc'))      \n  }\n\n \n\n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'CONTRATOS_INDICADOR',value:iok}) \n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'CONTRATOS_RESET_DATA'})\n      };\n  }, []);\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n              <thead>\n                  <tr>  \n                      <th width=\"5%\"></th>\n                      <th width=\"5%\">Id</th>\n                      <th width=\"35%\">Persona</th>\n                      <th width=\"2%\">Cargo</th>\n                      <th width=\"10%\">Fecha</th>                      \n                      <th width=\"10%\">Estado</th>\n                      <th width=\"15%\">Plazo</th>\n                  </tr>\n              </thead>\n              {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                           \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          />                       \n                        </td>                \n                        <td>{item.id}</td>\n                        <td>{item.persona}</td>\n                        <td>{item.cargo}</td>\n                        <td>{item.fechaInicio}</td>\n                        <td>{item.true ? \"activo\" : \"vencido\"}</td>\n                        <td>{item.plazo}</td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n            </Table>  \n          </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>  \n</>      \n  )\n\n};\nexport default TableContratos;\n","import React,{useState} from \"react\";\nimport { ButtonGroup, Modal, ModalBody, Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFile, faCheck, faSearch, faPlus, faFileExport, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\nconst page =[{\"value\":'nombres',\"label\":'nombres'},\n             {\"value\":'ci',\"label\":'ci'}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\nconst SearchContratos = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView }= useSelector(state => state.contratos)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n\n    \n    \n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n    const createHandle = () => { \n      let eItem = {                            \n          usuarioId : usuario.id,\n          rolId: usuario.rolId     \n      }\n      dispatch(crudActions.SET_ADD('CONTRATOS_DATA','contratos',eItem,'lista'))      \n      dispatch({type:'CONTRATOS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})                                           \n   }\n    \n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('CONTRATOS_DATA','contratos',iok))              \n    }\n    const onBorrar = () => {            \n      dispatch(crudActions.GET_DELETE('CONTRATOS_DATA','contratos',indicador,'lista'))      \n      dispatch({type:'CONTRATOS_INDICADOR',value:0})\n      setview(false)\n\n    };\n\n    const viewArticulo = () => {        \n      let est = modalView === true ? false : true;             \n      dispatch({type:'CONTRATOS_VIEW',view:est}) \n      dispatch(crudActions.GET_ITEM('CONTRATOS_ITEM','contratos',indicador))\n    };   \n\n    const toggleModalView = () => {        \n      setview(!view)                  \n    };\n    \n    return ( \n      <>             \n      <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faFile} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> createHandle()}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n            <FontAwesomeIcon icon={faFileExport} /></Button>                                                 \n          <Button className={indicador === 0 ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> viewArticulo()}>\n            <FontAwesomeIcon icon={faFilePdf} /> </Button>               \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } CONTRATOS</p>          \n        </Col>\n      </Row>  \n\n\n      </Card>  \n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>    \n     \n                         \n    );\n};\nexport default SearchContratos;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\n\n\nconst ContratoImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.contratos) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"contrato\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n\n\nreturn(\n  <>      \n      <div className=\"sub-form\">  \n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img          \n          className=\"img-perfil\"\n          src={api + \"/static/images/contratos/md/\" + item.filename}\n        />}\n        </Col>\n      </Row>\n      { item.id ?\n        <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n     </Row>\n      : null\n      }\n        \n     </div>   \n    </>  \n    )\n}     \n  \nexport default ContratoImagen;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport { FormGroup, Label } from \"reactstrap\"\nimport Select from \"react-select\";\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectHorario = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.horarios)\n    const { item } = useSelector(state => state.contratos)\n\n    const makeHttpRequestWithPage = useCallback(() =>{\n        dispatch(crudActions.GET_LIST('HORARIOS_LISTA','horarios','nombre','asc'))          \n      },[])\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        dispatch(crudActions.SET_CHANGE('CONTRATOS_CHANGE','horarioId',io))        \n    }     \n    \n    useEffect(() => {\n       makeHttpRequestWithPage()\n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n        <FormGroup> \n        <Label for=\"horarios\">Horarios</Label>\n        <Select\n            defaultValue={data[0]}\n            name=\"horarioId\"    \n            id=\"horarioId\"                    \n            options={data}      \n          \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.horarioId)} \n        />    \n        </FormGroup>                                             \n    );\n};\nexport default SelectHorario;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\nimport { FormGroup, Label } from \"reactstrap\"\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectSalario = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.salarios)\n    const { item } = useSelector(state => state.contratos)\n\n    const makeHttpRequestWithPage = useCallback(() =>{\n        dispatch(crudActions.GET_LIST('SALARIOS_LISTA','salarios','nombre','asc'))          \n      },[])\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        dispatch(crudActions.SET_CHANGE('CONTRATOS_CHANGE','salarioId',io))        \n    }     \n    \n    useEffect(() => {\n       makeHttpRequestWithPage()\n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n        <FormGroup>\n        <Label for=\"salarios\">Salarios</Label>\n        <Select\n            defaultValue={data[0]}\n            name=\"salarioId\"    \n            id=\"salarioId\"                    \n            options={data}      \n            \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.salarioId)} \n        />    \n        </FormGroup> \n    );\n};\nexport default SelectSalario;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport { Label, FormGroup } from \"reactstrap\"\nimport Select from \"react-select\";\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectCargo = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.cargos)\n    const { item } = useSelector(state => state.contratos)\n\n    const makeHttpRequestWithPage = useCallback(() =>{\n        dispatch(crudActions.GET_LIST('CARGOS_LISTA','cargos','nombre','asc'))          \n      },[])\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        dispatch(crudActions.SET_CHANGE('CONTRATOS_CHANGE','cargoId',io))        \n    }     \n    \n    useEffect(() => {\n       makeHttpRequestWithPage()\n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n        <FormGroup> \n        <Label for=\"cargos\">Cargos</Label>\n        <Select\n            defaultValue={data[0]}\n            name=\"cargoId\"    \n            id=\"cargoId\"                    \n            options={data}      \n          \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.cargoId)} \n        />    \n        </FormGroup>                                             \n    );\n};\nexport default SelectCargo;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../../actions'  \nimport {  \n    Row,\n    Col,\n    Card,\n    CardBody,\n    Form,\n    Button, FormGroup, Input, Label, Modal, ModalBody, Table\n  } from \"reactstrap\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ContratoPersona = () => {\n    const dispatch = useDispatch()   \n    const [modalView, setmodalView] = useState(false); \n    const { data  } = useSelector(state => state.personas) \n    const itt  = useSelector(state => state.contratos.item) \n    const [prop, setProp] = useState('nombres');\n    const [value, setValue] = useState(\"\");\n   \n    const toggleModalView = () => {    \n        let est = modalView === true ? false : true;             \n        setmodalView(est)                          \n    };\n\n    const asignar = (item) => {    \n        let est = modalView === true ? false : true;                     \n        dispatch({type: 'CONTRATOS_CHANGE', props: 'personaId', value: item.id})\n        dispatch({type: 'CONTRATOS_CHANGE', props: 'person', value: item.nombres})        \n        setmodalView(est)  \n        dispatch({type:'PERSONAS_RESET_DATA'})             \n    };\n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('PERSONAS_DATA','personas',iok))              \n     } \n\n    useEffect(() => {        \n    \n        return () => {\n          dispatch({type:'PERSONAS_RESET'})   \n        };\n      }, []);\n\n    return (                      \n      <>\n        <Row form>          \n            <Col md={10}>        \n             <FormGroup>\n              <Label for=\"clients\">Personas</Label>\n              <Input type=\"text\" name=\"person\" id=\"person\" \n                    value={itt.person}\n                    readOnly={true}/>              \n             </FormGroup>       \n            </Col>        \n            <Col md={2}>        \n            <Button className=\"btn-sample\" onClick={() => toggleModalView()}>\n                <FontAwesomeIcon icon={faSearch} />                          \n            </Button>\n          </Col>\n        </Row>\n       <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Row>\n            <Col >\n              <Card>\n              <CardBody>\n                <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    <Input \n                        type=\"text\" \n                        name=\"value\"                                 \n                        id=\"value\"  \n                        value={ value || '' }  \n                        onChange={(e) =>{setValue(e.target.value)}} />\n                        {\n                          value ? \n                          <Button className=\"volatils\" onClick={(e) => {setValue('')}}>\n                            <FontAwesomeIcon icon={faTimes}   />\n                          </Button>\n                          : null\n                        }\n                    </Col>    \n                    <Button className=\"btn-sm btn-primary\" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                </Form>  \n                </CardBody>\n              </Card>  \n            </Col>\n          </Row>\n\n           <Row>\n            <Col>\n            <div className=\"table-single\">     \n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"15%\">Id</th>\n                            <th width=\"50%\">Nombres</th>                            \n                            <th width=\"25%\">Nit</th>            \n                            <th width=\"10%\"></th>                \n                        </tr>\n                    </thead>\n                    {data && (\n                        <tbody>\n                            {data.map((item) => (\n                                <tr key={item.id}>                      \n                                    <td>{item.id}</td>\n                                    <td>{item.nombres}</td>                                    \n                                    <td>{item.nit}</td>                                                       \n                                    <td>\n                                    <Button className=\"btn btn-success\" \n                                    onClick={() => { asignar(item)}}>\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                    </Button>              \n                                    </td>\n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                    </Table>\n            </div>\n            </Col>\n          </Row>  \n          </ModalBody>\n        </Modal>\n\n       </>\n    );\n};\nexport default ContratoPersona;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport ContratoImagen from './ContratoImagen'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft   } from \"@fortawesome/free-solid-svg-icons\";\nimport SelectHorario from \"../../Horarios/components/SelectHorario\"\nimport SelectSalario   from \"../../Salarios/components/SelectSalario\"\nimport SelectCargo from \"../../Cargos/components/SelectCargo\"\nimport ContratoPersona from \"../../Personas/components/ContratoPersona\"\n\n\nconst EditContratos = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.contratos)           \n    const changeHandler = event => {          \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('CONTRATOS_CHANGE',name,value))  \n    }\n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('CONTRATOS_ADD','contratos',item,'unit'))            \n        }else{\n          dispatch(crudActions.SET_ADD('CONTRATOS_ADD','contratos',item,'unit'))           \n        }            \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'CONTRATOS_RESET_ITEM'})        \n      };\n    }, []); \n\n    console.log('repeticiones')\n    return (              \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA CONTRATOS\n          </Button>              \n        </Col>  \n      </Row>\n      <Row>      \n        <Col>\n            <Card>                    \n              <CardBody>\n               <Row>\n                 <Col md=\"5\" className=\"cardCo\">\n                 <ContratoPersona/>\n                    <Form onSubmit={ submitHandle}>   \n                      <Row form>\n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"nro\">\n                              Nro\n                            </Label>\n                            <Input\n                              id=\"nro\"\n                              name=\"nro\"                    \n                              type=\"text\"\n                              value={item.nro || ''}\n                              onChange={ (e) => changeHandler(e)}                                 \n                              onInvalid={(e) => e.target.setCustomValidity('El campo nro es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required \n                              \n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                          <FormGroup>\n                            <Label for=\"fechaInicio\">\n                              Fecha Inicio\n                            </Label>\n                            <Input\n                              id=\"fechaInicio\"\n                              name=\"fechaInicio\"                    \n                              type=\"date\"\n                              value={item.fechaInicio || ''}\n                              onChange={ (e) => changeHandler(e)}\n                              onInvalid={(e) => e.target.setCustomValidity('El campo fechaInicio es obligatorio !')}\n                              onInput={(e) => e.target.setCustomValidity('')}\n                              required  \n                           \n                            />\n                          </FormGroup>\n                        </Col> \n                        <Col md={4}>\n                          <FormGroup>\n                              <Label for=\"fechaFin\">Fecha Fin</Label>\n                              <Input\n                                id=\"fechaFin\"\n                                name=\"fechaFin\"                    \n                                type=\"date\"\n                                value={item.fechaFin || ''}\n                                onChange={ (e) => changeHandler(e)}\n                                onInvalid={(e) => e.target.setCustomValidity('El campo fechaFin es obligatorio !')}\n                                onInput={(e) => e.target.setCustomValidity('')}\n                                required                             \n                            />\n                          </FormGroup>\n                        </Col>\n                    </Row>            \n                    <FormGroup>\n                      <Label for=\"observaciones\">\n                        Observaciones\n                      </Label>\n                      <Input\n                        id=\"observaciones\"\n                        name=\"observaciones\"\n                        type=\"textarea\"\n                        value={item.observaciones || ''}\n                        onChange={ (e) => changeHandler(e)}                \n                      />\n                    </FormGroup>\n                    <Row form>\n                      <Col md={4}>            \n                          <Button \n                            type=\"submit\"\n                            className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                            <FontAwesomeIcon icon={faSave} />  \n                            {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                          </Button>\n                      </Col>\n                    </Row>              \n            </Form>\n            </Col>\n            <Col md=\"3\">              \n              <SelectCargo/>\n              <SelectSalario/>\n              <SelectHorario/>\n            </Col>\n            <Col md=\"4\" className=\"cardCo\">\n              <h6 className=\"text-center\">Imagen NIT</h6>\n              <ContratoImagen/>\n            </Col>\n          </Row>\n        </CardBody>   \n      </Card>\n        </Col>          \n      </Row>\n    </>\n    );\n};\nexport default EditContratos;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../actions'\nimport ContratoResumen from \"./components/ContratoResumen\";\nimport TableContratos from \"./components/TableContratos\";\nimport SearchContrato from \"./components/SearchContrato\";\nimport EditContrato from \"./components/EditContrato\";\n\nconst ContratoView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView } = useSelector(state => state.contratos)  \n \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'CONTRATOS_VIEW',view:est})  \n                 \n  };\n\n  const getComponent = useCallback((io, key) =>{        \n      switch(io){\n        case 'data':\n          setComponent(<><SearchContrato getComponent={getComponent}/><TableContratos getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'CONTRATOS_RESET_ITEM'}) \n          setComponent(<EditContrato getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM('CONTRATOS_ITEM','contratos',key)) \n          setComponent(<EditContrato getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n    return () => {\n     /* console.log('exit clients view')*/\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">        \n      <div className=\"main-contenido\">             \n          {component}          \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ContratoResumen/>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default ContratoView;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nconst page =[{\"value\":15,\"label\":\"15\"},\n             {\"value\":30,\"label\":\"30\"},\n             {\"value\":50,\"label\":\"50\"}             \n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }      \n\n\nconst TableCargos = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.cargos)\n\n   const makeHttpRequestWithPage =(page, num) =>{\n    dispatch(crudActions.GET_DATA('CARGOS_DATA','cargos',page, num,'nombre','asc'))      \n  }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('CARGOS_ADD','cargos',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('CARGOS_ITEM','cargos',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,12)\n      return () => {\n        dispatch({type:'CARGOS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Código</th>\n                  <th width=\"70%\">Nombre</th>                                           \n                  <th width=\"20%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>                        \n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={page[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableCargos;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditCargo = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.cargos.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('CARGOS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('CARGOS_ADD','cargos',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('CARGOS_ADD','cargos',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'CARGOS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>              \n                \n                <Row form>                  \n                  <Col md={6}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditCargo;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\n\nimport TableCargos from \"./components/TableCargos\";\nimport EditCargo from \"./components/EditCargo\"\n\nconst CargosView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">                 \n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditCargo/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableCargos/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default CargosView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faUser, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport RRhhInicio from \"../../pages/RRHH/InicioView.jsx\"\nimport Salarios from \"../../pages/RRHH/Salarios/SalariosView.jsx\"\nimport Personas from \"../../pages/RRHH/Personas/PersonasView.jsx\"\nimport Horarios from \"../../pages/RRHH/Horarios/HorariosView.jsx\"\nimport Contratos from \"../../pages/RRHH/Contratos/ContratosView.jsx\"\nimport Cargos from \"../../pages/RRHH/Cargos/CargosView.jsx\"\n\n\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction Rrhh(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems'))    \n    const { loading }= useSelector(state => state.usuarios)\n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{            \n            if(prop.icon === \"rrhh\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n            }\n            return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Salarios\":\n            return Salarios;   \n          case \"Personas\":\n            return Personas;\n          case \"Horarios\":\n            return Horarios;\n          case \"Contratos\":\n            return Contratos;  \n          case \"Cargos\":\n            return Cargos; \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/rrhh'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">        \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>\n            </div> \n            <div className=\"center-unity\">\n            <h6>RRHH</h6>  \n            </div> \n            <div className=\"right-unity\">\n                  <Row className=\"barraUser\">              \n                    <Col md={2}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faUser} />  \n                    </div>                    \n                    </Col>\n                    <Col md={8}>                    \n                        <p>Usuario: {usuario.nombres}</p>\n                    </Col>                                         \n                    <Col md={2} className=\"text-right\"> \n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>\n        <Nav> \n          <div className=\"navLeft\">  \n              <NavItem>       \n                <NavLink to=\"/rrhh/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                  <p className=\"text-white\">  Dashboard  </p>\n                </NavLink>          \n              </NavItem>                  \n        \n        {itemr.map((prop, key) => (  \n          <NavItem key={key}>  \n            <NavLink                \n              to={prop.layout + prop.path}\n              className=\"nav-link\"\n              activeClassName=\"active\">               \n              <p> {prop.name}</p>                    \n            </NavLink>\n          </NavItem>))\n        }\n      </div>\n\n        <div className=\"navRight\">          \n          \n        </div>\n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}                       \n          <Route path=\"/rrhh/inicio\" component={RRhhInicio} />          \n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Rrhh;\n\n","import React,{useEffect} from \"react\";\nimport { Row,Col, Card } from \"reactstrap\"\nimport { useSelector, useDispatch } from 'react-redux'  \nimport { crudActions } from '../../actions'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nconst InicioView = () => {\n  const dispatch = useDispatch()   \n  const { zporcentajes, zcantidades, yingresos, ysalidas, labelProductos, itemsMinimo, itemsActual } = useSelector(state => state.informes)\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  let d = new Date()\n  let gestion = d.getFullYear()\n  \n  const makeHttpRequestWithPage = () =>{\n    let iok={\n      \"usuarioId\":usuario.id,\n      \"rolId\": usuario.rolId,\n      \"gestion\": gestion\n    }\n    dispatch(crudActions.GET_INFORMES('INFORMES_DASHBOARD_INVENTARIO','inventory',iok))      \n  }\n\n  useEffect(() => {\n    makeHttpRequestWithPage()\n    return () => {\n      dispatch({type:'INVENTARIOS_INFORMES_RESET'}) \n    };\n  }, []);\n\n const ordenes = {\n    chart: {\n        type: 'bar'\n    },\n    title: {\n        text: 'Rotación de Inventario (mínimo - actual)'\n    },\n    subtitle: {\n        text: 'Gestión ' + gestion\n    },\n    xAxis: {\n        categories: labelProductos,\n        title: {\n            text: null\n        }\n    },\n    yAxis: {\n        min: 0,\n        title: {\n            text: 'Stock ',\n            align: 'high'\n        },\n        labels: {\n            overflow: 'justify'\n        }\n    },\n    tooltip: {\n        valueSuffix: ' cantidades'\n    },\n    plotOptions: {\n        bar: {\n            dataLabels: {\n                enabled: true\n            }\n        }\n    },\n    legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'top',\n        x: -40,\n        y: 80,\n        floating: true,\n        borderWidth: 1,\n        backgroundColor:\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\n        shadow: true\n    },\n    credits: {\n        enabled: false\n    },\n    series: [{\n        name: 'Stock mínimo',\n        data: itemsMinimo\n    }, {\n        name: 'Stock actual',\n        data: itemsActual\n    }]\n  }\n\n  const samples = {\n    chart: {\n      type: 'column'\n  },\n  title: {\n      text: 'Movimiento de Inventario'\n  },\n  credits: {\n    enabled: false\n  },\n  subtitle: {\n      text: 'Gestion : ' + gestion\n  },\n  xAxis: {\n      categories: [\n          'Ene',\n          'Feb',\n          'Mar',\n          'Abr',\n          'May',\n          'Jun',\n          'Jul',\n          'Ago',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dic'\n      ],\n      crosshair: true\n  },\n  yAxis: {\n      min: 0,\n      title: {\n          text: 'Cantidad '\n      }\n  },\n  plotOptions: {\n      column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n      }\n  },\n  series: [{\n      name: 'Ingresos',\n      data: yingresos\n\n  }, {\n      name: 'Salidas',\n      data: ysalidas\n\n  }] \n  }\n  \n\n  const existencias = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n  },\n  title: {\n      text: '% en  Valor de Inventario'\n  }, \n  credits: {\n    enabled: false\n  },\n  tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  accessibility: {\n      point: {\n          valueSuffix: '%'\n      }\n  },\n  plotOptions: {\n      pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n      }\n  },\n  series: [{\n      name: 'Brands',\n      colorByPoint: true,\n      data: zporcentajes\n  }]\n  }\n\n  const cantidades = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n  },\n  title: {\n      text: 'Σ en  Cantidad de Inventario'\n  }, \n  credits: {\n    enabled: false\n},\n  tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  accessibility: {\n      point: {\n          valueSuffix: '%'\n      }\n  },\n  plotOptions: {\n      pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n      }\n  },\n  series: [{\n      name: 'Brands',\n      colorByPoint: true,\n      data: zcantidades\n  }]\n  }\n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n       \n\n        <Row className=\"mt-1\">\n          <Col md={6}>\n            <Card>\n            <HighchartsReact\n                  highcharts={Highcharts}\n                  options={ordenes}\n                />\n            </Card>    \n          </Col>  \n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={samples}\n                />\n            </Card>    \n          </Col>            \n        </Row> \n        <Row className=\"mt-1\">\n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={cantidades}\n                />\n            </Card>                       \n          </Col>    \n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={existencias}\n                />\n            </Card>                       \n          </Col>            \n        </Row>   \n      </div>\n    </div>    \n  )\n\n};\nexport default InicioView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { Table, Row, Col, Card, CardBody,  CardFooter, FormGroup, Label, Input  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableArticulos = ({getComponent}) => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas,indicador}= useSelector(state => state.articulos)   \n   \n   const makeHttpRequestWithPage = (page,num) =>{          \n     dispatch(crudActions.GET_DATA('ARTICULOS_DATA','articulos',page, num,'nombre','ASC' ))      \n    } \n\n \n  const changeSelect = (pky) => {        \n    const {value} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  const setIndicador = (pky) => {            \n    let iok = pky === indicador  ? 0 : pky\n    dispatch({type:'ARTICULOS_INDICADOR',value:iok}) \n  };\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {            \n      dispatch({type:'ARTICULOS_RESET_DATA'})\n      };\n  }, []);\n\n  return(\n    <>    \n     <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr> \n                <th width=\"5%\"></th> \n                <th width=\"15%\" >Código</th>\n                <th width=\"40%\">Nombre</th>\n                <th width=\"20%\">Categoría</th>\n                <th width=\"20%\">Marca</th>                              \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>  \n                        <td >                       \n                          <Input type=\"checkbox\" \n                          onChange={() => { setIndicador(item.id) }} \n                          checked={ item.id === indicador ? true : false}\n                          /> \n                        </td>                                             \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                  \n                        <td>{item.categoria}</td>\n                        <td>{item.marca}</td>                                          \n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n          <CardFooter>\n          <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>   \n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row> \n       \n</>      \n  )\n\n};\nexport default TableArticulos;\n","import React,{useState} from \"react\";\nimport { Modal, ModalBody, Card, ButtonGroup, Row,Col,Button, Form, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTags, faQrcode, faCheck, faSearch, faPlus, faBarcode, faFileExport, faCopy, faTrash, faFilePdf, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport { customs } from '../../../../helpers/customStyles'\n\nconst page =[{\"value\":'codigoBarras',\"label\":'codigo'},\n             {\"value\":'nombre',\"label\":'nombre'},             \n             {\"value\":'descripcion',\"label\":'descripcion'}\n            ];\n\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n           item.value === valor\n  )}\n\n\n\nconst SearchArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, modalView, modalViews,modalViewq }= useSelector(state => state.articulos)\n    const [prop, setProp] = useState('nombre');\n    const [value, setValue] = useState();\n    const [view, setview] = useState(false);\n\n    const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n    };\n\n        \n    const submitHandle = event => {       \n        event.preventDefault()  \n        let iok = {}               \n        iok.value = value\n        iok.prop  = prop\n        dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','articulos',iok))              \n     }  \n \n    const onCopiar = () => {                  \n      dispatch(crudActions.SET_COPIAR('ARTICULOS_DATA','articulos',indicador)) \n      dispatch({type:'ARTICULOS_INDICADOR',value:0})\n    };\n  \n    const onBorrar = () => {            \n      dispatch(crudActions.GET_DELETE('ARTICULOS_DATA','articulos',indicador,'lista'))      \n      dispatch({type:'ARTICULOS_INDICADOR',value:0})\n      setview(false)\n\n    };\n\n    const viewArticulo = (pky) => {        \n      let est = false\n      switch(pky) \n      {\n        case 'pdf':\n          est = modalView === true ? false : true;             \n          dispatch({type:'ARTICULOS_VIEW',view:est})\n          dispatch(crudActions.GET_ITEM('ARTICULOS_ITEM','articulos',indicador))\n          break;\n        case 'barras':\n          est = modalViews === true ? false : true;                     \n          dispatch({type:'ARTICULOS_BARRAS',view:est}) \n          dispatch(crudActions.GET_ITEM_SINGLE('ARTICULOS_ITEM','articulos',indicador))\n          break;\n        case 'qr':\n          est = modalViewq === true ? false : true;                     \n          dispatch({type:'ARTICULOS_QR',view:est}) \n          dispatch(crudActions.GET_ITEM_SINGLE('ARTICULOS_ITEM','articulos',indicador))\n          break;      \n        default:\n          break;\n      }          \n    };   \n    \n    const toggleModalView = () => {        \n      setview(!view)                  \n    };\n\n    \n  return (              \n    <> \n    <Card>             \n    <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faTags} />  \n          </div>        \n        </Col> \n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                 <FontAwesomeIcon icon={faFileExport} /></Button>    \n          <Button className={indicador === 0 ? \"bts bg-default disabled text-white\": \"bts bg-default text-white\"} onClick={()=> onCopiar()}>\n                 <FontAwesomeIcon icon={faCopy} /> </Button>             \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n                 <FontAwesomeIcon icon={faTrash} /> </Button>                                \n          <Button className={indicador === 0 ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo('pdf')}>\n                 <FontAwesomeIcon icon={faFilePdf} /> </Button>  \n          <Button className={indicador === 0 ? \"bts bg-default disabled text-white\": \"bts bg-default text-white\"} onClick={()=> viewArticulo('barras')}>\n                 <FontAwesomeIcon icon={faBarcode} /> </Button>    \n          <Button className={indicador === 0 ? \"btr bg-default disabled text-white\": \"btr bg-default text-white\"} onClick={()=> viewArticulo('qr')}>\n                 <FontAwesomeIcon icon={faQrcode} /> </Button>              \n        </ButtonGroup>\n        </Col>   \n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } ARTICULOS</p>          \n        </Col>\n    </Row>\n    </Card>   \n\n    <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n    </>    \n              \n                         \n    );\n};\nexport default SearchArticulos;\n","import React,{useState, useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { api } from \"../../../../helpers\";\nimport { Input, Row, Col, FormGroup, Button, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ArticuloImagen = () =>{\n    const dispatch = useDispatch()\n    const { item } = useSelector(state => state.articulos) \n    const [file,setFile] = useState('');\n    const [imagePreviewUrl,setImagePreviewUrl] = useState('');    \n    \n    const handleSubmit = (e) =>{                     \n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        dispatch(crudActions.SET_UPLOAD_IMAGEN(\n          \"articulo\",          \n          formData,\n          item.id\n        ));           \n    }\n\n    const handleImageChange = (e) => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)    \n      };    \n      reader.readAsDataURL(file);      \n    }\n\n    useEffect(() => {      \n      return () => {\n        dispatch({type:'ARTICULOS_RESET_ITEM'})        \n      };\n    }, []); \n\nreturn(\n    \n      <div className=\"sub-form\">  \n      <Row className=\"perfilPreview\">\n        <Col>\n        {imagePreviewUrl ? \n          <img alt=\"preview\" className=\"img-perfil\" src={imagePreviewUrl} />\n        :\n        <img\n          alt=\"artículo\"\n          className=\"img-perfil\"\n          src={api + \"/static/images/articulos/md/\" + item.filename}\n        />}\n        </Col>\n      </Row>\n      { item.id ?\n        <Row className=\"perfilSave\">        \n        <Col md=\"6\">\n         <FormGroup className=\"frmp mt-1\">\n           <Input\n             type=\"file\"\n             id=\"file\"\n             name=\"formData\"\n             onChange={(e) => handleImageChange(e)}/>\n           <FontAwesomeIcon icon={faImage} />  \n         </FormGroup>\n        </Col> \n        <Col md=\"6\">\n         <ButtonGroup>\n           <Button\n             className={\n                         file\n                           ? \"submitButton btn-success btn-md\"\n                           : \"submitButton disabled btn-md\"\n                       }\n             type=\"submit\"\n             onClick={(e) => handleSubmit(e)}>\n             <FontAwesomeIcon icon={faUpload} /> \n           </Button>\n         </ButtonGroup>\n        </Col> \n     </Row>\n      : null\n      }\n        \n     </div>   \n  \n    )\n}     \n  \nexport default ArticuloImagen;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\n\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectCategoria = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.categorias)\n    const { item } = useSelector(state => state.articulos)\n   \n\n \n\n    const changeHandler = event => {    \n      let io = event ? event.value: 0    \n      dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE','categoriaId',io))        \n  }     \n  \n         \n    \n    useEffect(() => {\n        dispatch(crudActions.GET_LIST('CATEGORIAS_LISTA','categorias','nombre','asc')) \n        return () => {\n            dispatch({type:'CATEGORIAS_RESET_DATA'})  \n        };\n    }, []);\n\n\n    return (              \n        <>\n        <Select\n            defaultValue={data[0]}\n            name=\"categoriaId\"    \n            id=\"categoriaId\"                    \n            options={data}              \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.categoriaId)} \n        /> \n        </>                                             \n    );\n};\nexport default SelectCategoria;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectMarca = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.marcas)\n    const { item } = useSelector(state => state.articulos)\n\n\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE','marcaId',io))        \n    }     \n    \n    useEffect(() => {\n        dispatch(crudActions.GET_LIST('MARCAS_LISTA','marcas',0,0))  \n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n        <>\n        <Select\n            defaultValue={data[0]}\n            name=\"marcaId\"    \n            id=\"marcaId\"                    \n            options={data}      \n           \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.marcaId)} \n        />    \n        </>                                             \n    );\n};\nexport default SelectMarca;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { custom } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\nconst defaultVal = (options, valor) =>{\n    return options.filter(item =>\n        item.value === valor\n      )\n  \n  }\n\nconst SelectUnidad = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.unidades)\n    const { item } = useSelector(state => state.articulos)\n\n\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE','unidadId',io))        \n    }     \n    \n    useEffect(() => {\n        dispatch(crudActions.GET_LIST('UNIDADES_LISTA','unidades',0,0)) \n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n        <>\n        <Select\n            defaultValue={data[0]}\n            name=\"unidadId\"    \n            id=\"unidadId\"                    \n            options={data}   \n            styles={custom}\n            onChange={ (e) => changeHandler(e) }                         \n            value={defaultVal(data,item.unidadId)} \n        />    \n        </>                                             \n    );\n};\nexport default SelectUnidad;\n","import React,{ useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row,Col,Button, Form, FormGroup, Input, Label, Card, CardBody } from \"reactstrap\"\nimport Select from 'react-select'  \nimport Switch from 'react-switch'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faArrowLeft   } from \"@fortawesome/free-solid-svg-icons\";\nimport ArticuloImagen from './ArticuloImagen'\nimport SelectCategoria from '../../Categorias/components/SelectCategoria'\nimport SelectMarca from '../../Marcas/components/SelectMarca'\nimport SelectUnidad from '../../Unidades/components/SelectUnidad'\nimport { custom } from '../../../../helpers/customStyles'\nimport { tiposServicio, niveles, clasificaciones } from \"../../../../helpers/dataLoad\";\n\nconst defaultVal = (options, valor) =>{\n  return options.filter(item =>\n      item.value === valor\n    )\n\n}\n\n\nconst EditArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()  \n    const { item } = useSelector(state => state.articulos)   \n    const [iok1, setiok1] = useState(true);\n    const [iok2, setiok2] = useState(false);\n    const [iok3, setiok3] = useState(false);\n    const [tab, settab] = useState('1');\n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE',name,value))  \n    }\n      \n    const changesHandler = (event,name) => {                              \n        const { value } = event ? event : '' \n        dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE',name,value))            \n    }\n   \n    const changeSwitch = (checked,name) => {  \n      console.log(checked)                \n      console.log(name)                \n      dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE',name,checked))  \n    }\n    \n    const submitUpdate= event => {  \n      event.preventDefault()  \n      dispatch(crudActions.SET_UPDATE('ARTICULOS_ADD','articulos',item,'unit'))\n    }  \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('ARTICULOS_ADD','articulos',item,'unit'))            \n        }else{\n          dispatch(crudActions.SET_ADD('ARTICULOS_ADD','articulos',item,'unit'))           \n        }    \n        console.log(item) \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'ARTICULOS_RESET_ITEM'})        \n      };\n    }, []); \n    const setChange = (kit) =>{ \n      switch(kit){\n        case '1':\n          setiok1(true)\n          setiok2(false)\n          setiok3(false)\n          settab('1') \n          break;\n        case '2':\n          setiok1(false)\n          setiok2(true)\n          setiok3(false)\n          settab('2') \n          break;\n        case '3':\n          setiok1(false)\n          setiok2(false)\n          setiok3(true)\n          settab('3') \n          break;        \n        default:\n          break;  \n      }      \n    }\n    return (              \n    <>\n    <Row>        \n      <Col md=\"3\" className=\"btnBack\">  \n        <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA ARTICULOS\n        </Button>              \n      </Col>  \n    </Row>\n    <Row>      \n        <Col>\n        <div className=\"nav-sunitys\" expand=\"lg\">            \n               <Nav tabs>\n                <NavItem>\n                  <NavLink className={iok1 ? 'active':''}  onClick={ () => {setChange('1')}} >\n                   Datos Generales\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok2 ? 'active':''}  onClick={ () => {setChange('2')}} >\n                    Imagenes\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className={iok3 ? 'active':''}  onClick={ () => {setChange('3')}} >\n                    Inventario\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              </div>\n        </Col>          \n      </Row>\n\n      <Row>      \n        <Col>\n          <Card>\n           <CardBody>\n            <TabContent activeTab={tab}>\n              <TabPane tabId=\"1\">\n              <Row>\n                <Col md=\"12\">\n                <Form onSubmit={submitHandle}>\n                <Row form>\n                  <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"codigoBarras\">Código</Label>\n                        <Input type=\"text\" name=\"codigoBarras\" id=\"codigoBarras\"\n                          placeholder=\"codigo\"  value={item.codigoBarras || ''}\n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo código barras es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          maxLength={25}                          \n                          required\n                        />    \n                    </FormGroup>    \n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"codigo\">Código Ref.</Label>\n                        <Input type=\"text\" name=\"codigo\" id=\"codigo\" \n                          placeholder=\"codigo\"  value={item.codigoBarras + '-' +item.id}\n                          onChange={ (e) => changeHandler(e)}                           \n                          maxLength={25}                      \n                          readOnly={true}    \n                          \n                          />    \n                    </FormGroup>    \n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"estado\">Estado</Label>\n                      <Switch                         \n                        className=\"mt-3\"                         \n                        onChange={ (e) =>{ changeSwitch(e,'estado')}}  \n                        checked={item.estado} />\n                    </FormGroup>   \n                  </Col> \n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"einCatalogo\">Catálogo</Label>\n                      <Switch                         \n                        className=\"mt-3\"                         \n                        onChange={ (e) =>{ changeSwitch(e,'inCatalogo')}}  \n                        checked={item.inCatalogo} />\n                    </FormGroup>   \n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"einOferta\">Oferta</Label>\n                      <Switch\n                        className=\"mt-3\"                         \n                        onChange={ (e) =>{ changeSwitch(e,'inOferta')}}  \n                        checked={item.inOferta} />\n                    </FormGroup>   \n                  </Col>                \n                </Row>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}                                        \n                          required\n                        />    \n                    </FormGroup>    \n                  </Col>                  \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"enombreCorto\">Nombre Corto</Label>\n                      <Input type=\"text\" name=\"nombreCorto\" id=\"enombreCorto\"  value={item.nombreCorto || ''} \n                          onChange={ (e) => changeHandler(e)}  \n                          maxLength={20}            \n                          />\n                    </FormGroup>   \n                  </Col>\n                  <Col md={3  }>\n                  <FormGroup>\n                      <Label for=\"precioVenta\">Precio Venta</Label>\n                      <Input type=\"number\" name=\"precioVenta\" id=\"precioVenta\"  value={item.precioVenta || ''} \n                          onChange={ (e) => changeHandler(e)}  \n                          onInvalid={(e) => e.target.setCustomValidity('El campo precio venta es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          maxLength={25}                          \n                          required\n                          />\n                    </FormGroup> \n                  </Col>\n                </Row> \n\n                <Row form>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"eId\">Categoría</Label>\n                      <SelectCategoria/>  \n                    </FormGroup>    \n                  </Col>                  \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"eEstado\">Marca</Label>\n                      <SelectMarca/>  \n                    </FormGroup>   \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"eModelo\">Modelo</Label>\n                      <Input type=\"text\" name=\"modelo\" id=\"modelo\" \n                          placeholder=\"modelo\"  value={item.modelo || ''}\n                          onChange={ (e) => changeHandler(e)} />  \n                    </FormGroup>   \n                  </Col>\n                  <Col md={3}>\n                  <FormGroup>\n                      <Label for=\"eTipo\">Tipo</Label>\n                      <Select\n                        defaultValue={[tiposServicio[0]]}                        \n                        name=\"tipo\"\n                        id=\"tipo\" \n                        options={tiposServicio}\n                        styles={custom} \n                        value={defaultVal(tiposServicio,item.tipo)}  \n                        onChange={ (e) => changesHandler(e,'tipo')}                         \n                      />\n                    </FormGroup>   \n                  </Col>\n                                    \n                </Row> \n                <Row form>\n                <Col md={4}>\n                    <FormGroup>\n                      <Label for=\"eMedida\">Industria</Label>\n                      <Input type=\"text\" name=\"industria\" id=\"industria\" \n                          value={item.industria || ''}\n                          onChange={ (e) => changeHandler(e)} />  \n                    </FormGroup>   \n                  </Col>\n                <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"eUnidad\">Unidad</Label>\n                      <SelectUnidad/>  \n                    </FormGroup>\n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"ePeso\">Peso</Label>\n                      <Input type=\"text\" name=\"peso\" id=\"peso\" \n                          value={item.peso || ''}\n                          onChange={ (e) => changeHandler(e)} />  \n                    </FormGroup>    \n                  </Col>                  \n                 \n                  <Col md={2}>\n                  <FormGroup>\n                      <Label for=\"eVolumen\">Volumen</Label>\n                      <Input type=\"text\" name=\"volumen\" id=\"volumen\" \n                          value={item.volumen || ''}\n                          onChange={ (e) => changeHandler(e)} />  \n                    </FormGroup>   \n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"eMedida\">Medida</Label>\n                      <Input type=\"text\" name=\"medida\" id=\"medida\" \n                          value={item.medida || ''}\n                          onChange={ (e) => changeHandler(e)} />  \n                    </FormGroup>   \n                  </Col>\n                  \n                                   \n                </Row> \n\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"edescripcion\">Descripción</Label>\n                        <Input type=\"textarea\" name=\"descripcion\" id=\"edescripcion\" \n                           value={item.descripcion || ''}\n                          onChange={ (e) => changeHandler(e)} />    \n                    </FormGroup>    \n                  </Col>                                  \n                </Row>\n\n                <Row form>\n                  <Col md={4} className=\"mb-3\">\n                    <Button \n                      type=\"submit\"\n                      className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                      <FontAwesomeIcon icon={faSave} />  {' '} {item.id ? 'Actualizar': 'Guardar'} \n                    </Button>\n                  </Col>\n                </Row>\n            </Form> \n                </Col>\n              </Row>  \n              </TabPane>\n              <TabPane tabId=\"2\">\n              <Row>\n                <Col md=\"4\">\n                <ArticuloImagen/>\n                </Col>\n                <Col md=\"4\">\n                <ArticuloImagen/>\n                </Col>\n                <Col md=\"4\">\n                <ArticuloImagen/>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"3\">              \n              <Col md=\"12\">\n                <Form onSubmit={submitUpdate}>                \n                <Row form>                                                   \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"timepoEntrega\">Tiempo de Entrega</Label>\n                        <Input type=\"number\" name=\"te\" id=\"te\" \n                          value={item.te || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          maxLength={25}\n                          required/>                          \n                    </FormGroup>  \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"timepoEntrega\">Tiempo de Entrega con Retraso</Label>\n                        <Input type=\"number\" name=\"ter\" id=\"ter\" \n                          value={item.ter || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          maxLength={25}\n                          required/>                          \n                    </FormGroup>  \n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Label for=\"consumoPromedio\">Consumo Promedio</Label>\n                        <Input type=\"number\" name=\"cp\" id=\"cp\" \n                          value={item.cp || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          maxLength={25}\n                          required/>                          \n                    </FormGroup>  \n                  </Col>   \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"eNiveles\">Nivel Movimiento</Label>\n                        <Select                                                               \n                          defaultValue={niveles[0]}\n                          name=\"nm\"    \n                          id=\"nm\"                    \n                          options={niveles}     \n                          styles={custom}                                               \n                          value={defaultVal(niveles,item.nm)}  \n                          onChange={ (e) => changesHandler(e,'nm')}                                               \n                        />\n                    </FormGroup>   \n                  </Col>\n                  <Col md={1}>\n                    <FormGroup>\n                      <Label for=\"eClasificacion\">Clasificación</Label>\n                        <Select                                                               \n                          defaultValue={clasificaciones[0]}\n                          name=\"nv\"    \n                          id=\"nv\"                    \n                          options={clasificaciones}     \n                          styles={custom}                                               \n                          value={defaultVal(clasificaciones,item.nv)}  \n                          onChange={ (e) => changesHandler(e,'nv')}                                               \n                        />\n                    </FormGroup>   \n                  </Col>        \n                </Row>  \n\n                <Row form>                \n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"stockMaximo\">Stock Máximo</Label>\n                        <Input type=\"text\" name=\"sma\" id=\"sma\" \n                          value={ (item.te * item.cp) + (item.te * item.cp)}                          \n                          onChange={ (e) => changeHandler(e)}                           \n                          maxLength={25}\n                          readOnly={true}\n                          />                          \n                    </FormGroup>  \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"minSeguridad\">Mínimo de Seguridad</Label>\n                        <Input type=\"number\" name=\"ms\" id=\"ms\" \n                          value={ (item.ter - item.te) * item.cp}                          \n                          onChange={ (e) => changeHandler(e)}                           \n                          maxLength={25}\n                          readOnly={true}\n                          />                          \n                    </FormGroup>  \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"stockMaximo\">Stock Mínimo</Label>\n                        <Input type=\"text\" name=\"smi\" id=\"smi\" \n                          value={ item.te * item.cp}                          \n                          onChange={ (e) => changeHandler(e)}                           \n                          maxLength={25}\n                          readOnly={true}\n                          />                          \n                    </FormGroup>  \n                  </Col>\n                  <Col md={3}>\n                    <FormGroup>\n                      <Label for=\"puntoReorden\">Punto de Reorden</Label>\n                        <Input type=\"text\" name=\"pr\" id=\"pr\" \n                          value={ (item.te * item.cp) + ((item.ter - item.te) * item.cp) }\n                          onChange={ (e) => changeHandler(e)}                           \n                          maxLength={25}\n                          readOnly={true}\n                          />                          \n                    </FormGroup>  \n                  </Col>\n                </Row> \n                      \n                <Row form>\n                  <Col md={3} className=\"mb-3\">\n                    <Button \n                      type=\"submit\"\n                      className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                      <FontAwesomeIcon icon={faSave} />  {' '} {item.id ? 'Actualizar': 'Guardar'} \n                    </Button>\n                  </Col>\n                </Row>\n                </Form>\n              </Col>                          \n            </TabPane>\n          </TabContent>\n          </CardBody>\n          </Card>  \n       </Col>\n      </Row>\n    </>                                            \n    );\n};\nexport default EditArticulos;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { api } from \"../../../../helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Table,Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n     <div className=\"reporte\">     \n      <div className=\"report-header\">        \n          <Row className=\"crl\">\n            <Col md={12}>\n             <h6 className=\"text-center pio\"> <b>Resumen Articulo # <b>{this.props.data.id}</b></b></h6>\n             <h5 className=\"text-center pio\"> {this.props.data.nombres}</h5>\n             <h5 className=\"text-center pio\"> CODIGO : {this.props.data.codigoBarras}</h5>             \n            </Col>            \n          </Row>\n      </div>\n      <div className=\"report-body\">        \n        <Row>\n          <Col md={7} className=\"report-card\">\n            <Table className=\"table-reporteh mt-2\">\n              <tbody>\n                  <tr><td width=\"35%\"><b>Nombre Corto :</b></td>\n                      <td >{this.props.data.nombreCorto}</td></tr>          \n                  \n                  <tr><td><b>Categoría :</b></td>\n                      <td>{this.props.data.categoria.nombre || ''}</td></tr>          \n\n                  <tr><td><b>Marca :</b></td>\n                      <td >{this.props.data.marca.nombre || ''}</td>\n                  </tr>          \n\n                  <tr><td><b>Tipo :</b></td>\n                      <td >{this.props.data.tipo}</td>\n                  </tr>          \n\n                  <tr><td><b>Origen :</b></td>\n                      <td >{this.props.data.origen}</td>\n                  </tr>\n\n                  <tr><td><b>Estado :</b></td>\n                  <td>{ this.props.data.estado ? <FontAwesomeIcon icon={ faCheckCircle } size=\"2x\" color=\"green\"/> : <FontAwesomeIcon icon={ faPlusCircle } size=\"2x\" color=\"red\"/> }</td>\n                  </tr>\n\n                  <tr><td><b>Catálogo :</b></td>\n                  <td>{ this.props.data.inCatalogo ? <FontAwesomeIcon icon={ faCheckCircle } size=\"2x\" color=\"green\"/> : <FontAwesomeIcon icon={ faPlusCircle } size=\"2x\" color=\"red\"/> }</td>              \n                  </tr>\n\n                  <tr><td><b>Oferta :</b></td>\n                  <td>{ this.props.data.inOferta ? <FontAwesomeIcon icon={ faCheckCircle } size=\"2x\" color=\"green\"/> : <FontAwesomeIcon icon={ faPlusCircle } size=\"2x\" color=\"red\"/> }</td>              \n                  </tr>          \n                  <tr><td><b>Precio Costo :</b></td>                      \n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.data.precioCosto)}</td>\n                  </tr>          \n                  <tr><td><b>Precio Venta :</b></td>                      \n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.data.precioVenta)}</td>\n                  </tr>  \n                  <tr><td><b>% Ganancia :</b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"percent\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.data.pGanancia)}</td>                                        \n                  </tr>            \n                  <tr><td colSpan=\"2\"><b>Descripción :</b></td></tr>   \n                  <tr><td colSpan=\"2\">{ this.props.data.descripcion }</td></tr> \n\n        </tbody>\n        </Table>\n          </Col>\n          <Col md={5} className=\"report-card\">\n            <Row>\n              <Col>\n              <img alt=\"articulo\" className=\"text-center imglg\" src={api + '/static/images/articulos/lg/'+this.props.data.filename }/>\n              </Col>\n            </Row>\n                   \n          </Col>\n        </Row>\n      </div>\n      <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n      </div>\n    </div>  \n    </> \n    );\n  }\n}\n\nfunction ArticuloResumen () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.articulos)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'ARTICULOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n       \n        <ComponentToPrint\n          ref={componentRef}                      \n          data={item}\n          user={usuario}\n        />                \n    </div>\n     )\n}\n\n\nexport default ArticuloResumen","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Barcode from 'react-barcode'\nimport { Col, Row, Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\n\nexport class ComponentToPrint extends React.PureComponent {\n  render() {    \n    const etiquetas = [0,1,2,3]\n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"invoice-box mt-3 mb-3\">        \n        <Row>\n         <Col className=\"text-center\">            \n              <div className=\"clasificaciones\">\n                <Row>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nv}\n                  </Col>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nm}\n                  </Col>\n                </Row>            \n                <Row>\n                  <Col md=\"6\" className=\"repDesi\">\n                  {this.props.data.nombre}\n                  </Col>\n                  <Col md=\"6\" className=\"repDesr\">\n                  <Barcode value={this.props.data.codigoBarras} width={1} height={15} fontSize={11} />\n                  </Col>\n                </Row>                            \n                <Row>\n                  <Col md=\"6\" className=\"repMax\">\n                    MAX: {this.props.data.sma}\n                  </Col>\n                  <Col md=\"6\" className=\"repMax\">\n                    MIN: {this.props.data.smi}\n                  </Col>\n                </Row>            \n              </div>\n              <div className=\"clasificaciones\">\n                <Row>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nv}\n                  </Col>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nm}\n                  </Col>\n                </Row>            \n                <Row>\n                  <Col md=\"6\" className=\"repDesi\">\n                  {this.props.data.nombre}\n                  </Col>\n                  <Col md=\"6\" className=\"repDesr\">\n                  <Barcode value={this.props.data.codigoBarras} width={1} height={15} fontSize={11} />\n                  </Col>\n                </Row>                            \n                <Row>\n                  <Col md=\"6\" className=\"repMax\">\n                    MAX: {this.props.data.sma}\n                  </Col>\n                  <Col md=\"6\" className=\"repMax\">\n                    MIN: {this.props.data.smi}\n                  </Col>\n                </Row>            \n              </div>\n            \n         </Col> \n        </Row>  \n\n        <Row>\n         <Col className=\"text-center\">\n            {etiquetas.map((tem,index) =>                \n              <div key={index} className=\"barras\">\n                <div className=\"etiquetabr\">\n                <Barcode value={this.props.data.codigoBarras} width={1} height={20} fontSize={11} />\n                </div>\n                <div className=\"etiquetabr\">\n                <Barcode value={this.props.data.codigoBarras} width={1} height={20} fontSize={11} />\n                </div>\n                <div className=\"etiquetabr\">\n                <Barcode value={this.props.data.codigoBarras} width={1} height={20} fontSize={11} />\n                </div>                            \n              </div>\n            )}\n         </Col> \n        </Row>              \n    </div>\n    </div>  \n    </> \n    );\n  }\n}\n\n\nfunction ArticuloEtiquetas () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.articulos)\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'ARTICULOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />        \n        <ComponentToPrint\n          ref={componentRef}                      \n          data={item}\n        />                \n    </div>\n     )\n}\n\n\nexport default ArticuloEtiquetas","import React, { useRef, useEffect }  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Col,Row,Button } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport QRCode from \"qrcode.react\";\n\nexport class ComponentToPrint extends React.PureComponent {\n  render() {    \n    const etiquetas = [0,1,2,3]\n    return (\n      <>\n    <div className=\"reporte\">     \n      <div className=\"invoice-box mt-3 mb-3\">        \n        <Row>\n         <Col className=\"text-center\">            \n              <div className=\"clasificaciones\">\n                <Row>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nv}\n                  </Col>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nm}\n                  </Col>\n                </Row>            \n                <Row>\n                  <Col md=\"6\" className=\"repDesi\">\n                  {this.props.data.nombre}\n                  </Col>\n                  <Col md=\"6\" className=\"repDesr\">\n                  <QRCode value={this.props.data.codigoBarras} style={{  width: 50, height: 50,padding:2, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                  </Col>\n                </Row>                            \n                <Row>\n                  <Col md=\"6\" className=\"repMax\">\n                    MAX: {this.props.data.sma}\n                  </Col>\n                  <Col md=\"6\" className=\"repMax\">\n                    MIN: {this.props.data.smi}\n                  </Col>\n                </Row>            \n              </div>\n              <div className=\"clasificaciones\">\n                <Row>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nv}\n                  </Col>\n                  <Col md=\"6\" className=\"repIok\">\n                  {this.props.data.nm}\n                  </Col>\n                </Row>            \n                <Row>\n                  <Col md=\"6\" className=\"repDesi\">\n                  {this.props.data.nombre}\n                  </Col>\n                  <Col md=\"6\" className=\"repDesr\">\n                  <QRCode value={this.props.data.codigoBarras} style={{  width: 50, height: 50,padding:2, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                  </Col>\n                </Row>                            \n                <Row>\n                  <Col md=\"6\" className=\"repMax\">\n                    MAX: {this.props.data.sma}\n                  </Col>\n                  <Col md=\"6\" className=\"repMax\">\n                    MIN: {this.props.data.smi}\n                  </Col>\n                </Row>            \n              </div>\n            \n         </Col> \n        </Row>  \n\n        <Row className=\"mt-5\">\n         <Col className=\"text-center\">\n            {etiquetas.map((tem,index) =>                \n              <div key={index} className=\"barrast\">\n                <div className=\"etiquetaqr\">\n                <QRCode value={this.props.data.codigoBarras} style={{ width: 85, height: 85, padding:5, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                </div>\n                <div className=\"etiquetaqr\">\n                <QRCode value={this.props.data.codigoBarras} style={{ width: 85, height: 85,padding:5, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                </div>\n                <div className=\"etiquetaqr\">\n                <QRCode value={this.props.data.codigoBarras} style={{ width: 85, height: 85,padding:5, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                </div>  \n                <div className=\"etiquetaqr\">\n                <QRCode value={this.props.data.codigoBarras} style={{ width: 85, height: 85,padding:5, border: 'solid 1px #c1c1c1', marginRight: 5 }}/>\n                </div>                           \n              </div>\n            )}\n         </Col> \n        </Row>              \n    </div>\n    </div>   \n    </> \n    );\n  }\n}\n\n\nfunction ArticuloQr () {    \nconst dispatch = useDispatch()\nconst { item } = useSelector(state => state.articulos)\nconst componentRef = useRef();   \n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'ARTICULOS_RESET_ITEM'}) \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />        \n        <ComponentToPrint\n          ref={componentRef}                      \n          data={item}\n        />                \n    </div>\n     )\n}\n\n\nexport default ArticuloQr","import React,{useState, useCallback, useEffect} from \"react\";\nimport TableArticulos from \"./components/TableArticulos\";\nimport SearchArticulos from \"./components/SearchArticulo\";\nimport EditArticulos from \"./components/EditArticulo\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport { Modal, ModalBody, Button  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ArticuloResumen from \"./components/ArticuloResumen\";\nimport ArticuloEtiquetas from \"./components/ArticuloEtiquetas\";\nimport ArticuloQr from \"./components/ArticuloQr\";\n\nconst ArticulosView = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n  const { modalView, modalViews,modalViewq } = useSelector(state => state.articulos)  \n  \n  const toggleModalView = () => {    \n    let est = modalView === true ? false : true;             \n    dispatch({type:'ARTICULOS_VIEW',view:est})                \n  };\n\n  const toggleModalViews = () => {    \n    let est = modalViews === true ? false : true;             \n    dispatch({type:'ARTICULOS_BARRAS',view:est})                \n  };\n\n  const toggleModalViewq = () => {    \n    let est = modalViewq === true ? false : true;             \n    dispatch({type:'ARTICULOS_QR',view:est})                \n  };\n\n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchArticulos getComponent={getComponent}/><TableArticulos getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'ARTICULOS_RESET_ITEM'}) \n          setComponent(<EditArticulos getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('ARTICULOS_ITEM','articulos',key)) \n          setComponent(<EditArticulos getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n    return () => {\n      console.log('descarga articulos')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">          \n        {component}  \n        <Modal isOpen={modalView} toggle={toggleModalView}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalView()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ArticuloResumen/>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={modalViews} toggle={toggleModalViews}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViews()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ArticuloEtiquetas/>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={modalViewq} toggle={toggleModalViewq}>\n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewq()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n            <ArticuloQr/>\n          </ModalBody>\n        </Modal>\n\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default ArticulosView;\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subMenu = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/inventarios/${item.link}/`}\n        className={item.name === prop ? \"nav-link active\" : \"nav-link\"}> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subMenu;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { Table, Button, Col, Row  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {    \n  const fechaHoy = new Date(); \n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  return (\n    <>\n     <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE EXISTENCIAS</b></h6>              \n              <h5 className=\"text-center pio\"> Almacen: {this.props.lalmacen}</h5>   \n              <h5 className=\"text-center pio\"> Categorias: {this.props.lcategoria}</h5>   \n              <h5 className=\"text-center pio\"> Artículo: {this.props.larticulo}</h5>\n              <h5 className=\"text-center pio\"> Rango : {this.props.prango}  a  {'  '}\n              {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.pvrango || '0')}\n              </h5>\n              <h5 className=\"text-center pio\"> Stock: {this.props.pstock === '2' ? \"Sin Stock\" : this.props.pstock === '3' ? 'Todos' : 'Con Stock' }</h5>\n              \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">                \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                  <th width=\"10%\" className=\"text-dark\">Almacen</th>                  \n                  <th width=\"30%\" className=\"text-dark\">Artículo</th>\n                  <th width=\"10%\" className=\"text-dark\">Categoría</th>\n                  <th width=\"10%\" className=\"text-dark\">Marca</th>\n                  <th width=\"15%\" className=\"text-dark\">$Venta</th>\n                  <th width=\"10%\" className=\"text-dark\">Stock</th>\n                  <th width=\"15%\" className=\"text-dark\">Σ</th>                                             \n              </tr>\n          </thead>\n\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.almacen || ''}</td>                    \n                    <td>{item.nombre || ''}</td>\n                    <td>{item.categoria || ''}</td>\n                    <td>{item.marca || ''}</td>                                        \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.precioVenta)}</td>\n                    <td>{item.stock}</td>                                                                                                             \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.stock * item.precioVenta)}</td>                                    \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n         \n        </Table>\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n    </> \n    );\n  }}\n\n\nfunction Existencias ({rango,vrango,stock}) {    \n  const componentRef = useRef();   \n  const { total, existencias, suma, labelCategoria, labelAlmacen, labelArticulo } = useSelector(state => state.informes)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n\n  \n  useEffect(() =>{      \n    return () =>{                   \n      dispatch({type:'INFORMES_RESET'}) \n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}          \n            user={user}            \n            pdata={existencias}\n            lalmacen={labelAlmacen}\n            lcategoria={labelCategoria}\n            larticulo={labelArticulo}\n            ptotal={total}            \n            psuma={suma}\n            prango={rango}\n            pvrango={vrango}\n            pstock={stock}\n\n        />\n    </div>\n     )\n}\n\n\nexport default Existencias","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  \n    Row,\n    Col,\n    FormGroup, Input, Card,CardBody,ListGroup, ListGroupItem\n  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\n\nconst ItemArticulo = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)      \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');    \n\n    \n    const changeHandler = event => {    \n      const { value } = event.target  \n      const name = value.toLowerCase().trim();\n      if (!value) {      \n        clearInput();        \n        dispatch({type:'INFORME_SET_ARTICULO_ID',articuloId:0})\n        return;\n      }\n  \n      setName(value)\n      setOpen(true)\n  \n      if (name) {\n        search(name);\n      }       \n    } \n    const search = (searchTerm) =>{      \n      let iok ={}\n      iok.prop = 'nombre'\n      iok.value = searchTerm            \n      dispatch(crudActions.GET_SEARCH('ARTICULOS_DATA','articulos',iok))  \n    }  \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)      \n    } \n\n\n    const handleAsignar = (articulo) =>{        \n      dispatch({type:'INFORME_SET_ARTICULO_ID',articuloId:articulo.id,labelArticulo:articulo.nombre})   \n      /*setArticulo(articulo)  */\n      setName(articulo.nombre)    \n      setOpen(false)\n    }\n\n \n    return (              \n        <div className=\"lnsearch\">\n                         \n                    <Row form>                      \n                      <Col md={12}>\n                        <FormGroup>                           \n                          <Input \n                            type=\"text\" \n                            name=\"name\"                             \n                            id=\"name\"  \n                            value={name || ''}  \n                            onChange={changeHandler} />\n                        </FormGroup>\n                      </Col>                     \n                    </Row>                  \n              \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.nombre}  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n        </div>                    \n                         \n    );\n};\nexport default ItemArticulo;\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { customi } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\n\nconst SelectAlmacen = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.almacenes)    \n\n    const makeHttpRequestWithPage = useCallback(() =>{\n        /*dispatch(crudActions.getLista('ALMACENES_LISTA','almacenes'))        */\n        dispatch(crudActions.GET_LIST('ALMACENES_LISTA','almacenes','nombre','asc'))   \n      },[])\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0       \n        let lb = event ? event.label: '--Todas--'                 \n        dispatch({type:'INFORME_SET_ALMACEN_ID',almacenId:io,labelAlmacen: lb})\n    }     \n    \n    useEffect(() => {\n        makeHttpRequestWithPage()\n        return () => {\n            \n        };\n    }, []);\n\n\n    return (              \n              \n        <Select\n            defaultValue={data[0]}\n            name=\"almaceneId\"    \n            id=\"almaceneId\"                    \n            options={data}      \n            isClearable={true} \n            onChange={ (e) => changeHandler(e) }                                  \n            styles={customi} \n        />    \n                                                 \n    );\n};\nexport default SelectAlmacen;\n\n","import React,{useEffect, useCallback} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { customi } from '../../../../helpers/customStyles'\nimport Select from \"react-select\";\n\nconst SelectCategorias = () => {\n    const dispatch = useDispatch()    \n    const { data } = useSelector(state => state.categorias)\n    const { item } = useSelector(state => state.articulos)\n\n    const makeHttpRequestWithPage = useCallback(() =>{\n        dispatch(crudActions.GET_LIST('CATEGORIAS_LISTA','categorias','nombre','asc'))          \n      },[])\n    \n    const changeHandler = event => {    \n        let io = event ? event.value: 0    \n        let lb = event ? event.label: '--Todas--'    \n        /*dispatch(crudActions.SET_CHANGE('ARTICULOS_CHANGE','categoriaId',io)) */\n        dispatch({type:'INFORME_SET_CATEGORIA_ID',categoriaId:io, labelCategoria: lb})        \n    }     \n    \n    useEffect(() => {\n        makeHttpRequestWithPage()\n        return () => {\n            /*dispatch({type:'CATEGORIAS_RESET_DATA'})*/\n        };\n    }, []);\n\n\n    return (              \n        <>\n        <Select\n            defaultValue={data[0]}\n            name=\"categoriaId\"    \n            id=\"categoriaId\"                    \n            options={data}      \n            isClearable={true} \n            onChange={ (e) => changeHandler(e) }                         \n            styles={customi} \n        />    \n        </>                                             \n    );\n};\nexport default SelectCategorias;\n","import React,{useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody, Input  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subInventario.jsx';\nimport { InformeInventariosRouter } from '../../../routes'\nimport Existencias  from './Existencias';\nimport ItemArticulo from '../Articulos/components/ItemArticulo'\nimport SelectAlmacen from \"../Almacenes/components/SelectAlmacen\";\nimport SelectCategorias from \"../Categorias/components/SelectCategorias\"\nimport Select from 'react-select'\nimport { customi} from '../../../helpers/customStyles'\n\nconst stocks =  [{\"value\":\"2\",\"label\":\"--Todas--\"},{\"value\":\"1\",\"label\":\"Con Stock\"},{\"value\":\"0\",\"label\":\"Sin Stock\"}];\nconst rangos =  [{\"value\":\"mayor\",\"label\":\"Mayor/Igual a\"},{\"value\":\"menor\",\"label\":\"Menor/Igual a\"}];\n\n  const defaultVal = (options, valor) =>{\n            return options.filter(item =>\n                   item.value === valor\n                )}\n                \nconst ExistenciasView = () => {\n  const dispatch = useDispatch() \n  const { articuloId, almacenId, categoriaId  } = useSelector(state => state.informes)   \n  const [stock, setstock] = useState('3');  \n  const [rango, setRango] = useState(\"mayor\");\n  const [vrango, setVrango] = useState(0);\n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {            \n      almacenId   : almacenId,\n      articuloId  : articuloId, \n      categoriaId : categoriaId,\n      value       : parseInt(stock),\n      rango       : rango,\n      vrango      : vrango\n    }\n    dispatch(crudActions.GET_INFORMES('INFORMES_EXISTENCIAS','existencias',item))      \n    \n  }  \n\n\n  \n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n      <SubMenu items={InformeInventariosRouter} prop='Existencias'/>  \n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col>INFORME DE EXISTENCIAS</Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label>Almacen: </Label>              \n                    <SelectAlmacen/>\n                  </FormGroup> \n                  </Col>                              \n                </Row>\n                <Row form>                             \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label>Categoría: </Label>              \n                    <SelectCategorias/>\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\"> \n                    <FormGroup>   \n                      <Label for=\"eHasta\">Artículo : </Label>                 \n                      <ItemArticulo/>\n                    </FormGroup>\n                  </Col> \n                </Row>  \n                <Row>\n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eHasta\">Stock: </Label>                 \n                      <Select         \n                          defaultValue={stock[0]}\n                          name=\"stock\"    \n                          id=\"stock\"                    \n                          options={stocks}                                                    \n                          value={defaultVal(stocks,stock)} \n                          onChange={ (e)=> { setstock(e.value)}} \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                 \n                </Row>\n\n                <Row form>                  \n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eRango\">Rango de Monto: </Label>                 \n                    <Select         \n                          defaultValue={rango[0]}\n                          name=\"rango\"    \n                          id=\"rango\"                    \n                          options={rangos}                                                    \n                          value={defaultVal(rangos,rango)} \n                          onChange={ (e)=> { setRango(e.value)}} \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                                                                     \n                </Row>\n                <Row form>                                    \n                  <Col md=\"12\"> \n                  <FormGroup>\n                  <Label for=\"eRango\">Monto: </Label> \n                    <Input \n                      type=\"number\" \n                      name=\"vrango\" \n                      id=\"vrango\" \n                      value={vrango}                          \n                      onChange={ (e) => setVrango(e.target.value)} />\n                  </FormGroup>    \n                  </Col>                                                                                                                     \n                </Row>\n              \n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card> \n        </Col>    \n        <Col md=\"9\">\n          <Existencias\n            rango={rango}\n            vrango={vrango}\n            stock={stock}\n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>   \n    </>\n  )\n\n};\nexport default ExistenciasView;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE MOVIMIENTOS  </b></h6>              \n              <h5 className=\"text-center pio\"> Tipo : {this.props.ptipo}</h5>\n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>                                      \n              <h5 className=\"text-center pio\"> Nro. Movimientos: { this.props.ptotal}</h5>                                      \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body\">  \n        <Row >\n          <Col md={12}>         \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"10%\" className=\"text-dark\">Fecha</th>\n                <th width=\"30%\" className=\"text-dark\">Motivo</th>                                    \n                <th width=\"10%\" className=\"text-dark\">Origen</th>\n                <th width=\"10%\" className=\"text-dark\">Destino</th>                                                                                                               \n                <th width=\"10%\" className=\"text-dark\">Nro. Items</th>                                 \n                <th width=\"15%\" className=\"text-dark\">Total</th>\n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.id}</td> \n                    <td><Moment format=\"DD-MM-YYYY\">{item.fecha}</Moment></td>                                                       \n                    <td>{item.observaciones || ''}</td>                                                                              \n                    <td>{item.origen}</td>\n                    <td>{item.destino}</td>\n                    <td>{item.nroItems}</td>                    \n                    <td>                    \n                    {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}\n                    </td> \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n            </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Movimientos ({tipo, value1, value2}) {    \n  const componentRef = useRef();   \n  const { cantidadTotal,  movimientos } = useSelector(state => state.informes)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{                   \n      dispatch({type:'INFORMES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}          \n            ptipo={tipo}\n            puser={user}            \n            pdata={movimientos}                        \n            ptotal={cantidadTotal}            \n            pvalue1={value1}\n            pvalue2={value2}            \n        />\n    </div>\n     )\n}\n\n\nexport default Movimientos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subInventario.jsx';\nimport { InformeInventariosRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport Select from 'react-select'\nimport { useDispatch } from 'react-redux'\nimport Movimientos  from './Movimientos';\nimport { customi } from '../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst tipos   =  [{\"value\":\"0\",\"label\":\"--Todos--\"},{\"value\":\"Ingreso\",\"label\":\"Ingreso\"},{\"value\":\"Salida\",\"label\":\"Salida\"}];\n              const defaultVal = (options, valor) =>{\n                return options.filter(item =>\n                    item.value === valor\n                  )\n              \n              }\nconst MovimientosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());\n  const [tipo, setTipo] = useState(\"0\"); \n  \n  \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2  \n    item.tipo = tipo        \n    dispatch(crudActions.GET_INFORMES('INFORMES_MOVIMIENTOS','movimientos',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n       <SubMenu items={InformeInventariosRouter} prop='Movimientos'/> \n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col>FILTRO DE BUSQUEDA</Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n\n                <Row form>\n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eHasta\">Tipo : </Label>                 \n                    <Select                                                               \n                          defaultValue={tipos[0]}\n                          name=\"tipo\"    \n                          id=\"tipo\"                    \n                          options={tipos}                                                    \n                          value={defaultVal(tipos,tipo)} \n                          onChange={ (e)=> { setTipo(e.value)}}      \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>  \n                </Row>              \n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Movimientos\n            tipo={tipo}\n            value1={value1}\n            value2={value2}                        \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default MovimientosView;\n","import React,{useState} from \"react\";\nimport { Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTags, faTimes, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst SearchCategoria = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total }= useSelector(state => state.categorias)\n    const [prop, setProp] = useState('nombre');\n    const [value, setValue] = useState();\n\n    \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('CATEGORIAS_DATA','categorias',iok))      \n     }   \n\n    return (              \n      \n      <Card>          \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faTags} />  \n          </div>        \n        </Col>        \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } CATEGORIAS</p>          \n        </Col>   \n      </Row>\n      </Card>                     \n               \n    );\n};\nexport default SearchCategoria;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\nconst TableCategorias = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.categorias)\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('CATEGORIAS_DATA','categorias',page, num,'nombre','asc'))      \n   }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('CATEGORIAS_DATA','categorias',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('CATEGORIAS_ITEM','categorias',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'CATEGORIAS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n\n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>\n            <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Código</th>\n                  <th width=\"55%\">Nombre</th>\n                  <th width=\"20%\">Abreviación</th>                             \n                  <th width=\"15%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item,index) => (\n                      <tr key={index}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>\n                        <td>{item.abreviacion}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\" \n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\" \n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>  \n                        </ButtonGroup>                                          \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row> \n</>      \n  )\n\n};\nexport default TableCategorias;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\n\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst EditCategoria = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.categorias.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('CATEGORIAS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()    \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('CATEGORIAS_DATA','categorias',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('CATEGORIAS_DATA','categorias',item,'lista'))           \n        }                \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'CATEGORIAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                        />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombreCorto\">Abreviación</Label>\n                      <Input type=\"text\" name=\"abreviacion\" id=\"abreviacion\"  \n                        value={item.abreviacion || ''}                         \n                        onChange={ (e) => changeHandler(e)}  \n                        onInvalid={(e) => e.target.setCustomValidity('El campo abreviación es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                      />\n                    </FormGroup>   \n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={5}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-primary mt-2\" : \"btn-md btn-primary mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                         \n    );\n};\nexport default EditCategoria;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport SubMenu from '../../../components/subInventario.jsx';\nimport { InventarioRouter } from '../../../routes'\nimport SearchCategoria from './components/SearchCategoria'\nimport TableCategorias from \"./components/TableCategorias\";\nimport EditCategoria from \"./components/EditCategoria\"\n\nconst CategoriasView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InventarioRouter} prop='Categorias'/>\n         <Row>\n            <Col md={12}>\n            <SearchCategoria/>\n            </Col>            \n         </Row>\n      \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditCategoria/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableCategorias/>\n            </Col>            \n         </Row>\n \n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default CategoriasView;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faTags, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchMarca = () => {\n    const dispatch = useDispatch()    \n    const { total }= useSelector(state => state.marcas)\n    const [prop, setProp] = useState('nombre');\n    const [value, setValue] = useState();\n        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('MARCAS_DATA','marcas',iok))      \n     }   \n    return (                                        \n      <Card>          \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faTags} />  \n          </div>        \n        </Col>        \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } MARCAS</p>          \n        </Col>   \n      </Row>\n      </Card>               \n    );\n};\nexport default SearchMarca;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n  \n\n\nconst TableMarcas = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.marcas)\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('MARCAS_DATA','marcas',page, num,'nombre','asc'))          \n    }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('MARCAS_ADD','marcas',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('MARCAS_ITEM','marcas',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'MARCAS_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Código</th>\n                  <th width=\"55%\">Nombre</th>\n                  <th width=\"20%\">Abreviación</th>                             \n                  <th width=\"15%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>\n                        <td>{item.abreviacion}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableMarcas;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditMarca = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.marcas.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('MARCAS_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('MARCAS_ADD','marcas',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('MARCAS_ADD','marcas',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'MARCAS_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombreCorto\">Abreviación</Label>\n                      <Input type=\"text\" name=\"abreviacion\" id=\"abreviacion\"  \n                        value={item.abreviacion || ''}                         \n                        onChange={ (e) => changeHandler(e)}  \n                        onInvalid={(e) => e.target.setCustomValidity('El campo abreviación es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                        />\n                    </FormGroup>   \n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={5}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditMarca;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport SubMenu from '../../../components/subInventario.jsx';\nimport { InventarioRouter } from '../../../routes'\nimport SearchMarca from './components/SearchMarca'\nimport TableMarcas from \"./components/TableMarcas\";\nimport EditMarca from \"./components/EditMarca\"\n\nconst MarcasView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InventarioRouter} prop='Marcas'/>      \n         <Row>\n            <Col md={12}>\n            <SearchMarca/>\n            </Col>            \n         </Row>\n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditMarca/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableMarcas/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default MarcasView;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Card, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faTags, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchUnidad = () => {\n    const dispatch = useDispatch()    \n    const { total }= useSelector(state => state.unidades)\n    const [prop, setProp] = useState('nombre');\n    const [value, setValue] = useState();\n        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      dispatch(crudActions.GET_SEARCH('UNIDADES_DATA','unidades',iok))      \n     }   \n    return (                                        \n      <Card>          \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faTags} />  \n          </div>        \n        </Col>        \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } UNIDAD</p>          \n        </Col>   \n      </Row>\n      </Card>               \n    );\n};\nexport default SearchUnidad;\n","import React,{useState, useEffect, useCallback} from \"react\";\nimport { ButtonGroup, FormGroup, Label, Table, Row, Col, Button, Card, CardBody, CardFooter  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Pagination from '../../../../components/Pagination'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport Select from 'react-select' \nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n  \n\n\nconst TableUnidades = () => {\n   const dispatch = useDispatch() \n   const [pag, setpag] = useState(15);\n   const {data,pagina,paginas}= useSelector(state => state.unidades)\n\n   const makeHttpRequestWithPage = (page, num) =>{\n    dispatch(crudActions.GET_DATA('UNIDADES_DATA','unidades',page, num,'nombre','asc'))          \n    }\n\n  const deleteItem = (pky) => {                \n    dispatch(crudActions.GET_DELETE('UNIDADES_ADD','unidades',pky,'lista'))\n  };\n  const getItem = (pky) => {                \n    dispatch(crudActions.GET_ITEM('UNIDADES_ITEM','unidades',pky))\n  };\n\n  useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n      return () => {\n        dispatch({type:'UNIDADES_RESET_DATA'})   \n      };\n  }, []);\n\n  const changeSelect = (pky) => {        \n    const {value, label} = pky\n    setpag(value)\n    makeHttpRequestWithPage(1,value)\n  };\n  \n  return(\n    <>    \n    <Row>\n      <Col>\n        <Card>\n          <CardBody>    \n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                  <th width=\"10%\">Código</th>\n                  <th width=\"55%\">Nombre</th>\n                  <th width=\"20%\">Abreviación</th>                             \n                  <th width=\"15%\"></th>                \n              </tr>\n          </thead>\n          {data && (\n              <tbody>\n                  {data.map((item) => (\n                      <tr key={item.id}>                      \n                        <td>{item.id}</td>\n                        <td>{item.nombre}</td>\n                        <td>{item.abreviacion}</td>\n                        <td>\n                        <ButtonGroup>\n                          <Button className=\"btn-tb bg-default text-white\"\n                            onClick={() => { getItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Button>\n                          <Button className=\"btn-tb bg-defaults text-white\"\n                            onClick={() => { deleteItem(item.id)}}                           >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>   \n                        </ButtonGroup>                                         \n                        </td>\n                      </tr>  \n                      ))}\n              </tbody>\n          )}\n        </Table>\n        </CardBody>    \n        <CardFooter>\n        <Row>                                            \n              <Col md={6} >\n                  <Pagination\n                    makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                    paginas={paginas}\n                    current= {pagina} \n                    pagina= {pag}\n                  />\n              </Col>          \n              <Col md={4}>                  \n              </Col>\n              <Col md={2}>   \n                <FormGroup row>\n                  <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                  <Col sm={7}>\n                      <Select                 \n                        styles={customStyles}                                              \n                        defaultValue={pages[0]}\n                        name=\"pag\"    \n                        id=\"pag\"                    \n                        options={pages}      \n                        isClearable={false}                          \n                        value={defaultVal(pages,pag)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n                  </Col>\n                  </FormGroup>\n              </Col>    \n          </Row>\n          </CardFooter> \n        </Card>  \n      </Col>\n    </Row>       \n</>      \n  )\n\n};\nexport default TableUnidades;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Form, FormGroup, Input, Label,Card, CardBody, Button  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditUnidad = () => {\n    const dispatch = useDispatch()  \n    const item = useSelector(state => state.unidades.item)   \n\n    const changeHandler = event => {    \n        const { name, value } = event.target  \n        dispatch(crudActions.SET_CHANGE('UNIDADES_CHANGE',name,value))  \n    }\n      \n    const submitHandle = event => {       \n        event.preventDefault()        \n        if(item.id)\n        {\n          dispatch(crudActions.SET_UPDATE('UNIDADES_ADD','unidades',item,'lista'))            \n        }else{\n          dispatch(crudActions.SET_ADD('UNIDADES_ADD','unidades',item,'lista'))           \n        }   \n       \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'UNIDADES_RESET_ITEM'})        \n      };\n    }, []); \n     \n    return (              \n      <Row>\n      <Col>\n        <Card>        \n            <CardBody>\n            <h5>Formulario de Registro</h5>\n            <Form onSubmit={ submitHandle}>\n                <Row form>\n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"enombre\" \n                          value={item.nombre || ''}                          \n                          onChange={ (e) => changeHandler(e)} \n                          onInvalid={(e) => e.target.setCustomValidity('El campo nombre es obligatorio !')}\n                          onInput={(e) => e.target.setCustomValidity('')}\n                          required\n                          />    \n                    </FormGroup>    \n                  </Col>                                    \n                </Row>\n                <Row form>                  \n                  <Col md={11}>\n                    <FormGroup>\n                      <Label for=\"enombreCorto\">Abreviación</Label>\n                      <Input type=\"text\" name=\"abreviacion\" id=\"abreviacion\"  \n                        value={item.abreviacion || ''}                         \n                        onChange={ (e) => changeHandler(e)}  \n                        onInvalid={(e) => e.target.setCustomValidity('El campo abreviación es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required\n                        />\n                    </FormGroup>   \n                  </Col>\n                </Row> \n                \n                <Row form>                  \n                  <Col md={5}>\n                    <Button \n                    type=\"submit\"\n                    className={item.id ?\"btn-md btn-warning mt-2\" : \"btn-md btn-info mt-2\"}>\n                    <FontAwesomeIcon icon={faSave} />  \n                    {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n                    </Button> \n                  </Col>\n                </Row>                 \n            </Form> \n            </CardBody>                      \n          </Card> \n      </Col>    \n    </Row>                                             \n    );\n};\nexport default EditUnidad;\n","import React from \"react\";\nimport { Row, Col  } from \"reactstrap\";\nimport SubMenu from '../../../components/subInventario.jsx';\nimport { InventarioRouter } from '../../../routes'\nimport SearchUnidad from './components/SearchUnidad'\nimport TableUnidades from \"./components/TableUnidades\";\nimport EditUnidad from \"./components/EditUnidad\"\n\nconst UnidadsView = () => {      \n\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InventarioRouter} prop='Unidades'/>      \n         <Row>\n            <Col md={12}>\n            <SearchUnidad/>\n            </Col>            \n         </Row>\n         <div className=\"card-contenidos\"> \n         <Row>\n            <Col md={3} className=\"marco\">\n            <EditUnidad/>\n            </Col>\n            <Col md={9} className=\"marco\">\n            <TableUnidades/>\n            </Col>            \n         </Row>\n         </div>\n      </div>\n    </div>    \n    </>\n  )\n\n};\nexport default UnidadsView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope, faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Inventarios from \"../../pages/INVENTARIOS/InicioView\"\nimport Articulos from \"../../pages/INVENTARIOS/Articulos/ArticulosView\"\nimport Informes from \"../../pages/INVENTARIOS/Informes/ExistenciasView\"\nimport IMovimientos from \"../../pages/INVENTARIOS/Informes/MovimientosView\"\nimport Utils from \"../../pages/INVENTARIOS/Categorias/CategoriasView\"\nimport Marcas from \"../../pages/INVENTARIOS/Marcas/MarcasView\"\nimport Unidades from \"../../pages/INVENTARIOS/Unidades/UnidadesView\"\nimport Moment from \"react-moment\";\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst fechaHoy = new Date()\nfunction Inventario(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems'))    \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa')) \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{\n          if(prop.icon === \"inventarios\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n          }  \n          return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {                    \n          case \"Articulos\":\n            return Articulos;\n          case \"Utils\":\n            return Utils;\n          case \"Informes\":\n            return Informes;      \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/inventarios'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))  \n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">   \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>    \n            </div>  \n            <div className=\"center-unity\">\n            <h6>INVENTARIOS</h6>  \n            </div> \n            <div className=\"conta-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div> \n            <div className=\"right-unity\">\n            <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>          \n        <Nav> \n            <NavItem>       \n              <NavLink to=\"/inventarios/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                <p className=\"text-white\">  Dashboard  </p>\n              </NavLink>          \n            </NavItem>\n   \n            {itemr.map((prop, key) => (  \n              <NavItem key={key}>  \n                <NavLink                \n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\">               \n                  <p> {prop.name}</p>                    \n                </NavLink>\n              </NavItem>))\n            }\n     \n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}   \n          <Route path=\"/inventarios/inicio\" component={Inventarios} />      \n          <Route path=\"/inventarios/imovimientos\" component={IMovimientos} />\n          <Route path=\"/inventarios/marcas\" component={Marcas} />\n          <Route path=\"/inventarios/unidades\" component={Unidades} />\n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default Inventario;\n\n","import React,{useEffect} from \"react\";\nimport { Row,Col, Card, CardHeader, CardTitle } from \"reactstrap\"\nimport { useSelector, useDispatch } from 'react-redux'  \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandHoldingUsd, faDollarSign, faReceipt, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../actions'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nconst InicioView = () => {\n  const dispatch = useDispatch()   \n  const {ventaT, ventasItem, ventasLabel, resVentas,cobrosPendientes, cobrosRealizados, cpendientes,crealizados } = useSelector(state => state.informes)\n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  let d = new Date()\n  let gestion = d.getFullYear()\n  \n  const makeHttpRequestWithPage = () =>{\n    let iok={\n      \"usuarioId\":usuario.id,\n      \"rolId\": usuario.rolId,\n      \"gestion\": gestion\n    }\n    dispatch(crudActions.GET_INFORMES('INFORMES_DASHBOARD_VENTAS','salecons',iok))      \n  }\n\n  useEffect(() => {\n    makeHttpRequestWithPage()\n    return () => {\n      dispatch({type:'INFORMES_RESET'}) \n    };\n  }, []);\n\n  const ventas = {\n    chart: {\n      type: 'bar'\n  },\n  title: {\n      text: 'Ventas'\n  },\n  subtitle: {\n      text: 'Gestión: '+ gestion\n  },\n  xAxis: {\n      categories: ventasLabel,\n      title: {\n          text: null\n      }\n  },\n\n \n  credits: {\n      enabled: false\n  },\n  series: [{\n      name: 'Ventas '+ gestion,\n      data: ventasItem\n    }]\n  }\n\n  const cobros = {\n    chart: {\n      type: 'column'\n  },\n  title: {\n      text: 'Cobros'\n  },\n  subtitle: {\n    text: 'Gestión: '+ gestion\n  },\n  credits: {\n    enabled: false\n  },\n  xAxis: {\n      categories: [\n          'Ene',\n          'Feb',\n          'Mar',\n          'Abr',\n          'May',\n          'Jun',\n          'Jul',\n          'Ago',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dic'\n      ],\n      crosshair: true\n  },\n  yAxis: {\n      min: 0,\n      title: {\n          text: 'Expresado en  '+ empresa.moneda\n      }\n  },\n\n  plotOptions: {\n      column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n      }\n  },\n  series: [{\n      name: 'Realizados',\n      data: cobrosRealizados\n\n  }, {\n      name: 'Pendientes',\n      data: cobrosPendientes\n\n  }]\n  }\n\n  const samples = {\n\n    chart: {\n      type: 'line'\n  },\n  title: {\n      text: 'Ventas'\n  },\n  subtitle: {\n      text: 'Gestión: '+ gestion\n  },\n  xAxis: {\n      categories: ['Ean', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dic']\n  },\n  yAxis: {\n      title: {\n          text: 'Expresado en Cantidades'\n      }\n  },\n  plotOptions: {\n      line: {\n          dataLabels: {\n              enabled: true\n          },\n          enableMouseTracking: false\n      }\n  },\n  credits: {\n    enabled: false\n  },\n  series: [{\n      name: 'Ventas',\n      data: resVentas\n  } ]\n\n  }\n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <Row className=\"mt-1\">           \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-icono\">\n              <FontAwesomeIcon icon={faShoppingCart} />\n            </div>\n              <CardTitle className=\"text-dark mt-2\"> VENTAS CANTIDAD</CardTitle>\n              <p>{ventaT.total}</p>                                   \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n              <div className=\"card-icono\"><FontAwesomeIcon icon={faReceipt} /></div>\n              <CardTitle className=\"text-dark mt-2\"> VENTAS VALOR</CardTitle>              \n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(ventaT.suma)}</p>                                 \n              </CardHeader>\n          </Card>    \n          </Col> \n\n          <Col md={3}>\n          <Card>\n          <CardHeader>\n            <div className=\"card-rojo\"><FontAwesomeIcon icon={faDollarSign} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b>{cpendientes.total || '0'}</b> - COBROS PENDIENTES</CardTitle>              \n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(cpendientes.suma)}</p>                                 \n              </CardHeader>\n          </Card>    \n          </Col> \n          <Col md={3}>\n          <Card>\n          <CardHeader>\n              <div className=\"card-verde\"><FontAwesomeIcon icon={faHandHoldingUsd} /></div>\n              <CardTitle className=\"text-dark mt-2\"> <b>{crealizados.total || '0'}</b> - COBROS REALIZADOS</CardTitle>\n              <p>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(crealizados.suma)}</p>                                                                  \n              </CardHeader>\n          </Card>    \n          </Col>\n          \n        </Row>  \n\n        <Row className=\"mt-1\">\n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={ventas}\n                />\n            </Card>    \n          </Col>  \n          <Col md={6}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={samples}\n                />\n            </Card>    \n          </Col>            \n        </Row> \n        <Row className=\"mt-1\">\n          <Col md={12}>\n            <Card>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={cobros}\n                />\n            </Card>                       \n          </Col>            \n        </Row>   \n      </div>\n    </div>    \n  )\n\n};\nexport default InicioView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\n\nconst TableVentas = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15);\n  const {data,pagina,paginas,indicador }= useSelector(state => state.ventas)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n \n  const makeHttpRequestWithPage = (page, num) =>{\n   dispatch(crudActions.GET_DATA('VENTAS_DATA','ventas',page, num,'id','desc'))     \n  }\n\n const changeSelect = (pky) => {        \n   const {value} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {\n    makeHttpRequestWithPage(1,pag)\n     return () => {\n      dispatch({type:'VENTAS_RESET_DATA'})\n     };\n }, []);\n\n const setIndicador = (pky,est,monto) => {            \n   let iok = pky === indicador  ? 0 : pky\n   dispatch({type:'VENTAS_INDICADOR',value:iok,estado:est,indicadorTotal:monto}) \n };\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>  \n\n                <th width=\"5%\"></th>\n                <th width=\"5%\">Código</th>\n                <th width=\"10%\">Origen</th>\n                <th width=\"10%\">Fecha</th>\n                <th width=\"35%\">Glosa</th>                  \n                <th width=\"10%\">Total</th>\n                <th width=\"5%\">Estado</th>\n                <th width=\"20%\">Cliente</th>                       \n                \n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index}>                      \n                      <td>                       \n                      <Input type=\"checkbox\" \n                      onChange={() => { setIndicador(item.id, item.estado, item.totalGeneral) }} \n                      checked={ item.id === indicador ? true : false}\n                      /></td>\n                      <td>{item.id}</td>\n                      <td>{item.origen}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fechaVenta}</Moment></td>                        \n                      <td>{item.observaciones}</td>\n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                      <td className=\"text-center\">\n                          { item.estado === 'cerrado' ? \n                          <FontAwesomeIcon icon={faLock} className=\"text-verde\"/>\n                          :\n                          <FontAwesomeIcon icon={faLockOpen} className=\"text-rojo\"/>\n                          }                        \n                        </td>\n                      <td>{item.cliente}</td>                                                                               \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TableVentas;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {     \n  Table,\n  Col,  \n  Row,    \n  Button } from \"reactstrap\";\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n        <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Venta # {this.props.dato.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha Venta : <Moment format=\"DD-MM-YYYY\">{this.props.dato.fechaVenta}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Hora Venta : <Moment format=\"HH:mm:ss\">{this.props.dato.createdAt}</Moment></h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">    \n          <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>  \n          <Table className=\"table-reporteh\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{this.props.dato.nroItems}</td>                                          \n                  <td><b>Tipo : </b></td>\n                  <td>{this.props.dato.tipo}</td>\n                </tr>                \n                <tr>      \n                  <td><b>Vendedor : </b></td>\n                  <td>{this.props.dato.usuario.nombres || ''}</td> \n                  <td><b>Total : </b></td>                  \n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalGeneral)}</td>                                      \n                </tr>\n                <tr>                        \n                  <td><b>Cliente : </b></td>\n                  <td>{this.props.dato.cliente.nombres || ''} </td>\n                  <td><b>Descuento : </b></td>                  \n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.descuento)}</td> \n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"3\">{ this.props.dato.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <h4>Items</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>  \n              <th width=\"15%\">Código</th>\n                <th width=\"45%\">Nombre</th>                                \n                <th width=\"10%\">Precio</th>\n                <th width=\"10%\">Cantidad</th>\n                <th width=\"20%\">Sub-Total</th>                                          \n              </tr>\n          </thead>\n          {this.props.data && (\n              <tbody>\n              {this.props.data.map((item, index) => (\n                  <tr key={item.articuloId}>                      \n                    <td>{item.codigo}</td>\n                    <td>{item.nombre}</td>                                                                                                         \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>                                                   \n                    <td className=\"text-center\">{item.cantidad}</td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>                 \n                  </tr>  \n                  ))}\n                  <tr>                                                                                                \n                    <td colSpan=\"4\" className=\"text-right\"><b>Sub-Total</b></td>\n                    <td >{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.subTotal)}</td>\n                  </tr> \n                  <tr>                            \n                    <td colSpan=\"4\" className=\"text-right\"><b>Impuesto</b></td>                                                                    \n                    <td >{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.impuesto)}</td>\n                  </tr> \n                  <tr>                      \n                    <td colSpan=\"4\" className=\"text-right\"><b>Descuento</b></td>                                                                          \n                    <td >{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.descuento)}</td>\n                  </tr> \n                  <tr>                       \n                    <td colSpan=\"4\" className=\"text-right\"><b>Total</b></td>                                                                         \n                    <td ><b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.dato.totalGeneral)}</b></td>\n                  </tr> \n\n          </tbody>\n          )}\n            </Table>\n          </Col>      \n        </Row>        \n\n        <Row>\n          <Col md=\"4\" className=\"mr-2\">\n          <h4>Nota de venta</h4>  \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Nº </b></td>\n                  <td>{this.props.xnota.id}</td>                                                            \n                </tr>  \n                <tr>      \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{this.props.xnota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Total : </b></td>                  \n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.montoTotal)}</td>                                    \n                </tr>\n                <tr>      \n                  <td><b>Pago Total : </b></td>                  \n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.pagoTotal)}</td>                                    \n                                                     \n                </tr>\n                <tr>      \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.xnota.saldoTotal)}</td>                                    \n                </tr>                \n              </tbody>             \n            </Table>  \n          </Col>\n          <Col md=\"7\">\n            <h4>Pagos</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>                  \n                <th width=\"20%\">Cuota</th>\n                <th width=\"30%\">Fecha Pago</th>\n                <th width=\"10%\">Estado</th>\n                <th width=\"30%\">Monto</th>                \n                <th width=\"10%\">Fecha Pagado</th>\n              </tr>\n          </thead>\n          {this.props.xplan && (\n              <tbody>\n                  {this.props.xplan.map((item, index) => (\n                      <tr key={item.id}>                      \n                        <td>{item.cuota}</td>\n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaPago}</Moment></td>                                                                                         \n                        <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                                        \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                                           \n                        <td><Moment format=\"DD/MM/YYYY\">{item.fechaPagado}</Moment></td> \n                      </tr>  \n                      ))}\n              </tbody>\n          )}     \n            </Table>      \n          </Col>\n        </Row>\n\n\n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.user.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha/Hora emisión: <Moment format=\"DD/MM/YYYY HH:mm:ss\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>  \n     </> \n    );\n  }\n}\n\n\nfunction VentaResumen () {    \nconst dispatch = useDispatch()\nconst { item, items, nota, plan } = useSelector(state => state.ventas)\nconst usuario = JSON.parse(localStorage.getItem('@userUnity'))\nconst componentRef = useRef();   \n\n\n useEffect(() =>{        \n     return () =>{            \n        dispatch({type:'VENTAS_RESET_RESUMEN'})         \n    };\n  }, []);\nreturn(\n    <div className=\"creporte\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            dato={item}\n            data={items}\n            xnota={nota}\n            xplan={plan}\n            user={usuario}\n        />\n    </div>\n     )\n}\n\n\nexport default VentaResumen","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, Form, Modal, Table, ModalBody, FormGroup, Input, Label, Card, CardBody  } from \"reactstrap\"\nimport { crudActions, mailActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faCheck, faReceipt, faEdit, faSearch, faPlus ,faTrash, faFilePdf, faCoins, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport VentaResumen from \"./VentaResumen\";\nimport Switch from 'react-switch'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'cliente',\"label\":'cliente'},\n             {\"value\":'fechaVenta',\"label\":'fecha'},\n            ];\n\nconst SearchVenta = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, indicadorTotal, estado}= useSelector(state => state.ventas)\n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");\n    const [view, setview] = useState(false);\n    const [viewx, setviewx] = useState(false);\n    const [viewz, setviewz] = useState(false);\n    const [viewy, setviewy] = useState(false);\n    const [cuota, setcuota] = useState(1);\n    const [plan, setplan] = useState([]);\n\n    const [contado, setContado] = useState(true);\n    const [banco, setBanco] = useState(false);\n    const [inicial, setInicial] = useState(false);\n    const [pinicial, setPinicial] = useState(0);\n    const [nombres, setnombres] = useState(\"\");\n    const [email, setemail] = useState(\"\");\n    const [observaciones, setobservaciones] = useState(\"\");\n    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n      /*setValue('')*/\n    };\n        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop\n      iok.usuarioId = usuario.id\n      iok.rolId = usuario.rolId\n      dispatch(crudActions.GET_SEARCH('VENTAS_DATA','ventas',iok))              \n   }  \n  \n    /*const createHandle = () => { \n      let eItem = {                            \n          clients:'sin cliente',                    \n          observaciones:'venta nueva - sin items',               \n          usuarioId : usuario.id,\n          nroItems : 0,\n          total : 0\n      }\n      dispatch(crudActions.SET_ADD('VENTAS_DATA','ventas',eItem,'lista'))      \n      dispatch({type:'VENTAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})                                           \n   }*/\n\n   const onBorrar = () => {            \n    dispatch(crudActions.GET_DELETE('VENTAS_DATA','ventas',indicador,'lista'))      \n    dispatch({type:'VENTAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setview(false)\n\n  };\n\n  const toggleModalView = () => {        \n    setview(!view)                  \n  };\n  const toggleModalViewx = () => {        \n    setviewx(!viewx)                   \n  };\n\n  const toggleModalViewz = () => {        \n    setviewz(!viewz)                   \n  };\n  const toggleModalViewy = () => {        \n    setviewy(!viewy)                   \n  };\n\n  const viewArticulo = () => {    \n    dispatch(crudActions.GET_ITEM('VENTAS_ITEM','ventas',indicador))\n    setviewz(!viewz)\n  }; \n\n\n\n  const aprobarVenta = () => {   \n    let dato ={\n      \"id\": indicador,\n      \"tipo\": \"venta\",      \n      \"almacenId\": 1,\n      \"estado\": \"cerrado\",      \n      \"usuarioId\" : usuario.id,\n      \"rolId\": usuario.rolId,\n      \"nroPagos\": cuota,\n      \"total\": indicadorTotal        \n    }\n    let xcode = {\n      item: dato,\n      items:plan,\n      contado:contado,\n      banco:banco,\n      inicial:inicial,\n      cuota:pinicial,\n      total:indicadorTotal\n\n    }\n    dispatch(crudActions.SET_APROBAR('VENTAS_DATA','ventas/aprobar',xcode,'lista'))     \n    dispatch({type:'VENTAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n    setviewx(false)\n  };\n\n  const calcular = () => {         \n    let newArray = []\n    let diok = false\n    let dd = new Date()\n    for (let index = 0; index < cuota; index++) {\n      if(index === 0 && inicial){\n        setPinicial(parseInt(indicadorTotal)/cuota)\n        diok = true\n      }\n      let iok = {}\n      iok.cuota     = index+1\n      iok.monto     = parseInt(indicadorTotal)/cuota\n      iok.estado    =  diok\n      iok.fechaPago = new Date()\n      iok.mes       = dd.getMonth() + 1\n      newArray.push(iok)\n      diok = false\n    }\n    \n    setplan(newArray)\n}\n\nconst onChange = (event,item) => {       \n\n  const {name, value } = event.target    \n  let xarray = [...plan]\n  for (let index = 0; index < cuota; index++) {\n    xarray[item]['fechaPago']= value\n    \n  }\n  setplan(xarray)\n};\n\n\nconst enviar = event => {    \n  event.preventDefault()             \n  let dato ={\n    ventaId: indicador,\n    clienteId:2,\n    email: email,\n    nombres : nombres,\n    observaciones: observaciones\n  }\n  dispatch(mailActions.SEND_MAIL('mails/sendcotizacion',dato))\n  dispatch({type:'VENTAS_INDICADOR',value:0,estado:'pendiente',indicadorTotal:0})\n  setnombres('')\n  setobservaciones('')\n  setemail('')\n  setviewy(false)\n  \n};\n    return (                                      \n      <>  \n      <Card>        \n      <Row>        \n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faReceipt} className=\"ml-1 \"/>  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">                \n            <Button className={indicador !== 0 ? \"btl bg-defaults text-white disabled\": \"btl bg-defaults text-white\"}  onClick={()=> getComponent('new',1)}><FontAwesomeIcon icon={faPlus}/> </Button>                 \n            <Button className={indicador === 0  || estado === 'cerrado'  ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> getComponent('edit',indicador)}>\n                  <FontAwesomeIcon icon={faEdit} /></Button>            \n            <Button className={indicador === 0  || estado === 'cerrado' ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> toggleModalView()}>\n                <FontAwesomeIcon icon={faTrash} /> </Button>                                \n            <Button className={indicador === 0 || estado === \"pendiente\" ? \"bts bg-default text-white disabled\": \"bts bg-default text-white\"} onClick={()=> viewArticulo()}>\n                <FontAwesomeIcon icon={faFilePdf} /> </Button> \n                         \n            <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewx()} >\n               <FontAwesomeIcon icon={faCoins} /></Button> \n            <Button className={indicador === 0  || estado === 'cerrado' ? \"btr bg-default text-white disabled\": \"btr bg-default text-white\"} onClick={()=> toggleModalViewy()} >\n               <FontAwesomeIcon icon={faEnvelope} /></Button>     \n        </Col>                 \n        \n        <Col md={1} className=\"cards text-right\">\n                 <Select                 \n                        styles={customs}                                              \n                        defaultValue={page[0]}\n                        name=\"prop\"    \n                        id=\"prop\"                    \n                        options={page}      \n                        isClearable={false}                          \n                        value={defaultVal(page,prop)}    \n                        onChange={ (e) => changeSelect(e)}                                             \n                      />\n        </Col>                \n        \n        <Col md={4} className=\"cards\">                \n                  <Form onSubmit={ submitHandle}> \n                  <FormGroup row>                                                          \n                    <Col sm={10}>\n                    { prop !== 'fechaVenta' ?\n                      <Input \n                      type=\"text\" \n                      name=\"value\"                                 \n                      id=\"value\"  \n                      value={ value || '' }  \n                      onChange={ (e) => {setValue(e.target.value)}} />\n                     : \n                     <DatePicker \n                      locale=\"es\"selected={value} \n                      onChange={(date) => setValue(date)} />\n                     }                    \n                    </Col>    \n                    <Button  className=\"btn-primary \" sm={1}>\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                    </FormGroup>       \n                  </Form>               \n        </Col>  \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } VENTAS</p>          \n        </Col>  \n      </Row>\n      </Card> \n\n      <Modal isOpen={view} toggle={toggleModalView} className=\"deleteBody\">  \n          <ModalBody className=\"deleteConte\">\n          <Row>\n              <Col md=\"12\" >\n              <p className=\"deletePe\">desea borra el registro ?</p>  \n              </Col>              \n            </Row>\n            <Row className=\"mt-3\">\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-danger deleteCol\"  onClick={() => toggleModalView()} >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n              </Col>\n              <Col md=\"6\" className=\"text-center\">\n              <Button className=\"btn-success deleteCol\"  onClick={() => onBorrar()} >\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewx} toggle={toggleModalViewx} className=\"calculoBody\">  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewx()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody className=\"calculoConte\">\n          <Row>                       \n              <Col md={2}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nro. cuotas</Label>\n                    <Input type=\"number\" name=\"cuota\" id=\"cuota\" \n                    value={cuota || ''}                \n                    onChange={ (e) => setcuota(e.target.value)} />    \n                  </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Contado</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setContado(e)}}  \n                        checked={contado} />\n                    </FormGroup> \n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                      <Label for=\"estado\">Cheque</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setBanco(e)}}  \n                        checked={banco} />\n                </FormGroup>      \n              </Col>\n              <Col md={2}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">P.Inicial</Label>\n                      <Switch                         \n                        className=\"mt-1\"                         \n                        onChange={ (e) =>{setInicial(e)}}  \n                        checked={inicial} />\n                    </FormGroup>\n              </Col>\n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    className=\"btn-md btn-info mt-4\"\n                    onClick={() => calcular()}>\n                    <FontAwesomeIcon icon={faCoins} />  \n                    {' '} Calcular\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          <Row>            \n              <Col md={12}>\n                <Card>            \n                  <CardBody>\n                    <h6>Compra total :                       \n                      {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(indicadorTotal)}\n                      </h6>\n                    <Table className=\"table-simple\">\n                    <thead>\n                        <tr>  \n                            <th width=\"20%\">Fecha</th>                  \n                            <th width=\"20%\">Cuota</th>                  \n                            <th width=\"30%\">Monto</th>\n                            <th width=\"30%\">Estado</th>\n                        </tr>\n                    </thead>\n                    {plan && (\n                        <tbody>\n                            {plan.map((item, index) => (\n                                <tr key={index}>                                                                       \n                                  <td>\n                                    <Input type=\"date\" name=\"fechaPago\" id=\"fechaPago\" \n                                      value={item.fechaPago || ''}       \n                                      onChange={ (e) => onChange(e,index)}                     \n                                    />   \n                                  </td>                                                 \n                                  <td>{item.cuota}</td> \n                                  <td>                                    \n                                    {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}\n                                  </td>\n                                  <td>{item.estado ? \"pagado\":\"pendiente\" }</td>                                                                    \n                                </tr>  \n                                ))}\n                        </tbody>\n                    )}\n                  </Table>\n                </CardBody>  \n              </Card>\n              </Col>\n            </Row>\n            <Row>                                      \n                  <Col md={3}>\n                    <FormGroup>\n                      <Button                        \n                        className={plan ? \"btn btn-md btn-success\" : \"btn btn-md btn-success disabled\" }\n                        onClick={() => aprobarVenta()}>\n                        <FontAwesomeIcon icon={faCoins} />  \n                        {' '} Aprobar\n                      </Button>                  \n                    </FormGroup>               \n                  </Col>           \n            </Row> \n          </ModalBody>\n      </Modal>\n\n      <Modal isOpen={viewz} toggle={toggleModalViewz}>  \n      <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewz()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n           <VentaResumen/>         \n          </ModalBody>\n      </Modal>\n      <Modal isOpen={viewy} toggle={toggleModalViewy}>  \n          <Button className=\"btn-view btn-danger\"  onClick={() => toggleModalViewy()} >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n          <ModalBody>\n          <Card>\n            <h6>Enviar cotización</h6>\n          <Form onSubmit={ enviar}>   \n          <Row>                       \n              <Col md={6}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Nombre :</Label>\n                    <Input type=\"text\" name=\"nombres\" id=\"nombres\" \n                    value={nombres || ''}                \n                    onChange={ (e) => setnombres(e.target.value)} \n                    onInvalid={(e) => e.target.setCustomValidity('El campo nombres es obligatorio !')}\n                    onInput={(e) => e.target.setCustomValidity('')}\n                    required \n                    />    \n                  </FormGroup> \n              </Col>\n              <Col md={6}>                               \n                  <FormGroup>\n                      <Label for=\"estado\">Email :</Label>\n                      <Input type=\"text\" name=\"email\" id=\"email\" \n                        value={email || ''}                \n                        onChange={ (e) => setemail(e.target.value)} \n                        onInvalid={(e) => e.target.setCustomValidity('El campo email es obligatorio !')}\n                        onInput={(e) => e.target.setCustomValidity('')}\n                        required \n                        />       \n                                           \n                    </FormGroup> \n              </Col>                                                \n          </Row> \n          <Row>                       \n              <Col md={12}>                \n                  <FormGroup>\n                    <Label for=\"estado\">Observaciones</Label>\n                    <Input type=\"text\" name=\"observaciones\" id=\"observaciones\" \n                    value={observaciones || ''}                \n                    onChange={ (e) => setobservaciones(e.target.value)} />    \n                  </FormGroup> \n              </Col>             \n          </Row> \n          <Row>                                               \n              <Col md={2}>                               \n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn-md btn-info mt-4\">\n                    <FontAwesomeIcon icon={faEnvelope} />  \n                    {' '} Enviar\n                  </Button>                  \n                </FormGroup> \n              </Col>                                      \n          </Row> \n          </Form> \n          </Card>  \n          </ModalBody>\n      </Modal>\n    </>                    \n    );\n};\nexport default SearchVenta;\n","import React,{ useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { formaPagos, formaEntregas, impuestos } from \"../../../../helpers/dataLoad\";\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { custom } from '../../../../helpers/customStyles'\nimport SingleCliente from '../../../CRM/Clientes/components/SingleCliente'\nimport Select from 'react-select'          \n\nconst FormVenta = () => {\n    const dispatch = useDispatch()  \n    const { item, items } = useSelector(state => state.ventas)   \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))    \n\n    const changeHandler = event => {    \n        const { name, value } = event.target          \n        dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE',name,value)) \n    }\n    const changesHandler = (event,name) => {                       \n      const { value } = event ? event : ''              \n      dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE',name,value))     \n      console.log(value)    \n      if(name === 'iva')\n      {\n        let iok = (value === 0 || value === '0') ? 0: (parseFloat(item.totalGeneral) * (parseFloat(value) / 100))\n        dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE','impuesto',iok)) \n        let sTotal = (value === 0 || value === '0') ? item.totalGeneral: parseFloat(item.totalGeneral)- parseFloat(iok)\n        dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE','subTotal',sTotal)) \n              \n      }       \n    }\n    const changeDescuento = (event) => {                       \n      const ivalue = event.target.value ? event.target.value : 0        \n      dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE','descuento',ivalue))    \n      let sTotal = (ivalue === 0 || ivalue === '0' || ivalue === undefined || ivalue === null  || ivalue >= item.totalDescuento) ? item.totalDescuento: parseFloat(item.totalDescuento)- parseFloat(ivalue)\n      dispatch(crudActions.SET_CHANGE('VENTAS_CHANGE','totalGeneral',sTotal))           \n    }\n    const submitHandle = () => {       \n      let eItem = item                    \n      eItem.usuarioId = usuario.id            \n      eItem.detalle   = item.observaciones +', '+item.clients\n      let xcode={\n        item: eItem,\n        items:items\n      }          \n      if(item.id)\n      {\n        dispatch(crudActions.SET_UPDATES('VENTAS_ADD','ventas',xcode,'unit'))\n      }else{\n        dispatch(crudActions.SET_ADD('VENTAS_ADD','ventas',xcode,'lista'))\n      }   \n      \n        \n     }  \n    useEffect(() => {      \n      return () => {\n        dispatch({type:'VENTAS_RESET_ITEM'})        \n      };\n    }, []); \n\n\n\n  \n     \nreturn (              \n    <>                                  \n    <Row form>\n      <Col md={9}>\n        <SingleCliente/>                                                     \n      </Col>                                                                               \n    </Row>\n    <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"fpago\"> Forma de pago </Label>\n                  <Select                                                               \n                    defaultValue={formaPagos[0]}\n                    styles={custom} \n                    name=\"formaPago\"    \n                    id=\"formaPago\"                    \n                    options={formaPagos}      \n                    isClearable={false}                          \n                    value={defaultVal(formaPagos,item.formaPago)}\n                    onChange={ (e) => changesHandler(e,'formaPago')}/>\n              </FormGroup>   \n            </Col>\n          </Row>\n\n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"fentrega\"> Forma de entrega </Label>\n                  <Select                                                               \n                    defaultValue={formaEntregas[0]}\n                    styles={custom} \n                    name=\"formaEntrega\"    \n                    id=\"formaEntrega\"                    \n                    options={formaEntregas}      \n                    isClearable={false}                          \n                    value={defaultVal(formaEntregas,item.formaEntrega)}\n                    onChange={ (e) => changesHandler(e,'formaEntrega')}/>\n              </FormGroup>   \n            </Col>\n          </Row>\n          <Row form>\n            <Col md={12}>\n            <FormGroup>\n                <Label for=\"fiva\"> Impuesto </Label>\n                  <Select                                                               \n                    defaultValue={impuestos[0]}\n                    styles={custom} \n                    name=\"iva\"    \n                    id=\"iva\"                    \n                    options={impuestos}      \n                    isClearable={false}                          \n                    value={defaultVal(impuestos,item.iva)}\n                    onChange={ (e) => changesHandler(e,'iva')}/>\n              </FormGroup>   \n            </Col>\n          </Row>  \n          <Row form>\n            <Col md={12}>\n              <FormGroup>\n                <Label for=\"ndescuento\">Descuento</Label>\n                  <Input \n                      type=\"number\" name=\"descuento\" id=\"descuento\" \n                      value={item.descuento}                          \n                      onChange={ (e) => changeDescuento(e)} \n                     \n                  />\n              </FormGroup>   \n            </Col>\n          </Row>                           \n        \n    <Row form>                                    \n      <Col md={12}>\n        <FormGroup>\n          <Label for=\"observaciones\">Glosa</Label>\n          <Input type=\"textarea\" name=\"observaciones\" id=\"observaciones\" \n                 value={item.observaciones || ''}                          \n                 onChange={ (e) => changeHandler(e)} />\n        </FormGroup>   \n      </Col>\n    </Row>\n    <Row>  \n      <Col md={7}>\n        <Button\n          className={item.id ?\"btn-md btn-warning mt-4\" : \"btn-md btn-info mt-4\"}\n          onClick={() => submitHandle()}>\n          <FontAwesomeIcon icon={faSave} />  \n          {' '} {item.id ? \" Actualizar\" : \" Guardar\"}\n        </Button>    \n      </Col>                  \n    </Row>\n  </>                                 \n    );\n};\nexport default FormVenta;\n","import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row,Col,Button, FormGroup, Input, Label,Card,CardBody,ListGroup, ListGroupItem\n  } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchvArticulos = ({getComponent}) => {\n    const dispatch = useDispatch()   \n    const { data  } = useSelector(state => state.articulos)  \n    const { items, item  } = useSelector(state => state.ventas)  \n    const almacenId = JSON.parse(localStorage.getItem('@userAlmacen'))  \n    const [open, setOpen] = useState(false); \n    const [name, setName] = useState('');\n    const [cantidad, setCantidad] = useState(0);\n    const [valor, setValor] = useState(0.00);\n    const [articulo, setArticulo] = useState({});\n    \n    const changeHandler = event => {    \n      const { value } = event.target  \n      setName(value)      \n    } \n    const search = () =>{    \n      setOpen(true)  \n      let iok ={      \n      nombre    : name,\n      almacenId : almacenId.id      \n      }  \n      dispatch(crudActions.GET_SEARCHS_ITEMS('ARTICULOS_DATA_ITEMS','tpv',iok))\n    } \n\n    const clearInput = () => {\n      setName('')\n      setOpen(false)\n      setCantidad(0)\n      setValor(0)\n    } \n    \n    const upCantidad = (e) => {\n      const { value } = e.target \n      setCantidad(value)      \n    }\n    const upValor = (e) => {\n      const { value } = e.target \n      setValor(value)      \n    } \n\n    const add = () =>{  \n      let ites = [...items]\n      let cTotal = item.nroItems     \n      let gTotal = item.totalGeneral      \n      let sTotal = item.subTotal\n      let gImp   = item.impuesto\n      let tDescuento = item.totalGeneral\n      let repeat = false\n      ites.map((item, index) =>{                        \n        if(item.articuloId === articulo.articuloId)\n        { \n          repeat = true;\n        }\n        return null\n      }) \n      if(!repeat)\n      {\n      let itemVenta = {\n        cantidad    : cantidad,          \n        articuloId  : articulo.articuloId,\n        codigo      : articulo.codigo, \n        marca       : articulo.marca,\n        unidad      : articulo.unidad,\n        valor       : parseFloat(valor),\n        subTotal    : parseInt(cantidad) * parseFloat(valor),      \n        nombre      : articulo.nombre,    \n        ventaId     : item.id    \n      }  \n      ites.push(itemVenta);   \n\n      cTotal = parseInt(cTotal) +parseInt(cantidad);    \n      gTotal = parseFloat(gTotal) + parseFloat(itemVenta.subTotal)  \n      gImp   = gTotal * parseFloat(item.iva / 100)\n      sTotal = (gTotal - item.descuento) - parseFloat(gImp)    \n      tDescuento = parseFloat(gTotal) + parseFloat(itemVenta.subTotal)  \n      /*tDescuento = parseFloat(gTotal) - parseFloat(item.descuento)            */\n      /*gTotal = parseFloat(gTotal) - parseFloat(item.descuento)*/\n      dispatch({type:'VENTAS_SET_ITEMS',values:ites, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp, totalDescuento : tDescuento})  \n\n      }\n        clearInput()\n\n    }\n\n    const handleAsignar = (articulo) =>{   \n      console.log(articulo)\n      setArticulo(articulo)  \n      setName(articulo.nombre)    \n      setValor(articulo.precioVenta)    \n      setOpen(false)\n    }\n\n\n    return (   \n      <>           \n        <Row form>                      \n          <Col md={6}>\n            <FormGroup>   \n              <Label for=\"eNombre\">Nombres</Label>                 \n                <Input \n                  type=\"text\" \n                  name=\"name\"                             \n                  id=\"name\"  \n                  value={name || ''}  \n                  onChange={changeHandler} />\n                   {\n                              name ? \n                              <Button className=\"volatil\" onClick={(e) => {clearInput()}}>\n                                <FontAwesomeIcon icon={faTimes}   />\n                              </Button>\n                              : null\n                            } \n            </FormGroup>\n          </Col>\n          <Col md={1}>\n                        <FormGroup>   \n                          <Button className=\"btn-primary btn-search mt-3\"\n                          onClick={search}>\n                            <FontAwesomeIcon icon={faSearch} />\n                          </Button>  \n                        </FormGroup>\n                      </Col>\n\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eNombre\">Cantidad</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"cantidad\"                             \n                            id=\"cantidad\"    \n                            value={cantidad}                          \n                            onChange={(e) => upCantidad(e)} />\n                        </FormGroup>\n                      </Col>\n                      <Col md={2}>\n                        <FormGroup>   \n                        <Label for=\"eValor\">Valor</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"valor\"                             \n                            id=\"valor\"    \n                            value={valor}      \n                            readOnly={true}                    \n                            onChange={(e) => upValor(e)} />\n                        </FormGroup>\n                      </Col>\n                                      \n                      <Col md={1}>\n                        <Button className={cantidad === 0 ? \"btn-rd btn-disabled mt-3\":\"btn-rd btn-danger mt-3\"}\n                          onClick={() => add() }\n                        >\n                         <FontAwesomeIcon icon={faArrowDown} />                          \n                         </Button>\n                      </Col>\n                    </Row>                  \n      \n              \n              { open ?              \n                <Card className=\"resultArt\">           \n                  <CardBody>\n                    {data &&\n                    <ListGroup>\n                      {data.map(item =>(\n                        <ListGroupItem\n                          key={item.id}\n                          onClick={() => handleAsignar(item) }\n                        >\n                        <b>{item.codigo}</b> - {item.nombre}/{item.marca} - (Stock: {item.stock})  \n                        </ListGroupItem>\n                      ))}\n                    </ListGroup>\n                    }\n                  </CardBody>  \n                </Card>           \n              : null}                \n\n        </>                    \n                         \n    );\n};\nexport default SearchvArticulos;\n","import React,{useEffect} from \"react\";\nimport { Table, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ListaVentas = () => {\n   const dispatch = useDispatch() \n   const {items, item }= useSelector(state => state.ventas)\n   const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n   \n\n\n   const removeItem = (index) => {          \n    var array = [...items];    \n    let cTotal = item.nroItems      \n    let gTotal = item.totalGeneral  \n    let sTotal = item.subTotal\n    let gImp   = item.impuesto\n    let tDescuento = item.totalDescuento\n\n    if(array.length < 0){\n      cTotal = 0\n      gTotal = 0\n      sTotal = 0\n      gImp   = 0\n      /*tDescuento = 0*/\n    }else{    \n        cTotal = cTotal - parseFloat(array[index].cantidad);    \n        gTotal = gTotal - parseFloat((array[index].cantidad * array[index].valor));        \n        gImp   = gTotal * parseFloat(item.iva / 100)\n        sTotal = gTotal - parseFloat(gImp)        \n        tDescuento = tDescuento - parseFloat((array[index].cantidad * array[index].valor));\n    }\n    array.splice(index,1);        \n    dispatch({type:'VENTAS_SET_ITEMS',values:array, cantidad: cTotal, subTotal: sTotal, totalGeneral: gTotal,impuesto:gImp,totalDescuento : tDescuento })\n   }\n\n \n   \n   useEffect(() => {    \n    return () => {\n      dispatch({type:'VENTAS_RESET_ITEMS'})   \n    };\n}, []);\n  return(\n    <>    \n    <Row>\n      <Col>\n      <Card>        \n        <CardBody>\n        <Table className=\"table-simple\">\n          <thead>\n              <tr>  \n                <th width=\"15%\" >Código</th>\n                <th width=\"45%\">Nombre</th>                                \n                <th width=\"10%\">Valor</th>\n                <th width=\"10%\">Cantidad</th>                \n                <th width=\"15%\">SubTotal</th>            \n                <th width=\"5%\"></th>                   \n              </tr>\n          </thead>\n          {items && (\n              <tbody>\n                  {items.map((item, index) => (\n                      <tr key={item.articuloId}>                      \n                        <td>{item.codigo}</td>\n                        <td>{item.nombre}</td>                                                 \n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>\n                        <td>{item.cantidad} ({item.unidad}) </td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n\n                        <td>\n                          <Button className=\"btn btn-danger\" \n                            onClick={() => { removeItem(index)}}>\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>                                           \n                        </td>\n                      </tr>  \n                      ))}\n                   <tr>\n                        <td colSpan=\"4\">SubTotal:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                        \n                      </tr>\n                      <tr>\n                        <td colSpan=\"4\">Impuesto:</td>\n                        <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.impuesto)}</td>\n                      </tr>                      \n                      <tr>\n                        <td colSpan=\"4\"><b>Descuento</b></td>                        \n                          <td className={item.descuento === 0 || item.descuento === '0' ? \"nn\": \"subs\" }>\n                          {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.descuento)}\n                          </td>                          \n                      </tr>  \n                      <tr>\n                        <td colSpan=\"4\"><b>TOTAL</b></td>                        \n                        <td >{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</td>\n                      </tr>                      \n              </tbody>\n          )}\n        </Table>\n        </CardBody>\n      </Card> \n      </Col>         \n    </Row>        \n</>      \n  )\n\n};\nexport default ListaVentas;\n","import React from \"react\";\nimport { useSelector } from 'react-redux'\nimport {  Button, Row, Col, Card, CardBody } from \"reactstrap\"\nimport FormVenta from './FormVenta'\nimport SearchvArticulos from '../../../INVENTARIOS/Articulos/components/SearchvArticulo'\nimport ListaVentas from \"./ListaVentas\";\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EditVenta = ({getComponent}) => {\n  const { item  } = useSelector(state => state.ventas)  \n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  var d = new Date();\n  console.log(item.nroItems)\n\n    return (              \n      <>\n      <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA VENTAS\n          </Button>              \n        </Col>  \n      </Row> \n      <Row> \n      <Col md=\"12\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"2\" className=\"barraz\">\n               <h5><b>VENTA Nº : </b> {item.id} </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Estado : </b> {item.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {item.nroItems}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Valor Total : </b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.totalGeneral)}</h5>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      <Row>\n        <Col md=\"4\" className=\"cardCo\">\n            <Card>        \n              <CardBody>\n              <h6>Datos Venta</h6> \n                <FormVenta/> \n              </CardBody>   \n            </Card>\n        </Col>          \n        <Col md=\"8\" className=\"cardCo\">\n          <Card>\n            <CardBody>\n            <h6>Productos</h6> \n              <SearchvArticulos/>\n              <ListaVentas/>\n            </CardBody>\n          </Card>     \n        </Col>          \n      </Row>                                         \n      </>  \n                                                   \n    );\n};\nexport default EditVenta;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableVentas from \"./components/TableVentas\";\nimport SearchVenta from \"./components/SearchVenta\";\nimport EditVenta from \"./components/EditVenta\";\n\nconst Ventas = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n\n  \n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchVenta getComponent={getComponent}/><TableVentas getComponent={getComponent}/></>)\n          break;    \n        case 'new':\n          dispatch({type:'VENTA_RESET_RESUMEN'})\n          setComponent(<EditVenta getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('VENTAS_ITEM','ventas',key)) \n          setComponent(<EditVenta getComponent={getComponent}/>)\n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga ventas')\n    };\n  }, []); \n\n \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                 \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Ventas;\n","import React from \"react\";\nimport { Nav, NavItem  } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst subMenu = ({items,prop}) => {     \n  return(\n  <>    \n    <div className=\"nav-sunity\" expand=\"lg\">     \n    <Nav>\n    {items.map((item, index) => (\n      <NavItem key={index}>  \n      <NavLink                \n        to={`/ventas/${item.link}/`}\n        className={item.name === prop ? \"nav-link active\" : \"nav-link\"}> \n        <FontAwesomeIcon icon={ item.name === prop ? faChevronDown : faChevronRight } />{' '} {item.name}\n      </NavLink>\n    </NavItem>             \n    ))}\n    </Nav>  \n    </div>     \n  </>         \n  )\n\n};\nexport default subMenu;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n      <>\n   <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE VENTAS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Estado : {this.props.pestado}</h5>              \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>\n                <th width=\"15%\" className=\"text-dark\">Cliente</th>\n                <th width=\"25%\" className=\"text-dark\">Glosa</th>\n                <th width=\"10%\" className=\"text-dark\">F.Movimiento</th>                                                                                               \n                <th width=\"15%\" className=\"text-dark text-center\">Total</th>                    \n                <th width=\"15%\" className=\"text-dark text-center\">Pago</th> \n                <th width=\"15%\" className=\"text-dark text-center\">Saldo</th>                 \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.id}</td>\n                    <td>{item.cliente}</td> \n                    <td>{item.observaciones}</td>                                                  \n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaCompra}</Moment></td>                                                  \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.total)}</td>                 \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.pago)}</td>                 \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.saldo)}</td>                 \n                    </tr>  \n                ))}\n                  <tr>\n                    <td className=\"centro\" colSpan=\"4\">TOTAL</td>                    \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psuma)}</td>                 \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.ppago)}</td>                 \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psaldo)}</td>                 \n                  </tr>\n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Movimientos ({value1, value2,estado}) {    \n  const componentRef = useRef();   \n  const { ventas,montoTotal,pagoTotal,saldoTotal,total } = useSelector(state => state.informes)    \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{             \n      /*dispatch(crudActions.setReset('INFORMES_RESET'))               */\n      dispatch({type:'INFORMES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={ventas}   \n            ptotal={total}                     \n            psuma={montoTotal}\n            psaldo={saldoTotal}\n            ppago={pagoTotal}\n            pvalue1={value1}\n            pvalue2={value2}\n            pestado={estado}            \n        />\n    </div>\n     )\n}\n\n\nexport default Movimientos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody  } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subVenta.jsx';\nimport { InformeVentasRouter } from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport Select from 'react-select'\nimport { useDispatch } from 'react-redux'\nimport Movimientos  from './Movimientos';\nimport { customi } from '../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst estados =  [{\"value\":\"todas\",\"label\":\"--Todas--\"},{\"value\":\"pagado\",\"label\":\"Pagados\"},{\"value\":\"pendiente\",\"label\":\"Pedientes\"}];\n              const defaultVal = (options, valor) =>{\n                return options.filter(item =>\n                    item.value === valor\n                  )\n              \n              }\nconst MovimientosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());  \n  const [estado, setEstado] = useState(\"todas\"); \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde = value1\n    item.hasta = value2      \n    item.estado = estado      \n    dispatch(crudActions.GET_INFORMES('INFORMES_VENTAS_RANGOS','salerango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n        <SubMenu items={InformeVentasRouter} prop={'Ventas'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                 <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n\n                <Row form> \n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eEstado\">Estado Financiero: </Label>                 \n                    <Select         \n                          defaultValue={ estados[0]}\n                          name=\"estado\"    \n                          id=\"estado\"                    \n                          options={estados}                                                    \n                          value={defaultVal(estados,estado)} \n                          onChange={ (e)=> { setEstado(e.value)}}        \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                 \n                </Row>\n              \n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Movimientos            \n            value1={value1}\n            value2={value2}\n            estado={estado}            \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default MovimientosView;\n","import React,{useEffect, useCallback, useState} from \"react\";\nimport { CardBody, CardFooter,  Table, Row, Col, Input, FormGroup, Label, Card  } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { crudActions } from '../../../../actions'\nimport Pagination from '../../../../components/Pagination'\nimport Select from 'react-select'  \nimport Moment from 'react-moment'\nimport { customStyles } from '../../../../helpers/customStyles'\nimport { defaultVal } from \"../../../../helpers/funciones\";\nimport { pages } from \"../../../../helpers/dataLoad\";\n\nconst TableCobros = ({getComponent}) => {\n  const dispatch = useDispatch() \n  const [pag, setpag] = useState(15);\n  const {data,pagina,paginas,indicador }= useSelector(state => state.cobros)\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n  \n  const makeHttpRequestWithPage = (page, num) =>{\n   dispatch(crudActions.GET_DATA('COBROS_DATA','notas/cobros',page, num,'fechaPago','desc'))        \n  }\n\n const changeSelect = (pky) => {        \n   const {value, label} = pky\n   setpag(value)\n   makeHttpRequestWithPage(1,value)\n };\n\n useEffect(() => {\n      makeHttpRequestWithPage(1,pag)\n     return () => {\n      dispatch({type:'COBROS_RESET_DATA'})\n     };\n }, []);\n\n const setIndicador = (pky,est,venta) => {            \n   let iok = pky === indicador  ? 0 : pky\n   dispatch({type:'COBROS_INDICADOR',value:iok,estado:est,venta:venta}) \n };\n\n   \nreturn(\n  <>    \n  <Row>\n    <Col>\n      <Card>\n        <CardBody>\n          <Table className=\"table-simple\">\n        <thead>\n            <tr>  \n\n                <th width=\"5%\"></th>\n                <th width=\"10%\">Id</th>                                \n                <th width=\"35%\">Glosa</th>\n                <th width=\"10%\">Fecha Pago</th>\n                <th width=\"10%\">Cuota</th>                  \n                <th width=\"10%\">Monto</th>\n                <th width=\"10%\">Estado</th>                \n                <th width=\"10%\">Nº Venta</th>                \n                <th width=\"10%\">Finan</th>               \n                \n            </tr>\n        </thead>\n        {data && (\n            <tbody>\n                {data.map((item, index) => (\n                    <tr key={index}>                                                                  \n                      <td >                       \n                      <Input type=\"checkbox\" \n                      onChange={() => { setIndicador(item.id, item.estado, item.ventaId) }} \n                      checked={ item.id === indicador ? true : false}\n                      /></td>                      \n                      <td>{item.id}</td>\n                      <td>{item.glosa}</td>\n                      <td><Moment format=\"DD-MM-YYYY\">{item.fechaPago}</Moment></td>                                 \n                      <td>{item.cuota }</td>             \n                      <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>                      \n                      <td>{item.estado}</td>              \n                      <td>{item.ventaId}</td>                                                                                   \n                      <td>{item.est ? \"pagado\":\"pendiente\"}</td>                                                                                  \n                    </tr>  \n                    ))}\n            </tbody>\n        )}\n      </Table>\n    </CardBody>    \n    <CardFooter>     \n  <Row>  \n  <Col md={6} >\n                <Pagination\n                  makeHttpRequestWithPage={ makeHttpRequestWithPage }              \n                  paginas={paginas}\n                  current= {pagina} \n                  pagina= {pag}\n                />\n            </Col>          \n            <Col md={4}>                  \n            </Col>\n            <Col md={2}>   \n              <FormGroup row>\n                <Label for=\"exampleEmail\" sm={4}>Mostrar</Label>\n                <Col sm={7}>\n                    <Select                 \n                      styles={customStyles}                                              \n                      defaultValue={pages[0]}\n                      name=\"pag\"    \n                      id=\"pag\"                    \n                      options={pages}      \n                      isClearable={false}                          \n                      value={defaultVal(pages,pag)}    \n                      onChange={ (e) => changeSelect(e)}                                             \n                    />\n                </Col>\n                </FormGroup>\n            </Col>  \n  </Row>  \n  </CardFooter> \n      </Card>  \n    </Col>\n  </Row>    \n</>       \n      \n)\n\n};\nexport default TableCobros;\n","import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ButtonGroup, Row,Col,Button, Form, FormGroup, Input, Card   } from \"reactstrap\"\nimport { crudActions } from '../../../../actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoneyBill, faSearch, faCoins, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { customs } from '../../../../helpers/customStyles'\nimport Select from 'react-select'  \nimport { registerLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst page =[{\"value\":'observaciones',\"label\":'glosa'},\n             {\"value\":'cliente',\"label\":'cliente'},\n             {\"value\":'fechaVenta',\"label\":'fecha'},\n            ];\n\n            const defaultVal = (options, valor) =>{\n              return options.filter(item =>\n                  item.value === valor\n                )\n            \n            }\n\n\nconst SearchCobro = ({getComponent}) => {\n    const dispatch = useDispatch()    \n    const { total, indicador, ventaId}= useSelector(state => state.cobros)    \n    const [prop, setProp] = useState('observaciones');\n    const [value, setValue] = useState(\"\");    \n\n   const changeSelect = (pky) => {        \n      const { value } = pky\n      setProp(value)\n      setValue('')\n    };        \n    const submitHandle = event => {       \n      event.preventDefault()  \n      let iok = {}               \n      iok.value = value\n      iok.prop  = prop      \n      dispatch(crudActions.GET_SEARCH('COBROS_DATA','notas/venta',iok))             \n   }  \n  \n \n    return (                                      \n            \n        <>             \n       <Card> \n      <Row>\n        <Col md={1} >\n          <div className=\"circule\">\n          <FontAwesomeIcon icon={faMoneyBill} />  \n          </div>        \n        </Col>\n        <Col md={4} className=\"cards\">\n        <ButtonGroup>\n          <Button className={indicador === 0 ? \"btl bg-defaults text-white disabled\": \" btl bg-defaults text-white\"}  onClick={()=> getComponent('edit',ventaId)}>\n            <FontAwesomeIcon icon={faCoins}/> \n          </Button>                                         \n        </ButtonGroup>\n        </Col>\n\n        <Col md={1} className=\"cards text-right\">\n          <Select                 \n                styles={customs}                                              \n                defaultValue={page[0]}\n                name=\"prop\"    \n                id=\"prop\"                    \n                options={page}      \n                isClearable={false}                          \n                value={defaultVal(page,prop)}    \n                onChange={ (e) => changeSelect(e)}                                             \n          />\n        </Col> \n\n        <Col md={4} className=\"cards\">\n          <Form onSubmit={ submitHandle}> \n            <FormGroup row>                                                          \n              <Col md={11}>\n                <Input \n                    type=\"text\" \n                    name=\"value\"                                 \n                    id=\"value\"  \n                    value={ value || '' }  \n                    onChange={ (e) => {setValue(e.target.value)}} />   \n                    {\n                      value ? \n                      <Button className=\"volatil\" onClick={(e) => {setValue('')}}>\n                        <FontAwesomeIcon icon={faTimes}   />\n                      </Button>\n                      : null\n                    } \n              </Col>\n              <Col md={1}>\n                <Button className=\"btn-primary btn-search\">\n                  <FontAwesomeIcon icon={faSearch} />\n                </Button>  \n              </Col>              \n          </FormGroup>       \n          </Form>               \n        </Col> \n        <Col md={2}> \n        <p className=\"mt-3 ml-3\" >{ total || 0 } COBROS</p>          \n        </Col>\n      </Row>  \n      \n    </Card> \n      \n\n      \n\n      \n    </>                    \n    );\n};\nexport default SearchCobro;\n","import React,{useState,useEffect} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormGroup,  Form, Label, Input, Button, Row, Col, Card, CardBody, Table } from \"reactstrap\"\n\nimport Moment from 'react-moment'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faSave, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { crudActions } from '../../../../actions'\nimport Switch from 'react-switch'\nconst EditCobro = ({getComponent}) => {  \n  const dispatch = useDispatch()  \n  const { venta, ventaItems, cantidadTotal, sumaTotal, plan, nota, ventaId  } = useSelector(state => state.cobros)  \n  const d = new Date()\n  const [ efectivo, setEfectivo] = useState(true)    \n  const [ cheque, setCheque] = useState('')    \n  const [ nbanco, setNBanco] = useState('')    \n  const [ pago, setpago] = useState({\n    cuota:0,\n    ventaId:0,\n    planId:0,\n    monto:0\n  })    \n  const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n  const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n\n\n  const asignar = (xitem) =>{\n    let xpago = {\n      cuota: xitem.cuota,\n      ventaId:ventaId,\n      planId: xitem.id,\n      monto: xitem.monto\n    }\n    setpago(xpago)\n  } \n  \n  const pagar = event => {       \n    event.preventDefault()    \n    let iok = pago\n    iok.usuarioId =usuario.id\n    iok.cliente = venta.cliente.nombres\n    iok.observaciones = venta.observaciones         \n    iok.efectivo = efectivo \n    iok.banco   = nbanco\n    iok.cheque   = cheque\n    \n    dispatch(crudActions.SET_ADD('COBROS_ADD','notas/venta',pago,'unit')) \n    setpago({\n      cuota:0,\n      ventaId:0,\n      planId:0,\n      monto:0\n    })\n    setNBanco('')\n    setCheque('')\n    setEfectivo(true)\n\n    \n} \nuseEffect(() => {      \n  return () => {\n    dispatch({type:'COBROS_RESET_ITEM'})        \n  };\n}, []); \n\n    return (              \n      <>\n       <Row>        \n        <Col md=\"3\" className=\"btnBack\">  \n          <Button className=\"bg-success text-white\" onClick={()=> getComponent('data',1)}>\n            <FontAwesomeIcon icon={faArrowLeft} /> LISTA COBROS\n          </Button>              \n        </Col>  \n      </Row>\n      <Row>     \n      <Col md=\"12\">\n        <Card>\n            <CardBody>\n             <Row>\n               <Col md=\"2\" className=\"barraz\">\n               <h5><b>VENTA Nº : </b> {venta.id} </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Fecha : </b> <Moment format=\"DD/MM/YYYY\">{d}</Moment> </h5>\n               </Col> \n               <Col md=\"2\" className=\"barrac\">\n               <h5><b>Estado : </b> {venta.estado}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Cantidad : </b> {cantidadTotal}</h5>\n               </Col> \n               <Col md=\"3\" className=\"barrac\">\n               <h5><b>Valor Total : </b>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(venta.totalGeneral)}</h5>\n               </Col> \n              </Row>  \n            </CardBody>   \n        </Card>       \n      </Col>  \n      </Row>\n      <Row>                  \n        <Col md=\"7\" className=\"cardCo\">\n          <Row>\n            <Col>\n            <Card>        \n            <CardBody>\n            <h4>Nota de venta</h4> \n            <Table className=\"table-reportesh\">\n            <tbody>                  \n                <tr>                      \n                  <td><b>Nº </b></td>\n                  <td>{nota.id}</td>                                                            \n                </tr>  \n                <tr>      \n                  <td><b>Nº Cuotas : </b></td>\n                  <td>{nota.cuotas}</td>                                       \n                </tr>              \n                <tr>      \n                  <td><b>Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.montoTotal)}</td>    \n                </tr>\n                <tr>      \n                  <td><b>Pago Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.pagoTotal)}</td>                                       \n                </tr>\n                <tr>      \n                  <td><b>Saldo Total : </b></td>\n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(nota.saldoTotal)}</td>\n                </tr>                \n              </tbody>             \n            </Table> \n            </CardBody>   \n          </Card>\n            </Col>          \n          </Row>\n\n          <Row>\n            <Col md={8}>\n            <Card>        \n            <CardBody>\n            <h4>Pagos</h4> \n            <Table className=\"table-reportesh\">\n              <thead>\n                <tr>                  \n                  <th width=\"10%\">#</th>\n                  <th width=\"10%\">Cuota</th>\n                  <th width=\"15%\">F.Pago</th>\n                  <th width=\"10%\">Estado</th>\n                  <th width=\"20%\">Monto</th>\n                  <th width=\"15%\">F.Pagado</th>\n                  <th width=\"10%\"></th>                \n                </tr>\n              </thead>\n              {plan && (\n                  <tbody>\n                      {plan.map((item, index) => (\n                          <tr key={item.id}>                      \n                            <td>{item.id}</td>\n                            <td>{item.cuota}</td>\n                            <td><Moment format=\"DD-MM-YYYY\">{item.fechaPago}</Moment></td>                                                                 \n                            <td>{item.estado ? 'pagado': 'pendiente' }</td>                                                \n                            <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>\n                            <td>{item.fechaPagado ? <Moment format=\"DD/MM/YYYY\">{item.fechaPagado}</Moment>: 'pendiente'}</td>\n                            <td>\n                              {item.estado ?\n                                <Button className=\"btn btn-success\" >                                \n                                <FontAwesomeIcon icon={ faCheck } />\n                                </Button>\n                              :\n                              <Button className=\"btn btn-danger\" \n                              onClick={() => { asignar(item)}}>\n                              <FontAwesomeIcon icon={ faArrowRight } />\n                              </Button>\n                              }                            \n                            </td>\n                          </tr>  \n                          ))}\n                  </tbody>\n              )}     \n            </Table> \n            </CardBody>   \n          </Card>\n            </Col>  \n            <Col md={4}>\n              <Card>        \n                <CardBody>\n                <Form onSubmit={ pagar}>     \n                    <Row form>\n                      <Col md={9}>\n                        <FormGroup>   \n                        <Label for=\"total\">Total</Label>                 \n                          <Input \n                            type=\"number\" \n                            name=\"monto\"                             \n                            id=\"monto\"  \n                            value={pago.monto}                               \n                            readOnly={true}/>\n                        </FormGroup>\n                      </Col>\n                      <Col md={3}>\n                        <FormGroup>   \n                        <Label for=\"estado\">Efectivo</Label>\n                        <Switch                         \n                          className=\"mt-1\"                         \n                          onChange={ (e) =>{setEfectivo(e)}}  \n                          checked={efectivo} />                           \n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    { efectivo === false ?\n                      <>\n                       <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"recibido\">Nº Cheque</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"cheque\"                             \n                            id=\"cheque\"  \n                            value={cheque || ''}  \n                            onChange={(e)=>{setCheque(e.target.value)}} \n                            />\n                        </FormGroup>\n                      </Col>\n                    </Row>  \n                    <Row>\n                      <Col md={12}>\n                        <FormGroup>                    \n                        <Label for=\"cambio\">Banco</Label>\n                          <Input \n                            type=\"text\" \n                            name=\"nbanco\"                             \n                            id=\"nbanco\"  \n                            value={ nbanco || ''}  \n                            onChange={(e)=>{setNBanco(e.target.value)}}                             \n                            />\n                        </FormGroup>\n                      </Col>\n                    </Row> \n                      </>\n                    :\n                    null\n                    }\n                    \n                    <Row>\n                      <Col md={12}>\n                        <Button className={(pago.monto > 0 && pago.ventaId > 0) ? \"btn-md btn-info mt-3\": \"btn-md disabled mt-3\"}>\n                         <FontAwesomeIcon icon={faSave} />                          \n                        </Button>\n                      </Col>\n                    </Row>\n                </Form>   \n                </CardBody>        \n              </Card>\n            </Col>        \n          </Row>          \n        </Col>  \n        <Col md=\"5\" className=\"cardCo\">\n          <Card>        \n            <CardBody>\n            <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>Venta # {venta.id}</b></h6>              \n              <h5 className=\"text-center pio\"> Fecha Venta : <Moment format=\"DD-MM-YYYY\">{venta.fechaVenta}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Hora Venta : <Moment format=\"HH:mm:ss\">{venta.createdAt}</Moment></h5>             \n              </Col>            \n            </Row>\n        </div>\n        <div className=\"report-body\">    \n          <Row >\n          <Col md={12}>\n          <h4>Detalle</h4>  \n          <Table className=\"table-reporteh\">                      \n              <tbody>                  \n                <tr>                      \n                  <td><b>Nº Items</b></td>\n                  <td>{venta.nroItems}</td>                                          \n                  <td><b>Tipo : </b></td>\n                  <td>{venta.tipo}</td>\n                </tr>                \n                <tr>      \n                  <td><b>Vendedor : </b></td>\n                  <td>{venta.usuario.nombres || ''}</td> \n                  <td><b>Total : </b></td>                  \n                  <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(venta.totalGeneral)}</td>\n                                                        \n                </tr>\n                <tr>                        \n                  <td><b>Cliente : </b></td>\n                  <td>{venta.cliente.nombres || ''} </td>\n                  <td><b>Descuento : </b></td>\n                  <td>{venta.descuento || ''} </td>\n                </tr>\n                <tr>      \n                  <td><b>Glosa : </b></td>\n                  <td colSpan=\"3\">{ venta.observaciones }</td>                                       \n                </tr>                  \n              </tbody>          \n            </Table>\n            <h4>Items</h4>  \n            <Table className=\"table-reportesh\">\n            <thead>\n              <tr>  \n              <th width=\"15%\">Código</th>\n                <th width=\"45%\">Nombre</th>                                \n                <th width=\"10%\">Precio</th>\n                <th width=\"10%\">Cantidad</th>\n                <th width=\"20%\">Sub-Total</th>                                          \n              </tr>\n          </thead>\n          {ventaItems && (\n              <tbody>\n              {ventaItems.map((item, index) => (\n                  <tr key={item.articuloId}>                      \n                    <td>{item.codigo}</td>\n                    <td>{item.nombre}</td>                                                                                     \n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.valor)}</td>\n                    <td className=\"text-center\">{item.cantidad}</td>\n                    <td>{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.subTotal)}</td>\n                  </tr>  \n                  ))}\n          </tbody>\n          )}\n            </Table>\n          </Col>      \n        </Row>        \n        </div>           \n      </div>            \n            </CardBody>   \n          </Card>\n        </Col>        \n      </Row>                                         \n      </>  \n                                                   \n    );\n};\nexport default EditCobro;\n","import React,{useState, useCallback, useEffect} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { crudActions } from '../../../actions'\nimport TableCobros from \"./components/TableCobros\";\nimport SearchCobro from \"./components/SearchCobro\";\nimport EditCobro from \"./components/EditCobro\";\n\n\nconst Cobros = () => {\n  const dispatch = useDispatch() \n  const [component, setComponent] = useState();  \n\n  const getComponent = useCallback((io, key) =>{    \n      switch(io){\n        case 'data':\n          setComponent(<><SearchCobro getComponent={getComponent}/><TableCobros getComponent={getComponent}/></>)          \n          break;    \n        case 'new':\n          dispatch({type:'VENTA_RESET_ITEM'})\n          setComponent(<EditCobro getComponent={getComponent}/>)\n          break;\n        case 'edit':\n          dispatch(crudActions.GET_ITEM_LOAD('COBROS_ITEM','ventas',key)) \n          setComponent(<EditCobro getComponent={getComponent}/>)\n         \n          break;    \n        default:\n          break;\n      }\n  },[]);\n\n  useEffect(() => {\n    getComponent('data',1)\n\n    return () => {\n      console.log('descarga ventas')\n    };\n  }, []); \n\n \n\n  return(\n    <div className=\"content\">     \n      <div className=\"main-contenido\">                 \n        {component}      \n      </div>\n    </div>    \n  )\n\n};\nexport default Cobros;\n","import React, { useRef, useEffect }  from 'react'\nimport Moment from 'react-moment';\nimport {     \n  Table, Row, Col,   \n  Button } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport ReactToPrint from \"react-to-print\";\n\n\n export class ComponentToPrint extends React.PureComponent {\n  render() {\n    const fechaHoy = new Date(); \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))\n    return (\n    <>\n       <div className=\"reporte\">     \n        <div className=\"report-header\">        \n            <Row className=\"crl\">\n              <Col md={12}>\n              <h6 className=\"text-center pio\"> <b>INFORME DE COBROS </b></h6>                            \n              <h5 className=\"text-center pio\"> Desde: <Moment format=\"DD/MM/YYYY\">{this.props.pvalue1}</Moment> -  Hasta : <Moment format=\"DD/MM/YYYY\">{this.props.pvalue2}</Moment></h5>             \n              <h5 className=\"text-center pio\"> Estado : {this.props.pestado ? \"Pagados\":\"Pendientes\"}</h5>              \n              </Col>            \n            </Row>  \n        </div>\n        <div className=\"report-body mb-2\">  \n        <Row >\n          <Col md={12}>          \n            <Table className=\"table-reportesh mt-2\">\n            <thead>\n              <tr>  \n                <th width=\"5%\" className=\"text-dark\">Nº</th>                \n                <th width=\"25%\" className=\"text-dark\">Cliente</th>\n                <th width=\"30%\" className=\"text-dark\">Glosa</th>\n                <th width=\"10%\" className=\"text-dark\">F.Pago</th>\n                <th width=\"10%\" className=\"text-dark\">F.Pagado</th>\n                <th width=\"10%\" className=\"text-dark text-center\">Cuota</th>\n                <th width=\"10%\" className=\"text-dark text-center\">Monto</th>                                    \n              </tr>\n          </thead>\n          {this.props.pdata && (\n            <tbody>\n                {this.props.pdata.map((item) => (\n                  <tr key={item.id}>  \n                    <td>{item.id}</td>\n                    <td>{item.cliente}</td>                     \n                    <td>{item.observaciones}</td>\n                    <td><Moment format=\"DD-MM-YYYY\">{item.fechaPago}</Moment></td>                              \n                    <td>{item.fechaPagado === 'sin pago' ? item.fechaPagado: <Moment format=\"DD-MM-YYYY\">{item.fechaPagado}</Moment>} </td>\n                    <td className=\"text-center\">{item.cuota}</td>                                                  \n                    <td className=\"text-center\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(item.monto)}</td>              \n                    </tr>  \n                ))}\n                  <tr>\n                    <td className=\"centro\" colSpan=\"6\">TOTAL</td>                                        \n                    <td className=\"centro\">{new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(this.props.psuma)}</td>                                  \n                  </tr>\n            </tbody>\n          )}\n          </Table>\n            </Col>      \n        </Row>   \n        </div>    \n        <div className=\"report-footer\">        \n          <Row>\n            <Col md=\"6\">           \n              <p>Usuario: {this.props.puser.nombres}</p>\n            </Col>\n            <Col md=\"6\">           \n              <p>Fecha Emisión: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n            </Col>\n          </Row>          \n        </div>\n      </div>   \n    </> \n    );\n  }}\n\n\nfunction Pagos ({value1, value2, estado}) {    \n  const componentRef = useRef();   \n  const { montoTotal, total, cobros } = useSelector(state => state.informes)  \n  const user = JSON.parse(localStorage.getItem('@userUnity'))\n  const dispatch = useDispatch()\n  useEffect(() =>{      \n    return () =>{                   \n      dispatch({type:'INFORMES_RESET'}) \n\n    };\n  }, []);\n\nreturn(\n    <div className=\"creporte mt-2 ml-2 mr-2\">\n        <ReactToPrint\n            trigger={() => <Button className=\"fas fa-print btn-sm btn-info\">Imprimir</Button>}\n            content={() => componentRef.current}        \n        />\n        <ComponentToPrint\n            ref={componentRef}                      \n            puser={user}            \n            pdata={cobros}  \n            pestado={estado} \n            ptotal={total}                     \n            psuma={montoTotal}\n            pvalue1={value1}\n            pvalue2={value2}            \n            \n        />\n    </div>\n     )\n}\n\n\nexport default Pagos","import React,{useState, useEffect} from \"react\";\nimport { crudActions } from '../../../actions'\nimport { Form, Label, FormGroup, Row, Col, Button, Card, CardBody } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport SubMenu from '../../../components/subVenta.jsx';\nimport { InformeVentasRouter} from '../../../routes'\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport Select from 'react-select'\nimport { useDispatch } from 'react-redux'\nimport Cobros  from './Cobros';\nimport { customi } from '../../../helpers/customStyles'\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\nconst estados =  [{\"value\":true,\"label\":\"Pagados\"},{\"value\":false,\"label\":\"Pendientes\"}];\n\n              const defaultVal = (options, valor) =>{\n                return options.filter(item =>\n                    item.value === valor\n                  )\n              \n              }\nconst PagosView = () => {\n  const dispatch = useDispatch() \n  const [value1, onChange1] = useState(new Date());    \n  const [value2, onChange2] = useState(new Date());    \n  const [estado, setEstado] = useState(false);  \n    \n  \n  const submitHandle = event => {       \n    event.preventDefault()       \n    const item = {}\n    item.desde     = value1\n    item.hasta     = value2      \n    item.estado    = estado    \n    dispatch(crudActions.GET_INFORMES('INFORMES_VENTA_COBROS','chargerango',item))                 \n    \n  }\n  \n\n  useEffect(() => {\n    return () => {\n      console.log('descarga cliente')\n    };\n  }, []);\n\n  return(\n    <>    \n    <div className=\"content\">     \n      <div className=\"main-contenido\">\n      <SubMenu items={InformeVentasRouter} prop={'Cobros'}/>\n        <Row>\n        <Col md=\"3\">\n          <Card>        \n              <CardBody>\n              <Form onSubmit={ submitHandle}>\n                <Row form>\n                <Col><h6><b>FILTRO DE BUSQUEDA</b></h6></Col>\n                </Row>\n                <Row form>\n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eDesde\">Desde :</Label>                    \n                    <DatePicker locale=\"es\"selected={value1} onChange={(date) => onChange1(date)} />\n                  </FormGroup> \n                  </Col>\n                </Row>\n                <Row form>            \n                  <Col md=\"12\">\n                  <FormGroup >\n                    <Label for=\"eHasta\">Hasta : </Label>\n                    <DatePicker locale=\"es\"selected={value2} onChange={(date) => onChange2(date)} />\n                  </FormGroup>  \n                  </Col>\n                </Row>\n                <Row form>                  \n                  <Col md=\"12\"> \n                  <FormGroup>   \n                  <Label for=\"eRango\">Estado </Label>                 \n                    <Select                                                               \n                          defaultValue={estados[0]}\n                          name=\"estado\"    \n                          id=\"estado\"                    \n                          options={estados}                                                    \n                          value={defaultVal(estados,estado)} \n                          onChange={ (e)=> { setEstado(e.value)}}      \n                          styles={customi}                   \n                          />\n                  </FormGroup>\n                  </Col>                                                                                                                        \n                </Row>\n\n                \n              \n                <Row form>                  \n                  <Col md=\"5\">\n                  <FormGroup> \n                  <Button \n                      type=\"submit\"\n                      className=\"btn-md btn-info mt-4\">\n                      <FontAwesomeIcon icon={faSave} />  \n                      {' '} Generar\n                  </Button>\n                  </FormGroup> \n                  </Col>                                                                   \n                </Row>\n               </Form>   \n              </CardBody>                        \n            </Card>         \n        </Col>            \n        <Col md=\"9\">\n          <Cobros\n            value1={value1}\n            value2={value2}   \n            estado={estado}              \n          />\n        </Col>\n      </Row> \n      </div>    \n    </div>    \n    </>\n  )\n\n};\nexport default PagosView;\n","import React,{ useEffect, useCallback, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport { Row, Col, Button, Nav, Modal, ModalBody, NavItem } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usuarioActions, crudActions} from \"../../actions\"\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion, faBell, faEnvelope, faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Dashboard from \"../../pages/VENTAS/InicioView\";\nimport Clientes from \"../../pages/CRM/Clientes/ClientesView\"\nimport Ventas from \"../../pages/VENTAS/Ventas/Ventas\"\nimport Informes from \"../../pages/VENTAS/Informes/MovimientosView\"\nimport Cobros from \"../../pages/VENTAS/Cobros/Cobros\"\nimport Icobros from \"../../pages/VENTAS/Informes/CobrosView\"\n\nimport Moment from \"react-moment\";\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst fechaHoy = new Date()\nfunction VentasLayout(){\n  const dispatch = useDispatch() \n    const usuario = JSON.parse(localStorage.getItem('@userUnity'))\n    const [itemr,setItemr] = useState([])    \n    const modulos = JSON.parse(localStorage.getItem('@userItems')) \n    const empresa = JSON.parse(localStorage.getItem('@userEmpresa'))   \n    const { loading }= useSelector(state => state.usuarios)\n    const { titem } = useSelector(state => state.tdcs) \n\n\n    const changeModule = useCallback((name, tab, pky) =>{\n        let items = [...itemr];\n        modulos.map((prop, key)=>{\n          if(prop.icon === \"ventas\"){\n            let dato = {\n                path: prop.path,\n                name: prop.name,\n                icon: prop.icon,\n                component: verificar(prop.component),\n                layout: prop.layout\n            };\n            items.push(dato);\n          }  \n          return null;\n        })\n        setItemr(items)\n    })\n    const logoutt = () => {    \n      dispatch(usuarioActions.logout())  \n    };\n    const verificar = (component) => {\n        switch (component) {\n          case \"Dashboard\":\n            return Dashboard;\n          case \"Clientes\":\n            return Clientes;\n          case \"Ventas\":\n            return Ventas;          \n          case \"Cobros\":\n            return Cobros;                                                               \n          case \"Informes\":\n            return Informes;     \n          default:\n            return null;\n        }\n      };\n    \n    const getRoutes = (routes) =>{\n        return routes.map((prop, key) =>{\n            if(prop.layout === '/ventas'){\n                return(\n                    <Route\n                       path={prop.layout + prop.path}\n                       component={prop.component}\n                       key={key} \n                    />\n                );\n            }else{\n                return null;\n            }\n        })\n    };\n    \n\n    useEffect(() => {        \n        changeModule();\n        let ii ={\"pr\":\"0\"}\n        dispatch(crudActions.GET_SEARCH('TDCS_TITEM','tdcs',ii))  \n        return () => {\n         \n        };\n    }, []);\n\nreturn(\n    <div className=\"wrapper\">  \n      <div className=\"main-panel\" > \n         <Modal isOpen={loading} className=\"cargas\">          \n          <ModalBody className=\"carga\">\n            <MoonLoader color=\"#1fa2f2\" loading={loading} css={override} size={30} />                \n          </ModalBody>\n        </Modal>\n        <div className=\"nav-unity\" expand=\"lg\">   \n        <div className=\"sub-unity\">\n            <div className=\"left-unity\">\n            <Row > \n               <Col md=\"3\" className=\"tico\">\n                <NavLink                \n                    to={`/`} className=\"btn-barra\"> \n                   <FontAwesomeIcon icon={ faHome } />\n                </NavLink>\n               </Col> \n            </Row>    \n            </div>  \n            <div className=\"center-unity\">\n            <h6>VENTAS</h6>  \n            </div> \n            <div className=\"conta-unity\">\n              <Row className=\"barraUser\">                                  \n                <Col md={3}>                    \n                    <p>TDC: {new Intl.NumberFormat('es-'+empresa.pais,{style: \"currency\",currency:empresa.moneda,minimumFractionDigits: 2}).format(titem)} </p>\n                </Col>\n                <Col md={3}>                    \n                    <p>Moneda: {empresa.moneda}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Usuario: {usuario.username}</p>\n                </Col> \n                <Col md={3}>                    \n                    <p>Fecha: <Moment format=\"DD/MM/YYYY\">{fechaHoy}</Moment></p>\n                </Col>                               \n              </Row>\n            </div> \n            <div className=\"right-unity\">\n            <Row className=\"barraUser\">                                  \n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faEnvelope} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faBell} />  \n                    </div>                    \n                    </Col>\n                    <Col md={3}> \n                    <div className=\"circulu\">\n                        <FontAwesomeIcon icon={faQuestion} />  \n                    </div>                    \n                    </Col>\n                                                             \n                    <Col md={3} className=\"text-right\"> \n                      <div className=\"circulu\">\n                      <Button className=\"btn-barra\" onClick={() => {logoutt()}} >\n                        <FontAwesomeIcon icon={faSignOutAlt} />\n                      </Button>                            \n                      </div>\n                    </Col>   \n                  </Row>   \n            </div>  \n        </div>          \n        <Nav> \n  \n            <NavItem>       \n              <NavLink to=\"/ventas/inicio\" className=\"nav-link\" activeClassName=\"active\">            \n                <p className=\"text-white\">  Dashboard  </p>\n              </NavLink>          \n            </NavItem>\n            {itemr.map((prop, key) => (  \n              <NavItem key={key}>  \n                <NavLink                \n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\">               \n                  <p> {prop.name}</p>                    \n                </NavLink>\n              </NavItem>))\n            }\n     \n        </Nav>        \n        </div>  \n       \n\n        <Switch>   \n          {getRoutes(itemr)}\n          <Route path=\"/ventas/inicio\" component={Dashboard} /> \n          <Route path=\"/ventas/icobros\" component={Icobros} />\n        </Switch>             \n      </div>        \n    </div>    \n)    \n\n}\nexport default VentasLayout;\n\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n\nexport const PrivateRoute =({ component, ...rest})=>(\n        <Route\n        {...rest} render={props =>(\n            localStorage.getItem('@userToken') \n            ? ( React.createElement(component, props)\n            ):(<Redirect\n                to={{ pathname: '/login',\n                      state: { from: props.location } }}/>\n            ))}/>\n\n    );\n\n\n\n","import React from 'react';\nimport \"./assets/css/erp.css\";\nimport { Router , Route, Switch, Redirect } from 'react-router-dom'\nimport AdminLayout from './layout/Compras/Compras.jsx'\nimport PostLayout from './layout/Post/Post.jsx'\nimport CrmLayout from './layout/Crm/Crm.jsx'\nimport InicioLayout from './layout/Inicio/Inicio.jsx'\nimport FinanzasLayout from './layout/Finanzas/Finanzas.jsx'\nimport TpdvLayout from './layout/Tpdv/Tpdv.jsx'\nimport ToolLayout from './layout/Tool/Tool.jsx'\nimport RRhhLayout from './layout/Rrhh/Rrhh.jsx'\nimport InventariosLayout from './layout/Inventarios/Inventario.jsx'\nimport VentasLayout from './layout/Ventas/Ventas.jsx'\n\nimport { Provider } from \"react-redux\";\nimport { store, history } from \"./helpers\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport ReduxToastr from 'react-redux-toastr'\n\nimport './assets/css/core/main.css';\nimport './assets/css/daygrid/main.css';\nimport './assets/css/timegrid/main.css'\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nfunction App() {\n  \n  return (    \n      <Provider store={store}>  \n       <ReduxToastr\n        timeOut={1100}\n        newestOnTop={false}\n        preventDuplicates\n        progressBar={true}\n        position=\"bottom-right\"\n        getState={(state) => state.toastr} // This is the default\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"        \n        closeOnToastrClick/>   \n        <Router history={history}>\n          <Switch>      \n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <PostLayout {...props} />}\n            />            \n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/inicio/dashboard\" />}\n            />        \n            <Route\n              exact\n              path=\"/inicio\"\n              render={() => <Redirect to=\"/inicio/dashboard\" />}\n            />                                          \n            <PrivateRoute path=\"/compras\" component={AdminLayout} />            \n            <PrivateRoute path=\"/ventas\" component={VentasLayout} />\n            <PrivateRoute path=\"/inicio\" component={InicioLayout} />            \n            <PrivateRoute path=\"/crm\" component={CrmLayout} />\n            <PrivateRoute path=\"/finanzas\" component={FinanzasLayout} />\n            <PrivateRoute path=\"/tpdv\" component={TpdvLayout} />\n            <PrivateRoute path=\"/tools\" component={ToolLayout} />\n            <PrivateRoute path=\"/rrhh\" component={RRhhLayout} />\n            <PrivateRoute path=\"/inventarios\" component={InventariosLayout} />\n          </Switch>\n        </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}